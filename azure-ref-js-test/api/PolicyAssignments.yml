items:
  - uid: PolicyAssignments
    id: PolicyAssignments
    name: PolicyAssignments
    type: Class
    syntax:
      content: PolicyAssignments
    fullName: PolicyAssignments
    children:
      - 'PolicyAssignments#client'
      - 'PolicyAssignments#listForResource'
      - 'PolicyAssignments#listForResourceGroup'
      - 'PolicyAssignments#deleteMethod'
      - 'PolicyAssignments#create'
      - 'PolicyAssignments#get'
      - 'PolicyAssignments#deleteById'
      - 'PolicyAssignments#createById'
      - 'PolicyAssignments#getById'
      - 'PolicyAssignments#list'
      - 'PolicyAssignments#listForScope'
      - 'PolicyAssignments#listForResourceNext'
      - 'PolicyAssignments#listForResourceGroupNext'
      - 'PolicyAssignments#listNext'
      - 'PolicyAssignments#listForScopeNext'
  - uid: 'PolicyAssignments#client'
    id: client
    parent: PolicyAssignments
    name: client
    type: Field
    syntax:
      content: client
    fullName: PolicyAssignments.client
  - uid: 'PolicyAssignments#listForResource'
    id: listForResource
    parent: PolicyAssignments
    name: >-
      listForResource(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, options, callback)
    summary: Gets policy assignments of the resource.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The name of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource path.
        - id: resourceType
          type: string
          description: The resource type.
        - id: resourceName
          type: string
          description: The resource name.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.filter
          type: string
          description: The filter to apply on the operation.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listForResource(resourceGroupName, resourceProviderNamespace,
        parentResourcePath, resourceType, resourceName, options, callback);
    fullName: >-
      PolicyAssignments.listForResource(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      options, callback)
    children:
      - 'PolicyAssignments#listForResource~client'
      - 'PolicyAssignments#listForResource~callback'
      - 'PolicyAssignments#listForResource~options'
      - 'PolicyAssignments#listForResource~filter'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~queryParameters'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~regex'
      - 'PolicyAssignments#listForResource~requestUrl'
      - 'PolicyAssignments#listForResource~httpRequest'
      - 'PolicyAssignments#listForResource~headerName'
  - uid: 'PolicyAssignments#listForResourceGroup'
    id: listForResourceGroup
    parent: PolicyAssignments
    name: 'listForResourceGroup(resourceGroupName, options, callback)'
    summary: Gets policy assignments of the resource group.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Resource group name.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.filter
          type: string
          description: The filter to apply on the operation.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listForResourceGroup(resourceGroupName, options, callback);'
    fullName: >-
      PolicyAssignments.listForResourceGroup(resourceGroupName, options,
      callback)
    children:
      - 'PolicyAssignments#listForResourceGroup~client'
      - 'PolicyAssignments#listForResourceGroup~callback'
      - 'PolicyAssignments#listForResourceGroup~options'
      - 'PolicyAssignments#listForResourceGroup~filter'
      - 'PolicyAssignments#listForResourceGroup~requestUrl'
      - 'PolicyAssignments#listForResourceGroup~requestUrl'
      - 'PolicyAssignments#listForResourceGroup~requestUrl'
      - 'PolicyAssignments#listForResourceGroup~queryParameters'
      - 'PolicyAssignments#listForResourceGroup~requestUrl'
      - 'PolicyAssignments#listForResourceGroup~regex'
      - 'PolicyAssignments#listForResourceGroup~requestUrl'
      - 'PolicyAssignments#listForResourceGroup~httpRequest'
      - 'PolicyAssignments#listForResourceGroup~headerName'
  - uid: 'PolicyAssignments#deleteMethod'
    id: deleteMethod
    parent: PolicyAssignments
    name: 'deleteMethod(scope, policyAssignmentName, options, callback)'
    summary: Delete policy assignment.
    type: Method
    syntax:
      parameters:
        - id: scope
          type: string
          description: Scope.
        - id: policyAssignmentName
          type: string
          description: Policy assignment name.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function deleteMethod(scope, policyAssignmentName, options, callback);'
    fullName: >-
      PolicyAssignments.deleteMethod(scope, policyAssignmentName, options,
      callback)
    children:
      - 'PolicyAssignments#deleteMethod~client'
      - 'PolicyAssignments#deleteMethod~callback'
      - 'PolicyAssignments#deleteMethod~options'
      - 'PolicyAssignments#deleteMethod~requestUrl'
      - 'PolicyAssignments#deleteMethod~requestUrl'
      - 'PolicyAssignments#deleteMethod~requestUrl'
      - 'PolicyAssignments#deleteMethod~requestUrl'
      - 'PolicyAssignments#deleteMethod~queryParameters'
      - 'PolicyAssignments#deleteMethod~requestUrl'
      - 'PolicyAssignments#deleteMethod~regex'
      - 'PolicyAssignments#deleteMethod~requestUrl'
      - 'PolicyAssignments#deleteMethod~httpRequest'
      - 'PolicyAssignments#deleteMethod~headerName'
  - uid: 'PolicyAssignments#create'
    id: create
    parent: PolicyAssignments
    name: 'create(scope, policyAssignmentName, parameters, options, callback)'
    summary: Create policy assignment.
    type: Method
    syntax:
      parameters:
        - id: scope
          type: string
          description: Scope.
        - id: policyAssignmentName
          type: string
          description: Policy assignment name.
        - id: parameters
          type: object
          description: Policy assignment.
        - id: parameters.properties
          type: object
          description: "Gets or sets the policy assignment\rproperties."
        - id: parameters.properties.scope
          type: string
          description: "Gets or sets the policy\rassignment scope."
        - id: parameters.properties.displayName
          type: string
          description: "Gets or sets the policy\rassignment display name."
        - id: parameters.properties.policyDefinitionId
          type: string
          description: "Gets or sets the\rpolicy definition Id."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function create(scope, policyAssignmentName, parameters, options,
        callback);
    fullName: >-
      PolicyAssignments.create(scope, policyAssignmentName, parameters, options,
      callback)
    children:
      - 'PolicyAssignments#create~client'
      - 'PolicyAssignments#create~callback'
      - 'PolicyAssignments#create~options'
      - 'PolicyAssignments#create~requestUrl'
      - 'PolicyAssignments#create~requestUrl'
      - 'PolicyAssignments#create~requestUrl'
      - 'PolicyAssignments#create~requestUrl'
      - 'PolicyAssignments#create~queryParameters'
      - 'PolicyAssignments#create~requestUrl'
      - 'PolicyAssignments#create~regex'
      - 'PolicyAssignments#create~requestUrl'
      - 'PolicyAssignments#create~httpRequest'
      - 'PolicyAssignments#create~headerName'
      - 'PolicyAssignments#create~requestContent'
      - 'PolicyAssignments#create~requestModel'
      - 'PolicyAssignments#create~requestModelMapper'
      - 'PolicyAssignments#create~requestModel'
      - 'PolicyAssignments#create~requestContent'
      - 'PolicyAssignments#create~serializationError'
  - uid: 'PolicyAssignments#get'
    id: get
    parent: PolicyAssignments
    name: 'get(scope, policyAssignmentName, options, callback)'
    summary: Get single policy assignment.
    type: Method
    syntax:
      parameters:
        - id: scope
          type: string
          description: Scope.
        - id: policyAssignmentName
          type: string
          description: Policy assignment name.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function get(scope, policyAssignmentName, options, callback);'
    fullName: 'PolicyAssignments.get(scope, policyAssignmentName, options, callback)'
    children:
      - 'PolicyAssignments#get~client'
      - 'PolicyAssignments#get~callback'
      - 'PolicyAssignments#get~options'
      - 'PolicyAssignments#get~requestUrl'
      - 'PolicyAssignments#get~requestUrl'
      - 'PolicyAssignments#get~requestUrl'
      - 'PolicyAssignments#get~requestUrl'
      - 'PolicyAssignments#get~queryParameters'
      - 'PolicyAssignments#get~requestUrl'
      - 'PolicyAssignments#get~regex'
      - 'PolicyAssignments#get~requestUrl'
      - 'PolicyAssignments#get~httpRequest'
      - 'PolicyAssignments#get~headerName'
  - uid: 'PolicyAssignments#deleteById'
    id: deleteById
    parent: PolicyAssignments
    name: 'deleteById(policyAssignmentId, options, callback)'
    summary: Delete policy assignment.
    type: Method
    syntax:
      parameters:
        - id: policyAssignmentId
          type: string
          description: Policy assignment Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function deleteById(policyAssignmentId, options, callback);'
    fullName: 'PolicyAssignments.deleteById(policyAssignmentId, options, callback)'
    children:
      - 'PolicyAssignments#deleteById~client'
      - 'PolicyAssignments#deleteById~callback'
      - 'PolicyAssignments#deleteById~options'
      - 'PolicyAssignments#deleteById~requestUrl'
      - 'PolicyAssignments#deleteById~requestUrl'
      - 'PolicyAssignments#deleteById~requestUrl'
      - 'PolicyAssignments#deleteById~queryParameters'
      - 'PolicyAssignments#deleteById~requestUrl'
      - 'PolicyAssignments#deleteById~regex'
      - 'PolicyAssignments#deleteById~requestUrl'
      - 'PolicyAssignments#deleteById~httpRequest'
      - 'PolicyAssignments#deleteById~headerName'
  - uid: 'PolicyAssignments#createById'
    id: createById
    parent: PolicyAssignments
    name: 'createById(policyAssignmentId, parameters, options, callback)'
    summary: Create policy assignment by Id.
    type: Method
    syntax:
      parameters:
        - id: policyAssignmentId
          type: string
          description: Policy assignment Id
        - id: parameters
          type: object
          description: Policy assignment.
        - id: parameters.properties
          type: object
          description: "Gets or sets the policy assignment\rproperties."
        - id: parameters.properties.scope
          type: string
          description: "Gets or sets the policy\rassignment scope."
        - id: parameters.properties.displayName
          type: string
          description: "Gets or sets the policy\rassignment display name."
        - id: parameters.properties.policyDefinitionId
          type: string
          description: "Gets or sets the\rpolicy definition Id."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function createById(policyAssignmentId, parameters, options, callback);'
    fullName: >-
      PolicyAssignments.createById(policyAssignmentId, parameters, options,
      callback)
    children:
      - 'PolicyAssignments#createById~client'
      - 'PolicyAssignments#createById~callback'
      - 'PolicyAssignments#createById~options'
      - 'PolicyAssignments#createById~requestUrl'
      - 'PolicyAssignments#createById~requestUrl'
      - 'PolicyAssignments#createById~requestUrl'
      - 'PolicyAssignments#createById~queryParameters'
      - 'PolicyAssignments#createById~requestUrl'
      - 'PolicyAssignments#createById~regex'
      - 'PolicyAssignments#createById~requestUrl'
      - 'PolicyAssignments#createById~httpRequest'
      - 'PolicyAssignments#createById~headerName'
      - 'PolicyAssignments#createById~requestContent'
      - 'PolicyAssignments#createById~requestModel'
      - 'PolicyAssignments#createById~requestModelMapper'
      - 'PolicyAssignments#createById~requestModel'
      - 'PolicyAssignments#createById~requestContent'
      - 'PolicyAssignments#createById~serializationError'
  - uid: 'PolicyAssignments#getById'
    id: getById
    parent: PolicyAssignments
    name: 'getById(policyAssignmentId, options, callback)'
    summary: Get single policy assignment.
    type: Method
    syntax:
      parameters:
        - id: policyAssignmentId
          type: string
          description: Policy assignment Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getById(policyAssignmentId, options, callback);'
    fullName: 'PolicyAssignments.getById(policyAssignmentId, options, callback)'
    children:
      - 'PolicyAssignments#getById~client'
      - 'PolicyAssignments#getById~callback'
      - 'PolicyAssignments#getById~options'
      - 'PolicyAssignments#getById~requestUrl'
      - 'PolicyAssignments#getById~requestUrl'
      - 'PolicyAssignments#getById~requestUrl'
      - 'PolicyAssignments#getById~queryParameters'
      - 'PolicyAssignments#getById~requestUrl'
      - 'PolicyAssignments#getById~regex'
      - 'PolicyAssignments#getById~requestUrl'
      - 'PolicyAssignments#getById~httpRequest'
      - 'PolicyAssignments#getById~headerName'
  - uid: 'PolicyAssignments#list'
    id: list
    parent: PolicyAssignments
    name: 'list(options, callback)'
    summary: Gets policy assignments of the subscription.
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.filter
          type: string
          description: The filter to apply on the operation.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(options, callback);'
    fullName: 'PolicyAssignments.list(options, callback)'
    children:
      - 'PolicyAssignments#list~client'
      - 'PolicyAssignments#list~callback'
      - 'PolicyAssignments#list~options'
      - 'PolicyAssignments#list~filter'
      - 'PolicyAssignments#list~requestUrl'
      - 'PolicyAssignments#list~requestUrl'
      - 'PolicyAssignments#list~queryParameters'
      - 'PolicyAssignments#list~requestUrl'
      - 'PolicyAssignments#list~regex'
      - 'PolicyAssignments#list~requestUrl'
      - 'PolicyAssignments#list~httpRequest'
      - 'PolicyAssignments#list~headerName'
  - uid: 'PolicyAssignments#listForScope'
    id: listForScope
    parent: PolicyAssignments
    name: 'listForScope(scope, options, callback)'
    summary: Gets policy assignments of the scope.
    type: Method
    syntax:
      parameters:
        - id: scope
          type: string
          description: Scope.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.filter
          type: string
          description: The filter to apply on the operation.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listForScope(scope, options, callback);'
    fullName: 'PolicyAssignments.listForScope(scope, options, callback)'
    children:
      - 'PolicyAssignments#listForScope~client'
      - 'PolicyAssignments#listForScope~callback'
      - 'PolicyAssignments#listForScope~options'
      - 'PolicyAssignments#listForScope~filter'
      - 'PolicyAssignments#listForScope~requestUrl'
      - 'PolicyAssignments#listForScope~requestUrl'
      - 'PolicyAssignments#listForScope~requestUrl'
      - 'PolicyAssignments#listForScope~queryParameters'
      - 'PolicyAssignments#listForScope~requestUrl'
      - 'PolicyAssignments#listForScope~regex'
      - 'PolicyAssignments#listForScope~requestUrl'
      - 'PolicyAssignments#listForScope~httpRequest'
      - 'PolicyAssignments#listForScope~headerName'
  - uid: 'PolicyAssignments#listForResourceNext'
    id: listForResourceNext
    parent: PolicyAssignments
    name: 'listForResourceNext(nextPageLink, options, callback)'
    summary: Gets policy assignments of the resource.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listForResourceNext(nextPageLink, options, callback);'
    fullName: 'PolicyAssignments.listForResourceNext(nextPageLink, options, callback)'
    children:
      - 'PolicyAssignments#listForResourceNext~client'
      - 'PolicyAssignments#listForResourceNext~callback'
      - 'PolicyAssignments#listForResourceNext~options'
      - 'PolicyAssignments#listForResourceNext~requestUrl'
      - 'PolicyAssignments#listForResourceNext~requestUrl'
      - 'PolicyAssignments#listForResourceNext~regex'
      - 'PolicyAssignments#listForResourceNext~requestUrl'
      - 'PolicyAssignments#listForResourceNext~httpRequest'
      - 'PolicyAssignments#listForResourceNext~headerName'
  - uid: 'PolicyAssignments#listForResourceGroupNext'
    id: listForResourceGroupNext
    parent: PolicyAssignments
    name: 'listForResourceGroupNext(nextPageLink, options, callback)'
    summary: Gets policy assignments of the resource group.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listForResourceGroupNext(nextPageLink, options, callback);'
    fullName: >-
      PolicyAssignments.listForResourceGroupNext(nextPageLink, options,
      callback)
    children:
      - 'PolicyAssignments#listForResourceGroupNext~client'
      - 'PolicyAssignments#listForResourceGroupNext~callback'
      - 'PolicyAssignments#listForResourceGroupNext~options'
      - 'PolicyAssignments#listForResourceGroupNext~requestUrl'
      - 'PolicyAssignments#listForResourceGroupNext~requestUrl'
      - 'PolicyAssignments#listForResourceGroupNext~regex'
      - 'PolicyAssignments#listForResourceGroupNext~requestUrl'
      - 'PolicyAssignments#listForResourceGroupNext~httpRequest'
      - 'PolicyAssignments#listForResourceGroupNext~headerName'
  - uid: 'PolicyAssignments#listNext'
    id: listNext
    parent: PolicyAssignments
    name: 'listNext(nextPageLink, options, callback)'
    summary: Gets policy assignments of the subscription.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listNext(nextPageLink, options, callback);'
    fullName: 'PolicyAssignments.listNext(nextPageLink, options, callback)'
    children:
      - 'PolicyAssignments#listNext~client'
      - 'PolicyAssignments#listNext~callback'
      - 'PolicyAssignments#listNext~options'
      - 'PolicyAssignments#listNext~requestUrl'
      - 'PolicyAssignments#listNext~requestUrl'
      - 'PolicyAssignments#listNext~regex'
      - 'PolicyAssignments#listNext~requestUrl'
      - 'PolicyAssignments#listNext~httpRequest'
      - 'PolicyAssignments#listNext~headerName'
  - uid: 'PolicyAssignments#listForScopeNext'
    id: listForScopeNext
    parent: PolicyAssignments
    name: 'listForScopeNext(nextPageLink, options, callback)'
    summary: Gets policy assignments of the scope.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyAssignmentListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listForScopeNext(nextPageLink, options, callback);'
    fullName: 'PolicyAssignments.listForScopeNext(nextPageLink, options, callback)'
    children:
      - 'PolicyAssignments#listForScopeNext~client'
      - 'PolicyAssignments#listForScopeNext~callback'
      - 'PolicyAssignments#listForScopeNext~options'
      - 'PolicyAssignments#listForScopeNext~requestUrl'
      - 'PolicyAssignments#listForScopeNext~requestUrl'
      - 'PolicyAssignments#listForScopeNext~regex'
      - 'PolicyAssignments#listForScopeNext~requestUrl'
      - 'PolicyAssignments#listForScopeNext~httpRequest'
      - 'PolicyAssignments#listForScopeNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false

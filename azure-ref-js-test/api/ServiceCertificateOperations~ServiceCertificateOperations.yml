items:
  - uid: ServiceCertificateOperations~ServiceCertificateOperations
    id: ServiceCertificateOperations
    parent: ServiceCertificateOperations
    name: ServiceCertificateOperations
    type: Class
    syntax:
      content: ServiceCertificateOperations
    fullName: ServiceCertificateOperations.ServiceCertificateOperations
    children:
      - 'ServiceCertificateOperations~ServiceCertificateOperations#client'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#beginCreating'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#create'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#deleteMethod'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list'
  - uid: 'ServiceCertificateOperations~ServiceCertificateOperations#client'
    id: client
    parent: ServiceCertificateOperations~ServiceCertificateOperations
    name: client
    type: Field
    syntax:
      content: client
    fullName: ServiceCertificateOperations~ServiceCertificateOperations.client
  - uid: 'ServiceCertificateOperations~ServiceCertificateOperations#beginCreating'
    id: beginCreating
    parent: ServiceCertificateOperations~ServiceCertificateOperations
    name: >-
      beginCreating(serviceName, parameters, parameters.data,
      parameters.certificateFormat, parameters.password, callback)
    summary: "The Begin Creating Service Certificate operation adds a certificate to a\rhosted service. This operation is an asynchronous operation. To determine\rwhether the management service has finished processing the request, call\rGet Operation Status.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460817.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The DNS prefix name of your service.
        - id: parameters
          type: ServiceCertificateCreateParameters
          description: "Parameters supplied\rto the Begin Creating Service Certificate operation."
        - id: parameters.data
          type: buffer
          description: The pfx or cer file.
        - id: parameters.certificateFormat
          type: CertificateFormat
          description: "The service\rcertificate format. Azure supports the pfx and cer file formats."
        - id: parameters.password
          type: string
          description: "The password for a pfx certificate.\rA cer certificate does not require a password."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: >-
        function beginCreating(serviceName, parameters, parameters.data,
        parameters.certificateFormat, parameters.password, callback);
    fullName: >-
      ServiceCertificateOperations~ServiceCertificateOperations.beginCreating(serviceName,
      parameters, parameters.data, parameters.certificateFormat,
      parameters.password, callback)
    children:
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~baseUrl
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~baseUrl
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~httpRequest
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~requestContent
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~requestDoc
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~certificateFileElement
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~dataElement
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~certificateFormatElement
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~passwordElement
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginCreating~requestContent
  - uid: 'ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting'
    id: beginDeleting
    parent: ServiceCertificateOperations~ServiceCertificateOperations
    name: >-
      beginDeleting(parameters, parameters.serviceName,
      parameters.thumbprintAlgorithm, parameters.thumbprint, callback)
    summary: "The Begin Deleting Service Certificate operation deletes a service\rcertificate from the certificate store of a hosted service. This\roperation is an asynchronous operation. To determine whether the\rmanagement service has finished processing the request, call Get\rOperation Status.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460803.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: parameters
          type: ServiceCertificateDeleteParameters
          description: "Parameters supplied\rto the Begin Deleting Service Certificate operation."
        - id: parameters.serviceName
          type: string
          description: The DNS prefix name of your service.
        - id: parameters.thumbprintAlgorithm
          type: string
          description: "The algorithm for the\rcertificate's thumbprint."
        - id: parameters.thumbprint
          type: string
          description: "The hexadecimal representation of\rthe thumbprint."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: >-
        function beginDeleting(parameters, parameters.serviceName,
        parameters.thumbprintAlgorithm, parameters.thumbprint, callback);
    fullName: >-
      ServiceCertificateOperations~ServiceCertificateOperations.beginDeleting(parameters,
      parameters.serviceName, parameters.thumbprintAlgorithm,
      parameters.thumbprint, callback)
    children:
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~baseUrl
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~baseUrl
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~url2
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#beginDeleting~httpRequest
  - uid: 'ServiceCertificateOperations~ServiceCertificateOperations#create'
    id: create
    parent: ServiceCertificateOperations~ServiceCertificateOperations
    name: >-
      create(serviceName, parameters, parameters.data,
      parameters.certificateFormat, parameters.password, callback)
    summary: "The Create Service Certificate operation adds a certificate to a hosted\rservice. This operation is an asynchronous operation. To determine\rwhether the management service has finished processing the request, call\rGet Operation Status.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460817.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The DNS prefix name of your service.
        - id: parameters
          type: ServiceCertificateCreateParameters
          description: "Parameters supplied\rto the Create Service Certificate operation."
        - id: parameters.data
          type: buffer
          description: The pfx or cer file.
        - id: parameters.certificateFormat
          type: CertificateFormat
          description: "The service\rcertificate format. Azure supports the pfx and cer file formats."
        - id: parameters.password
          type: string
          description: "The password for a pfx certificate.\rA cer certificate does not require a password."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: >-
        function create(serviceName, parameters, parameters.data,
        parameters.certificateFormat, parameters.password, callback);
    fullName: >-
      ServiceCertificateOperations~ServiceCertificateOperations.create(serviceName,
      parameters, parameters.data, parameters.certificateFormat,
      parameters.password, callback)
    children:
      - 'ServiceCertificateOperations~ServiceCertificateOperations#create~client2'
  - uid: 'ServiceCertificateOperations~ServiceCertificateOperations#deleteMethod'
    id: deleteMethod
    parent: ServiceCertificateOperations~ServiceCertificateOperations
    name: >-
      deleteMethod(parameters, parameters.serviceName,
      parameters.thumbprintAlgorithm, parameters.thumbprint, callback)
    summary: "The Delete Service Certificate operation deletes a service certificate\rfrom the certificate store of a hosted service. This operation is an\rasynchronous operation. To determine whether the management service has\rfinished processing the request, call Get Operation Status.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460803.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: parameters
          type: ServiceCertificateDeleteParameters
          description: "Parameters supplied\rto the Delete Service Certificate operation."
        - id: parameters.serviceName
          type: string
          description: The DNS prefix name of your service.
        - id: parameters.thumbprintAlgorithm
          type: string
          description: "The algorithm for the\rcertificate's thumbprint."
        - id: parameters.thumbprint
          type: string
          description: "The hexadecimal representation of\rthe thumbprint."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: >-
        function deleteMethod(parameters, parameters.serviceName,
        parameters.thumbprintAlgorithm, parameters.thumbprint, callback);
    fullName: >-
      ServiceCertificateOperations~ServiceCertificateOperations.deleteMethod(parameters,
      parameters.serviceName, parameters.thumbprintAlgorithm,
      parameters.thumbprint, callback)
    children:
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#deleteMethod~client2
  - uid: 'ServiceCertificateOperations~ServiceCertificateOperations#get'
    id: get
    parent: ServiceCertificateOperations~ServiceCertificateOperations
    name: >-
      get(parameters, parameters.serviceName, parameters.thumbprintAlgorithm,
      parameters.thumbprint, callback)
    summary: "The Get Service Certificate operation returns the public data for the\rspecified X.509 certificate associated with a hosted service.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460792.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: parameters
          type: ServiceCertificateGetParameters
          description: "Parameters supplied to\rthe Get Service Certificate operation."
        - id: parameters.serviceName
          type: string
          description: The DNS prefix name of your service.
        - id: parameters.thumbprintAlgorithm
          type: string
          description: "The algorithm for the\rcertificate's thumbprint."
        - id: parameters.thumbprint
          type: string
          description: "The hexadecimal representation of\rthe thumbprint."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: >-
        function get(parameters, parameters.serviceName,
        parameters.thumbprintAlgorithm, parameters.thumbprint, callback);
    fullName: >-
      ServiceCertificateOperations~ServiceCertificateOperations.get(parameters,
      parameters.serviceName, parameters.thumbprintAlgorithm,
      parameters.thumbprint, callback)
    children:
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~baseUrl'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~baseUrl'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#get~url2'
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#get~httpRequest
  - uid: 'ServiceCertificateOperations~ServiceCertificateOperations#list'
    id: list
    parent: ServiceCertificateOperations~ServiceCertificateOperations
    name: 'list(serviceName, callback)'
    summary: "The List Service Certificates operation lists all of the service\rcertificates associated with the specified hosted service.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154105.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The DNS prefix name of your hosted service.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function list(serviceName, callback);'
    fullName: >-
      ServiceCertificateOperations~ServiceCertificateOperations.list(serviceName,
      callback)
    children:
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~baseUrl'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~baseUrl'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - 'ServiceCertificateOperations~ServiceCertificateOperations#list~url2'
      - >-
        ServiceCertificateOperations~ServiceCertificateOperations#list~httpRequest
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: ServiceCertificateCreateParameters
    name: ServiceCertificateCreateParameters
    fullName: ServiceCertificateCreateParameters
    isExternal: true
  - uid: buffer
    name: buffer
    fullName: buffer
    isExternal: true
  - uid: CertificateFormat
    name: CertificateFormat
    fullName: CertificateFormat
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: Stream
    name: Stream
    fullName: Stream
    isExternal: true
  - uid: ServiceCertificateDeleteParameters
    name: ServiceCertificateDeleteParameters
    fullName: ServiceCertificateDeleteParameters
    isExternal: true
  - uid: ServiceCertificateGetParameters
    name: ServiceCertificateGetParameters
    fullName: ServiceCertificateGetParameters
    isExternal: true

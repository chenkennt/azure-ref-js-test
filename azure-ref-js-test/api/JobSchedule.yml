items:
  - uid: JobSchedule
    id: JobSchedule
    name: JobSchedule
    type: Class
    syntax:
      content: JobSchedule
    fullName: JobSchedule
    children:
      - 'JobSchedule#client'
      - 'JobSchedule#exists'
      - 'JobSchedule#deleteMethod'
      - 'JobSchedule#get'
      - 'JobSchedule#patch'
      - 'JobSchedule#update'
      - 'JobSchedule#disable'
      - 'JobSchedule#enable'
      - 'JobSchedule#terminate'
      - 'JobSchedule#add'
      - 'JobSchedule#list'
      - 'JobSchedule#listNext'
  - uid: 'JobSchedule#client'
    id: client
    parent: JobSchedule
    name: client
    type: Field
    syntax:
      content: client
    fullName: JobSchedule.client
  - uid: 'JobSchedule#exists'
    id: exists
    parent: JobSchedule
    name: 'exists(jobScheduleId, options, callback)'
    summary: Checks the specified job schedule exists.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: "The id of the job schedule which you want to\rcheck."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleExistsOptions
          type: object
          description: "Additional parameters\rfor the operation"
        - id: options.jobScheduleExistsOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.jobScheduleExistsOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleExistsOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleExistsOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.jobScheduleExistsOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobScheduleExistsOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.jobScheduleExistsOptions.ifModifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.jobScheduleExistsOptions.ifUnmodifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has not been\rmodified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function exists(jobScheduleId, options, callback);'
    fullName: 'JobSchedule.exists(jobScheduleId, options, callback)'
    children:
      - 'JobSchedule#exists~client'
      - 'JobSchedule#exists~callback'
      - 'JobSchedule#exists~options'
      - 'JobSchedule#exists~jobScheduleExistsOptions'
      - 'JobSchedule#exists~timeout'
      - 'JobSchedule#exists~clientRequestId'
      - 'JobSchedule#exists~returnClientRequestId'
      - 'JobSchedule#exists~ocpDate'
      - 'JobSchedule#exists~ifMatch'
      - 'JobSchedule#exists~ifNoneMatch'
      - 'JobSchedule#exists~ifModifiedSince'
      - 'JobSchedule#exists~ifUnmodifiedSince'
      - 'JobSchedule#exists~timeout'
      - 'JobSchedule#exists~clientRequestId'
      - 'JobSchedule#exists~returnClientRequestId'
      - 'JobSchedule#exists~ocpDate'
      - 'JobSchedule#exists~ifMatch'
      - 'JobSchedule#exists~ifNoneMatch'
      - 'JobSchedule#exists~ifModifiedSince'
      - 'JobSchedule#exists~ifUnmodifiedSince'
      - 'JobSchedule#exists~requestUrl'
      - 'JobSchedule#exists~requestUrl'
      - 'JobSchedule#exists~queryParameters'
      - 'JobSchedule#exists~requestUrl'
      - 'JobSchedule#exists~regex'
      - 'JobSchedule#exists~requestUrl'
      - 'JobSchedule#exists~httpRequest'
      - 'JobSchedule#exists~headerName'
  - uid: 'JobSchedule#deleteMethod'
    id: deleteMethod
    parent: JobSchedule
    name: 'deleteMethod(jobScheduleId, options, callback)'
    summary: Deletes a job schedule from the specified account.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: The id of the job schedule to delete.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleDeleteMethodOptions
          type: object
          description: "Additional\rparameters for the operation"
        - id: options.jobScheduleDeleteMethodOptions.timeout
          type: number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
        - id: options.jobScheduleDeleteMethodOptions.clientRequestId
          type: string
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleDeleteMethodOptions.returnClientRequestId
          type: boolean
          description: "Whether the\rserver should return the client-request-id identifier in the response."
        - id: options.jobScheduleDeleteMethodOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.jobScheduleDeleteMethodOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobScheduleDeleteMethodOptions.ifNoneMatch
          type: string
          description: "An\rETag is specified. Specify this header to perform the operation only if\rthe resource's ETag does not match the specified ETag."
        - id: options.jobScheduleDeleteMethodOptions.ifModifiedSince
          type: date
          description: "Specify this header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.jobScheduleDeleteMethodOptions.ifUnmodifiedSince
          type: date
          description: "Specify this header to perform the operation only if the resource has not\rbeen modified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function deleteMethod(jobScheduleId, options, callback);'
    fullName: 'JobSchedule.deleteMethod(jobScheduleId, options, callback)'
    children:
      - 'JobSchedule#deleteMethod~client'
      - 'JobSchedule#deleteMethod~callback'
      - 'JobSchedule#deleteMethod~options'
      - 'JobSchedule#deleteMethod~jobScheduleDeleteMethodOptions'
      - 'JobSchedule#deleteMethod~timeout'
      - 'JobSchedule#deleteMethod~clientRequestId'
      - 'JobSchedule#deleteMethod~returnClientRequestId'
      - 'JobSchedule#deleteMethod~ocpDate'
      - 'JobSchedule#deleteMethod~ifMatch'
      - 'JobSchedule#deleteMethod~ifNoneMatch'
      - 'JobSchedule#deleteMethod~ifModifiedSince'
      - 'JobSchedule#deleteMethod~ifUnmodifiedSince'
      - 'JobSchedule#deleteMethod~timeout'
      - 'JobSchedule#deleteMethod~clientRequestId'
      - 'JobSchedule#deleteMethod~returnClientRequestId'
      - 'JobSchedule#deleteMethod~ocpDate'
      - 'JobSchedule#deleteMethod~ifMatch'
      - 'JobSchedule#deleteMethod~ifNoneMatch'
      - 'JobSchedule#deleteMethod~ifModifiedSince'
      - 'JobSchedule#deleteMethod~ifUnmodifiedSince'
      - 'JobSchedule#deleteMethod~requestUrl'
      - 'JobSchedule#deleteMethod~requestUrl'
      - 'JobSchedule#deleteMethod~queryParameters'
      - 'JobSchedule#deleteMethod~requestUrl'
      - 'JobSchedule#deleteMethod~regex'
      - 'JobSchedule#deleteMethod~requestUrl'
      - 'JobSchedule#deleteMethod~httpRequest'
      - 'JobSchedule#deleteMethod~headerName'
  - uid: 'JobSchedule#get'
    id: get
    parent: JobSchedule
    name: 'get(jobScheduleId, options, callback)'
    summary: Gets information about the specified job schedule.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: The id of the job schedule to get.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleGetOptions
          type: object
          description: "Additional parameters for\rthe operation"
        - id: options.jobScheduleGetOptions.select
          type: string
          description: "An OData $select\rclause."
        - id: options.jobScheduleGetOptions.expand
          type: string
          description: "An OData $expand\rclause."
        - id: options.jobScheduleGetOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.jobScheduleGetOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleGetOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleGetOptions.ocpDate
          type: date
          description: "The time the request\rwas issued. If not specified, this header will be automatically populated\rwith the current system clock time."
        - id: options.jobScheduleGetOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobScheduleGetOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.jobScheduleGetOptions.ifModifiedSince
          type: date
          description: "Specify this\rheader to perform the operation only if the resource has been modified\rsince the specified date/time."
        - id: options.jobScheduleGetOptions.ifUnmodifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has not been\rmodified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CloudJobSchedule} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function get(jobScheduleId, options, callback);'
    fullName: 'JobSchedule.get(jobScheduleId, options, callback)'
    children:
      - 'JobSchedule#get~client'
      - 'JobSchedule#get~callback'
      - 'JobSchedule#get~options'
      - 'JobSchedule#get~jobScheduleGetOptions'
      - 'JobSchedule#get~select'
      - 'JobSchedule#get~expand'
      - 'JobSchedule#get~timeout'
      - 'JobSchedule#get~clientRequestId'
      - 'JobSchedule#get~returnClientRequestId'
      - 'JobSchedule#get~ocpDate'
      - 'JobSchedule#get~ifMatch'
      - 'JobSchedule#get~ifNoneMatch'
      - 'JobSchedule#get~ifModifiedSince'
      - 'JobSchedule#get~ifUnmodifiedSince'
      - 'JobSchedule#get~select'
      - 'JobSchedule#get~expand'
      - 'JobSchedule#get~timeout'
      - 'JobSchedule#get~clientRequestId'
      - 'JobSchedule#get~returnClientRequestId'
      - 'JobSchedule#get~ocpDate'
      - 'JobSchedule#get~ifMatch'
      - 'JobSchedule#get~ifNoneMatch'
      - 'JobSchedule#get~ifModifiedSince'
      - 'JobSchedule#get~ifUnmodifiedSince'
      - 'JobSchedule#get~requestUrl'
      - 'JobSchedule#get~requestUrl'
      - 'JobSchedule#get~queryParameters'
      - 'JobSchedule#get~requestUrl'
      - 'JobSchedule#get~regex'
      - 'JobSchedule#get~requestUrl'
      - 'JobSchedule#get~httpRequest'
      - 'JobSchedule#get~headerName'
  - uid: 'JobSchedule#patch'
    id: patch
    parent: JobSchedule
    name: 'patch(jobScheduleId, jobSchedulePatchParameter, options, callback)'
    summary: Updates the properties of the specified job schedule.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: The id of the job schedule to update.
        - id: jobSchedulePatchParameter
          type: object
          description: The parameters for the request.
        - id: jobSchedulePatchParameter.schedule
          type: object
          description: "The schedule according\rto which jobs will be created. If you do not specify this element, the\rexisting schedule is not modified."
        - id: jobSchedulePatchParameter.schedule.doNotRunUntil
          type: date
          description: "The\rearliest time at which any job may be created under this job schedule. If\ryou do not specify a doNotRunUntil time, the schedule becomes ready to\rcreate jobs immediately."
        - id: jobSchedulePatchParameter.schedule.doNotRunAfter
          type: date
          description: "A time\rafter which no job will be created under this job schedule. The schedule\rwill move to the completed state as soon as this deadline is past and\rthere is no active job under this job schedule."
        - id: jobSchedulePatchParameter.schedule.startWindow
          type: moment.duration
          description: "The time interval, starting from the time at which the schedule indicates\ra job should be created, within which a job must be created. If a job is\rnot created within the startWindow interval, then the 'opportunity' is\rlost; no job will be created until the next recurrence of the schedule."
        - id: jobSchedulePatchParameter.schedule.recurrenceInterval
          type: moment.duration
          description: "The time interval\rbetween the start times of two successive jobs under the job schedule. A\rjob schedule can have at most one active job under it at any given time."
        - id: jobSchedulePatchParameter.jobSpecification
          type: object
          description: "The details of\rthe jobs to be created on this schedule."
        - id: jobSchedulePatchParameter.jobSpecification.priority
          type: number
          description: "The\rpriority of jobs created under this schedule. Priority values can range\rfrom -1000 to 1000, with -1000 being the lowest priority and 1000 being\rthe highest priority. The default value is 0."
        - id: jobSchedulePatchParameter.jobSpecification.displayName
          type: string
          description: "The display name for jobs created under this schedule. It need not be\runique and can contain any Unicode characters up to a maximum length of\r1024."
        - id: jobSchedulePatchParameter.jobSpecification.usesTaskDependencies
          type: boolean
          description: "The flag\rthat determines if this job will use tasks with dependencies."
        - id: jobSchedulePatchParameter.jobSpecification.constraints
          type: object
          description: The execution constraints for jobs created under this schedule.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxWallClockTime
          type: moment.duration
          description: "The maximum elapsed time that the job may run, measured from the time the\rjob starts. If the job does not complete within the time limit, the Batch\rservice terminates it and any tasks that are still running."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxTaskRetryCount
          type: number
          description: "The maximum number of times each task may be retried. The Batch service\rretries a task if its exit code is nonzero."
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask
          type: object
          description: "The details of a Job Manager task to be launched when a job is started\runder this schedule."
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask.id
          type: string
          description: "A string\rthat uniquely identifies the Job Manager task. A GUID is recommended."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.displayName
          type: string
          description: The display name of the Job Manager task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.commandLine
          type: string
          description: The command line of the Job Manager task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.environmentSettings
          type: array
          description: A list of environment variable settings for the Job Manager task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.constraints
          type: object
          description: Constraints that apply to the Job Manager task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type: boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.runElevated
          type: boolean
          description: "Whether to run the Job Manager task in elevated mode. The default value is\rfalse."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.runExclusive
          type: boolean
          description: "Whether the Job Manager task requires exclusive use of the compute node\rwhere it runs. If true, no other tasks will run on the same compute node\rfor as long as the Job Manager is running. If false, other tasks can run\rsimultaneously with the Job Manager on a compute node. (The Job Manager\rtask counts normally against the node’s concurrent task limit, so this is\ronly relevant if the node allows multiple concurrent tasks.)"
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask
          type: object
          description: "The Job\rPreparation task for jobs created under this schedule."
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask.id
          type: string
          description: "A\rstring that uniquely identifies the job preparation task within the job.\rThe id can contain any combination of alphanumeric characters including\rhyphens and underscores and cannot contain more than 64 characters."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.commandLine
          type: string
          description: The command line of the Job Preparation task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.environmentSettings
          type: array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints
          type: object
          description: Constraints that apply to the Job Preparation task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type: moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the\rBatch service terminates it."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type: moment.duration
          description: "The minimum time to retain the working directory for the task on the\rcompute node where it ran, from the time it completes execution. After\rthis time, the Batch service may delete the working directory and all its\rcontents. The default is infinite."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type: number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type: boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.runElevated
          type: boolean
          description: "Whether to run the Job Preparation task in elevated mode. The default\rvalue is false."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type: boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. Note that the Job Preparation task should still be\rwritten to be idempotent because it can be rerun if the compute node is\rrebooted while Job Preparation task is still running. The default value is\rtrue."
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask
          type: object
          description: The Job Release task for jobs created under this schedule.
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask.id
          type: string
          description: "A string\rthat uniquely identifies the Job Release task within the job. The id can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.commandLine
          type: string
          description: The command line of the Job Release task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.environmentSettings
          type: array
          description: A list of environment variable settings for the Job Release task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type: moment.duration
          description: "The maximum elapsed time that the Job Release task may run on a given\rcompute node, measured from the time the task starts. If the task does not\rcomplete within the time limit, the Batch service terminates it. The\rdefault value is 15 minutes."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.retentionTime
          type: moment.duration
          description: "The minimum time to retain the working directory for the Job Release task\ron the compute node. After this time, the Batch service may delete the\rworking directory and all its contents. The default is infinite."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.runElevated
          type: boolean
          description: "Whether to run the Job Release task in elevated mode. The default value is\rfalse."
        - id: jobSchedulePatchParameter.jobSpecification.commonEnvironmentSettings
          type: array
          description: "A\rlist of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the\rJob Manager, Job Preparation and Job Release tasks)."
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo
          type: object
          description: "The\rpool on which the Batch service runs the tasks of jobs created under this\rschedule."
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo.poolId
          type: string
          description: "The id of an\rexisting pool. All the tasks of the job will run on the specified pool.\rYou must specify either PoolId or AutoPoolSpecification, but not both."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification
          type: object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool and run all of the tasks of the job on it, and will delete\rthe pool once the job has completed. You must specify either PoolId or\rAutoPoolSpecification, but not both."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type: string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The prefix can be up to 20 characters long."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type: string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. Possible values include: 'jobschedule',\r'job', 'unmapped'"
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type: boolean
          description: Whether to keep an auto pool alive after its lifetime expires.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type: object
          description: The pool specification for the auto pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type: string
          description: The display name for the pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type: string
          description: "The size of the virtual machines in the pool. All virtual machines in a\rpool are the same size."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type: object
          description: "The cloud service configuration for the pool. This property and\rVirtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type: string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type: string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type: string
          description: "The Azure Guest OS Version currently installed on the virtual machines in\rthe pool. This may differ from TargetOSVersion if the pool state is\rUpgrading."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type: object
          description: "The virtual machine configuration for the pool. This property and\rCloudServiceConfiguration are mutually exclusive and one of the properties\rmust be specified."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type: object
          description: A reference to the Azure Virtual Machines Marketplace image to use.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type: string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For\rexample, Canonical or MicrosoftWindowsServer."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type: string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For\rexample, UbuntuServer or WindowsServer."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type: string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type: string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type: string
          description: "The SKU of Batch Node Agent to be provisioned on the compute node. The\rBatch node agent is a program that runs on each node in the pool, and\rprovides the command-and-control interface between the node and the Batch\rservice. There are different implementations of the node agent, known as\rSKUs, for different operating systems."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type: object
          description: "Windows operating system settings on the virtual machine. This property\rmust not be specified if the ImageReference property specifies a Linux OS\rimage."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type: boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type: number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type: object
          description: How tasks are distributed among compute nodes in the pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type: string
          description: "How tasks should be distributed across compute nodes. Possible values\rinclude: 'spread', 'pack', 'unmapped'"
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type: moment.duration
          description: The timeout for allocation of compute nodes to the pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type: number
          description: The desired number of compute nodes in the pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type: boolean
          description: Whether the pool size should automatically adjust over time.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type: string
          description: The formula for the desired number of compute nodes in the pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type: moment.duration
          description: >-
            A time interval for the desired AutoScale evaluation period in the
            pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type: boolean
          description: Whether the pool permits direct communication between nodes.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type: object
          description: "A task to run on each compute node as it joins the pool. The task runs\rwhen the node is added to the pool or when the node is restarted."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type: string
          description: The command line of the start task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type: array
          description: A list of environment variable settings for the start task.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.runElevated
          type: boolean
          description: >-
            Whether to run the start task in elevated mode. The default value is
            false.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type: number
          description: The maximum number of times the task may be retried.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type: boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any\rtasks on the compute node."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type: array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type: array
          description: "The list of application packages to be installed on each compute node in\rthe pool."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type: array
          description: A list of name-value pairs associated with the pool as metadata.
        - id: jobSchedulePatchParameter.jobSpecification.metadata
          type: array
          description: "A list\rof name-value pairs associated with each job created under this schedule\ras metadata."
        - id: jobSchedulePatchParameter.metadata
          type: array
          description: "A list of name-value\rpairs associated with the job schedule as metadata."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobSchedulePatchOptions
          type: object
          description: "Additional parameters for\rthe operation"
        - id: options.jobSchedulePatchOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.jobSchedulePatchOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobSchedulePatchOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobSchedulePatchOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.jobSchedulePatchOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobSchedulePatchOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.jobSchedulePatchOptions.ifModifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.jobSchedulePatchOptions.ifUnmodifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has not been\rmodified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function patch(jobScheduleId, jobSchedulePatchParameter, options,
        callback);
    fullName: >-
      JobSchedule.patch(jobScheduleId, jobSchedulePatchParameter, options,
      callback)
    children:
      - 'JobSchedule#patch~client'
      - 'JobSchedule#patch~callback'
      - 'JobSchedule#patch~options'
      - 'JobSchedule#patch~jobSchedulePatchOptions'
      - 'JobSchedule#patch~timeout'
      - 'JobSchedule#patch~clientRequestId'
      - 'JobSchedule#patch~returnClientRequestId'
      - 'JobSchedule#patch~ocpDate'
      - 'JobSchedule#patch~ifMatch'
      - 'JobSchedule#patch~ifNoneMatch'
      - 'JobSchedule#patch~ifModifiedSince'
      - 'JobSchedule#patch~ifUnmodifiedSince'
      - 'JobSchedule#patch~timeout'
      - 'JobSchedule#patch~clientRequestId'
      - 'JobSchedule#patch~returnClientRequestId'
      - 'JobSchedule#patch~ocpDate'
      - 'JobSchedule#patch~ifMatch'
      - 'JobSchedule#patch~ifNoneMatch'
      - 'JobSchedule#patch~ifModifiedSince'
      - 'JobSchedule#patch~ifUnmodifiedSince'
      - 'JobSchedule#patch~requestUrl'
      - 'JobSchedule#patch~requestUrl'
      - 'JobSchedule#patch~queryParameters'
      - 'JobSchedule#patch~requestUrl'
      - 'JobSchedule#patch~regex'
      - 'JobSchedule#patch~requestUrl'
      - 'JobSchedule#patch~httpRequest'
      - 'JobSchedule#patch~headerName'
      - 'JobSchedule#patch~requestContent'
      - 'JobSchedule#patch~requestModel'
      - 'JobSchedule#patch~requestModelMapper'
      - 'JobSchedule#patch~requestModel'
      - 'JobSchedule#patch~requestContent'
      - 'JobSchedule#patch~serializationError'
  - uid: 'JobSchedule#update'
    id: update
    parent: JobSchedule
    name: 'update(jobScheduleId, jobScheduleUpdateParameter, options, callback)'
    summary: Updates the properties of the specified job schedule.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: The id of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type: object
          description: The parameters for the request.
        - id: jobScheduleUpdateParameter.schedule
          type: object
          description: "The schedule\raccording to which jobs will be created. If you do not specify this\relement, it is equivalent to passing the default schedule: that is, a\rsingle job scheduled to run immediately."
        - id: jobScheduleUpdateParameter.schedule.doNotRunUntil
          type: date
          description: "The\rearliest time at which any job may be created under this job schedule. If\ryou do not specify a doNotRunUntil time, the schedule becomes ready to\rcreate jobs immediately."
        - id: jobScheduleUpdateParameter.schedule.doNotRunAfter
          type: date
          description: "A time\rafter which no job will be created under this job schedule. The schedule\rwill move to the completed state as soon as this deadline is past and\rthere is no active job under this job schedule."
        - id: jobScheduleUpdateParameter.schedule.startWindow
          type: moment.duration
          description: "The time interval, starting from the time at which the schedule indicates\ra job should be created, within which a job must be created. If a job is\rnot created within the startWindow interval, then the 'opportunity' is\rlost; no job will be created until the next recurrence of the schedule."
        - id: jobScheduleUpdateParameter.schedule.recurrenceInterval
          type: moment.duration
          description: "The time interval\rbetween the start times of two successive jobs under the job schedule. A\rjob schedule can have at most one active job under it at any given time."
        - id: jobScheduleUpdateParameter.jobSpecification
          type: object
          description: "Details of\rthe jobs to be created on this schedule."
        - id: jobScheduleUpdateParameter.jobSpecification.priority
          type: number
          description: "The\rpriority of jobs created under this schedule. Priority values can range\rfrom -1000 to 1000, with -1000 being the lowest priority and 1000 being\rthe highest priority. The default value is 0."
        - id: jobScheduleUpdateParameter.jobSpecification.displayName
          type: string
          description: "The display name for jobs created under this schedule. It need not be\runique and can contain any Unicode characters up to a maximum length of\r1024."
        - id: jobScheduleUpdateParameter.jobSpecification.usesTaskDependencies
          type: boolean
          description: "The\rflag that determines if this job will use tasks with dependencies."
        - id: jobScheduleUpdateParameter.jobSpecification.constraints
          type: object
          description: The execution constraints for jobs created under this schedule.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxWallClockTime
          type: moment.duration
          description: "The maximum elapsed time that the job may run, measured from the time the\rjob starts. If the job does not complete within the time limit, the Batch\rservice terminates it and any tasks that are still running."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxTaskRetryCount
          type: number
          description: "The maximum number of times each task may be retried. The Batch service\rretries a task if its exit code is nonzero."
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask
          type: object
          description: "The details\rof a Job Manager task to be launched when a job is started under this\rschedule."
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask.id
          type: string
          description: "A string\rthat uniquely identifies the Job Manager task. A GUID is recommended."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.displayName
          type: string
          description: The display name of the Job Manager task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.commandLine
          type: string
          description: The command line of the Job Manager task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.environmentSettings
          type: array
          description: A list of environment variable settings for the Job Manager task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.constraints
          type: object
          description: Constraints that apply to the Job Manager task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type: boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.runElevated
          type: boolean
          description: "Whether to run the Job Manager task in elevated mode. The default value is\rfalse."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.runExclusive
          type: boolean
          description: "Whether the Job Manager task requires exclusive use of the compute node\rwhere it runs. If true, no other tasks will run on the same compute node\rfor as long as the Job Manager is running. If false, other tasks can run\rsimultaneously with the Job Manager on a compute node. (The Job Manager\rtask counts normally against the node’s concurrent task limit, so this is\ronly relevant if the node allows multiple concurrent tasks.)"
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask
          type: object
          description: "The Job\rPreparation task for jobs created under this schedule."
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.id
          type: string
          description: "A\rstring that uniquely identifies the job preparation task within the job.\rThe id can contain any combination of alphanumeric characters including\rhyphens and underscores and cannot contain more than 64 characters."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.commandLine
          type: string
          description: The command line of the Job Preparation task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.environmentSettings
          type: array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints
          type: object
          description: Constraints that apply to the Job Preparation task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type: moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the\rBatch service terminates it."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type: moment.duration
          description: "The minimum time to retain the working directory for the task on the\rcompute node where it ran, from the time it completes execution. After\rthis time, the Batch service may delete the working directory and all its\rcontents. The default is infinite."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type: number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type: boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.runElevated
          type: boolean
          description: "Whether to run the Job Preparation task in elevated mode. The default\rvalue is false."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type: boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. Note that the Job Preparation task should still be\rwritten to be idempotent because it can be rerun if the compute node is\rrebooted while Job Preparation task is still running. The default value is\rtrue."
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask
          type: object
          description: "The Job\rRelease task for jobs created under this schedule."
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.id
          type: string
          description: "A string\rthat uniquely identifies the Job Release task within the job. The id can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.commandLine
          type: string
          description: The command line of the Job Release task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.environmentSettings
          type: array
          description: A list of environment variable settings for the Job Release task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type: moment.duration
          description: "The maximum elapsed time that the Job Release task may run on a given\rcompute node, measured from the time the task starts. If the task does not\rcomplete within the time limit, the Batch service terminates it. The\rdefault value is 15 minutes."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.retentionTime
          type: moment.duration
          description: "The minimum time to retain the working directory for the Job Release task\ron the compute node. After this time, the Batch service may delete the\rworking directory and all its contents. The default is infinite."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.runElevated
          type: boolean
          description: "Whether to run the Job Release task in elevated mode. The default value is\rfalse."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.commonEnvironmentSettings
          type: array
          description: "A\rlist of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the\rJob Manager, Job Preparation and Job Release tasks)."
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo
          type: object
          description: "The\rpool on which the Batch service runs the tasks of jobs created under this\rschedule."
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo.poolId
          type: string
          description: "The id of an\rexisting pool. All the tasks of the job will run on the specified pool.\rYou must specify either PoolId or AutoPoolSpecification, but not both."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification
          type: object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool and run all of the tasks of the job on it, and will delete\rthe pool once the job has completed. You must specify either PoolId or\rAutoPoolSpecification, but not both."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type: string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The prefix can be up to 20 characters long."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type: string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. Possible values include: 'jobschedule',\r'job', 'unmapped'"
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type: boolean
          description: Whether to keep an auto pool alive after its lifetime expires.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type: object
          description: The pool specification for the auto pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type: string
          description: The display name for the pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type: string
          description: "The size of the virtual machines in the pool. All virtual machines in a\rpool are the same size."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type: object
          description: "The cloud service configuration for the pool. This property and\rVirtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type: string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type: string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type: string
          description: "The Azure Guest OS Version currently installed on the virtual machines in\rthe pool. This may differ from TargetOSVersion if the pool state is\rUpgrading."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type: object
          description: "The virtual machine configuration for the pool. This property and\rCloudServiceConfiguration are mutually exclusive and one of the properties\rmust be specified."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type: object
          description: A reference to the Azure Virtual Machines Marketplace image to use.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type: string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For\rexample, Canonical or MicrosoftWindowsServer."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type: string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For\rexample, UbuntuServer or WindowsServer."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type: string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type: string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type: string
          description: "The SKU of Batch Node Agent to be provisioned on the compute node. The\rBatch node agent is a program that runs on each node in the pool, and\rprovides the command-and-control interface between the node and the Batch\rservice. There are different implementations of the node agent, known as\rSKUs, for different operating systems."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type: object
          description: "Windows operating system settings on the virtual machine. This property\rmust not be specified if the ImageReference property specifies a Linux OS\rimage."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type: boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type: number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type: object
          description: How tasks are distributed among compute nodes in the pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type: string
          description: "How tasks should be distributed across compute nodes. Possible values\rinclude: 'spread', 'pack', 'unmapped'"
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type: moment.duration
          description: The timeout for allocation of compute nodes to the pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type: number
          description: The desired number of compute nodes in the pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type: boolean
          description: Whether the pool size should automatically adjust over time.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type: string
          description: The formula for the desired number of compute nodes in the pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type: moment.duration
          description: >-
            A time interval for the desired AutoScale evaluation period in the
            pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type: boolean
          description: Whether the pool permits direct communication between nodes.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type: object
          description: "A task to run on each compute node as it joins the pool. The task runs\rwhen the node is added to the pool or when the node is restarted."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type: string
          description: The command line of the start task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type: array
          description: A list of environment variable settings for the start task.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.runElevated
          type: boolean
          description: >-
            Whether to run the start task in elevated mode. The default value is
            false.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type: number
          description: The maximum number of times the task may be retried.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type: boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any\rtasks on the compute node."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type: array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type: array
          description: "The list of application packages to be installed on each compute node in\rthe pool."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type: array
          description: A list of name-value pairs associated with the pool as metadata.
        - id: jobScheduleUpdateParameter.jobSpecification.metadata
          type: array
          description: "A\rlist of name-value pairs associated with each job created under this\rschedule as metadata."
        - id: jobScheduleUpdateParameter.metadata
          type: array
          description: "A list of name-value\rpairs associated with the job schedule as metadata. If you do not specify\rthis element, it takes the default value of an empty list; in effect, any\rexisting metadata is deleted."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleUpdateOptions
          type: object
          description: "Additional parameters\rfor the operation"
        - id: options.jobScheduleUpdateOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.jobScheduleUpdateOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleUpdateOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleUpdateOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.jobScheduleUpdateOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobScheduleUpdateOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.jobScheduleUpdateOptions.ifModifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.jobScheduleUpdateOptions.ifUnmodifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has not been\rmodified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function update(jobScheduleId, jobScheduleUpdateParameter, options,
        callback);
    fullName: >-
      JobSchedule.update(jobScheduleId, jobScheduleUpdateParameter, options,
      callback)
    children:
      - 'JobSchedule#update~client'
      - 'JobSchedule#update~callback'
      - 'JobSchedule#update~options'
      - 'JobSchedule#update~jobScheduleUpdateOptions'
      - 'JobSchedule#update~timeout'
      - 'JobSchedule#update~clientRequestId'
      - 'JobSchedule#update~returnClientRequestId'
      - 'JobSchedule#update~ocpDate'
      - 'JobSchedule#update~ifMatch'
      - 'JobSchedule#update~ifNoneMatch'
      - 'JobSchedule#update~ifModifiedSince'
      - 'JobSchedule#update~ifUnmodifiedSince'
      - 'JobSchedule#update~timeout'
      - 'JobSchedule#update~clientRequestId'
      - 'JobSchedule#update~returnClientRequestId'
      - 'JobSchedule#update~ocpDate'
      - 'JobSchedule#update~ifMatch'
      - 'JobSchedule#update~ifNoneMatch'
      - 'JobSchedule#update~ifModifiedSince'
      - 'JobSchedule#update~ifUnmodifiedSince'
      - 'JobSchedule#update~requestUrl'
      - 'JobSchedule#update~requestUrl'
      - 'JobSchedule#update~queryParameters'
      - 'JobSchedule#update~requestUrl'
      - 'JobSchedule#update~regex'
      - 'JobSchedule#update~requestUrl'
      - 'JobSchedule#update~httpRequest'
      - 'JobSchedule#update~headerName'
      - 'JobSchedule#update~requestContent'
      - 'JobSchedule#update~requestModel'
      - 'JobSchedule#update~requestModelMapper'
      - 'JobSchedule#update~requestModel'
      - 'JobSchedule#update~requestContent'
      - 'JobSchedule#update~serializationError'
  - uid: 'JobSchedule#disable'
    id: disable
    parent: JobSchedule
    name: 'disable(jobScheduleId, options, callback)'
    summary: Disables a job schedule.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: The id of the job schedule to disable.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleDisableOptions
          type: object
          description: "Additional parameters\rfor the operation"
        - id: options.jobScheduleDisableOptions.timeout
          type: number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
        - id: options.jobScheduleDisableOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleDisableOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleDisableOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.jobScheduleDisableOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobScheduleDisableOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.jobScheduleDisableOptions.ifModifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.jobScheduleDisableOptions.ifUnmodifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has not been\rmodified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function disable(jobScheduleId, options, callback);'
    fullName: 'JobSchedule.disable(jobScheduleId, options, callback)'
    children:
      - 'JobSchedule#disable~client'
      - 'JobSchedule#disable~callback'
      - 'JobSchedule#disable~options'
      - 'JobSchedule#disable~jobScheduleDisableOptions'
      - 'JobSchedule#disable~timeout'
      - 'JobSchedule#disable~clientRequestId'
      - 'JobSchedule#disable~returnClientRequestId'
      - 'JobSchedule#disable~ocpDate'
      - 'JobSchedule#disable~ifMatch'
      - 'JobSchedule#disable~ifNoneMatch'
      - 'JobSchedule#disable~ifModifiedSince'
      - 'JobSchedule#disable~ifUnmodifiedSince'
      - 'JobSchedule#disable~timeout'
      - 'JobSchedule#disable~clientRequestId'
      - 'JobSchedule#disable~returnClientRequestId'
      - 'JobSchedule#disable~ocpDate'
      - 'JobSchedule#disable~ifMatch'
      - 'JobSchedule#disable~ifNoneMatch'
      - 'JobSchedule#disable~ifModifiedSince'
      - 'JobSchedule#disable~ifUnmodifiedSince'
      - 'JobSchedule#disable~requestUrl'
      - 'JobSchedule#disable~requestUrl'
      - 'JobSchedule#disable~queryParameters'
      - 'JobSchedule#disable~requestUrl'
      - 'JobSchedule#disable~regex'
      - 'JobSchedule#disable~requestUrl'
      - 'JobSchedule#disable~httpRequest'
      - 'JobSchedule#disable~headerName'
  - uid: 'JobSchedule#enable'
    id: enable
    parent: JobSchedule
    name: 'enable(jobScheduleId, options, callback)'
    summary: Enables a job schedule.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: The id of the job schedule to enable.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleEnableOptions
          type: object
          description: "Additional parameters\rfor the operation"
        - id: options.jobScheduleEnableOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.jobScheduleEnableOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleEnableOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleEnableOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.jobScheduleEnableOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobScheduleEnableOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.jobScheduleEnableOptions.ifModifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.jobScheduleEnableOptions.ifUnmodifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has not been\rmodified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function enable(jobScheduleId, options, callback);'
    fullName: 'JobSchedule.enable(jobScheduleId, options, callback)'
    children:
      - 'JobSchedule#enable~client'
      - 'JobSchedule#enable~callback'
      - 'JobSchedule#enable~options'
      - 'JobSchedule#enable~jobScheduleEnableOptions'
      - 'JobSchedule#enable~timeout'
      - 'JobSchedule#enable~clientRequestId'
      - 'JobSchedule#enable~returnClientRequestId'
      - 'JobSchedule#enable~ocpDate'
      - 'JobSchedule#enable~ifMatch'
      - 'JobSchedule#enable~ifNoneMatch'
      - 'JobSchedule#enable~ifModifiedSince'
      - 'JobSchedule#enable~ifUnmodifiedSince'
      - 'JobSchedule#enable~timeout'
      - 'JobSchedule#enable~clientRequestId'
      - 'JobSchedule#enable~returnClientRequestId'
      - 'JobSchedule#enable~ocpDate'
      - 'JobSchedule#enable~ifMatch'
      - 'JobSchedule#enable~ifNoneMatch'
      - 'JobSchedule#enable~ifModifiedSince'
      - 'JobSchedule#enable~ifUnmodifiedSince'
      - 'JobSchedule#enable~requestUrl'
      - 'JobSchedule#enable~requestUrl'
      - 'JobSchedule#enable~queryParameters'
      - 'JobSchedule#enable~requestUrl'
      - 'JobSchedule#enable~regex'
      - 'JobSchedule#enable~requestUrl'
      - 'JobSchedule#enable~httpRequest'
      - 'JobSchedule#enable~headerName'
  - uid: 'JobSchedule#terminate'
    id: terminate
    parent: JobSchedule
    name: 'terminate(jobScheduleId, options, callback)'
    summary: Terminates a job schedule.
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type: string
          description: The id of the job schedule to terminates.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleTerminateOptions
          type: object
          description: "Additional parameters\rfor the operation"
        - id: options.jobScheduleTerminateOptions.timeout
          type: number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
        - id: options.jobScheduleTerminateOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleTerminateOptions.returnClientRequestId
          type: boolean
          description: "Whether the\rserver should return the client-request-id identifier in the response."
        - id: options.jobScheduleTerminateOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.jobScheduleTerminateOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.jobScheduleTerminateOptions.ifNoneMatch
          type: string
          description: "An ETag\ris specified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.jobScheduleTerminateOptions.ifModifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.jobScheduleTerminateOptions.ifUnmodifiedSince
          type: date
          description: "Specify this header to perform the operation only if the resource has not\rbeen modified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function terminate(jobScheduleId, options, callback);'
    fullName: 'JobSchedule.terminate(jobScheduleId, options, callback)'
    children:
      - 'JobSchedule#terminate~client'
      - 'JobSchedule#terminate~callback'
      - 'JobSchedule#terminate~options'
      - 'JobSchedule#terminate~jobScheduleTerminateOptions'
      - 'JobSchedule#terminate~timeout'
      - 'JobSchedule#terminate~clientRequestId'
      - 'JobSchedule#terminate~returnClientRequestId'
      - 'JobSchedule#terminate~ocpDate'
      - 'JobSchedule#terminate~ifMatch'
      - 'JobSchedule#terminate~ifNoneMatch'
      - 'JobSchedule#terminate~ifModifiedSince'
      - 'JobSchedule#terminate~ifUnmodifiedSince'
      - 'JobSchedule#terminate~timeout'
      - 'JobSchedule#terminate~clientRequestId'
      - 'JobSchedule#terminate~returnClientRequestId'
      - 'JobSchedule#terminate~ocpDate'
      - 'JobSchedule#terminate~ifMatch'
      - 'JobSchedule#terminate~ifNoneMatch'
      - 'JobSchedule#terminate~ifModifiedSince'
      - 'JobSchedule#terminate~ifUnmodifiedSince'
      - 'JobSchedule#terminate~requestUrl'
      - 'JobSchedule#terminate~requestUrl'
      - 'JobSchedule#terminate~queryParameters'
      - 'JobSchedule#terminate~requestUrl'
      - 'JobSchedule#terminate~regex'
      - 'JobSchedule#terminate~requestUrl'
      - 'JobSchedule#terminate~httpRequest'
      - 'JobSchedule#terminate~headerName'
  - uid: 'JobSchedule#add'
    id: add
    parent: JobSchedule
    name: 'add(cloudJobSchedule, options, callback)'
    summary: Adds a job schedule to the specified account.
    type: Method
    syntax:
      parameters:
        - id: cloudJobSchedule
          type: object
          description: The job schedule to be added.
        - id: cloudJobSchedule.id
          type: string
          description: "A string that uniquely identifies the\rschedule within the account. A GUID is recommended."
        - id: cloudJobSchedule.displayName
          type: string
          description: "The display name for the\rschedule."
        - id: cloudJobSchedule.schedule
          type: object
          description: "The schedule according to which\rjobs will be created."
        - id: cloudJobSchedule.schedule.doNotRunUntil
          type: date
          description: "The earliest time\rat which any job may be created under this job schedule. If you do not\rspecify a doNotRunUntil time, the schedule becomes ready to create jobs\rimmediately."
        - id: cloudJobSchedule.schedule.doNotRunAfter
          type: date
          description: "A time after which\rno job will be created under this job schedule. The schedule will move to\rthe completed state as soon as this deadline is past and there is no\ractive job under this job schedule."
        - id: cloudJobSchedule.schedule.startWindow
          type: moment.duration
          description: "The time\rinterval, starting from the time at which the schedule indicates a job\rshould be created, within which a job must be created. If a job is not\rcreated within the startWindow interval, then the 'opportunity' is lost;\rno job will be created until the next recurrence of the schedule."
        - id: cloudJobSchedule.schedule.recurrenceInterval
          type: moment.duration
          description: "The\rtime interval between the start times of two successive jobs under the job\rschedule. A job schedule can have at most one active job under it at any\rgiven time."
        - id: cloudJobSchedule.jobSpecification
          type: object
          description: "The details of the jobs\rto be created on this schedule."
        - id: cloudJobSchedule.jobSpecification.priority
          type: number
          description: "The priority\rof jobs created under this schedule. Priority values can range from -1000\rto 1000, with -1000 being the lowest priority and 1000 being the highest\rpriority. The default value is 0."
        - id: cloudJobSchedule.jobSpecification.displayName
          type: string
          description: "The display\rname for jobs created under this schedule. It need not be unique and can\rcontain any Unicode characters up to a maximum length of 1024."
        - id: cloudJobSchedule.jobSpecification.usesTaskDependencies
          type: boolean
          description: >-
            The flag that determines if this job will use tasks with
            dependencies.
        - id: cloudJobSchedule.jobSpecification.constraints
          type: object
          description: "The\rexecution constraints for jobs created under this schedule."
        - id: cloudJobSchedule.jobSpecification.constraints.maxWallClockTime
          type: moment.duration
          description: "The\rmaximum elapsed time that the job may run, measured from the time the job\rstarts. If the job does not complete within the time limit, the Batch\rservice terminates it and any tasks that are still running."
        - id: cloudJobSchedule.jobSpecification.constraints.maxTaskRetryCount
          type: number
          description: "The\rmaximum number of times each task may be retried. The Batch service\rretries a task if its exit code is nonzero."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask
          type: object
          description: "The\rdetails of a Job Manager task to be launched when a job is started under\rthis schedule."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.id
          type: string
          description: "A\rstring that uniquely identifies the Job Manager task. A GUID is\rrecommended."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.displayName
          type: string
          description: "The display\rname of the Job Manager task."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.commandLine
          type: string
          description: "The command\rline of the Job Manager task."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.resourceFiles
          type: array
          description: "A list of\rfiles that the Batch service will download to the compute node before\rrunning the command line."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.environmentSettings
          type: array
          description: "A\rlist of environment variable settings for the Job Manager task."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.constraints
          type: object
          description: "Constraints\rthat apply to the Job Manager task."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.killJobOnCompletion
          type: boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.runElevated
          type: boolean
          description: "Whether to\rrun the Job Manager task in elevated mode. The default value is false."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.runExclusive
          type: boolean
          description: "Whether\rthe Job Manager task requires exclusive use of the compute node where it\rruns. If true, no other tasks will run on the same compute node for as\rlong as the Job Manager is running. If false, other tasks can run\rsimultaneously with the Job Manager on a compute node. (The Job Manager\rtask counts normally against the node’s concurrent task limit, so this is\ronly relevant if the node allows multiple concurrent tasks.)"
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask
          type: object
          description: "The\rJob Preparation task for jobs created under this schedule."
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.id
          type: string
          description: "A\rstring that uniquely identifies the job preparation task within the job.\rThe id can contain any combination of alphanumeric characters including\rhyphens and underscores and cannot contain more than 64 characters."
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.commandLine
          type: string
          description: "The\rcommand line of the Job Preparation task."
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.resourceFiles
          type: array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.environmentSettings
          type: array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.constraints
          type: object
          description: Constraints that apply to the Job Preparation task.
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type: moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the\rBatch service terminates it."
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.retentionTime
          type: moment.duration
          description: "The minimum time to retain the working directory for the task on the\rcompute node where it ran, from the time it completes execution. After\rthis time, the Batch service may delete the working directory and all its\rcontents. The default is infinite."
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type: number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero."
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.waitForSuccess
          type: boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node."
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.runElevated
          type: boolean
          description: "Whether\rto run the Job Preparation task in elevated mode. The default value is\rfalse."
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type: boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. Note that the Job Preparation task should still be\rwritten to be idempotent because it can be rerun if the compute node is\rrebooted while Job Preparation task is still running. The default value is\rtrue."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask
          type: object
          description: "The Job\rRelease task for jobs created under this schedule."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.id
          type: string
          description: "A\rstring that uniquely identifies the Job Release task within the job. The\rid can contain any combination of alphanumeric characters including\rhyphens and underscores and cannot contain more than 64 characters."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.commandLine
          type: string
          description: "The command\rline of the Job Release task."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.resourceFiles
          type: array
          description: "A list of\rfiles that the Batch service will download to the compute node before\rrunning the command line."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.environmentSettings
          type: array
          description: "A\rlist of environment variable settings for the Job Release task."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.maxWallClockTime
          type: moment.duration
          description: "The\rmaximum elapsed time that the Job Release task may run on a given compute\rnode, measured from the time the task starts. If the task does not\rcomplete within the time limit, the Batch service terminates it. The\rdefault value is 15 minutes."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.retentionTime
          type: moment.duration
          description: "The\rminimum time to retain the working directory for the Job Release task on\rthe compute node. After this time, the Batch service may delete the\rworking directory and all its contents. The default is infinite."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.runElevated
          type: boolean
          description: "Whether to\rrun the Job Release task in elevated mode. The default value is false."
        - id: cloudJobSchedule.jobSpecification.commonEnvironmentSettings
          type: array
          description: "A list of\rcommon environment variable settings. These environment variables are set\rfor all tasks in jobs created under this schedule (including the Job\rManager, Job Preparation and Job Release tasks)."
        - id: cloudJobSchedule.jobSpecification.poolInfo
          type: object
          description: "The pool on\rwhich the Batch service runs the tasks of jobs created under this schedule."
        - id: cloudJobSchedule.jobSpecification.poolInfo.poolId
          type: string
          description: "The id\rof an existing pool. All the tasks of the job will run on the specified\rpool. You must specify either PoolId or AutoPoolSpecification, but not\rboth."
        - id: cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification
          type: object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool and run all of the tasks of the job on it, and will delete\rthe pool once the job has completed. You must specify either PoolId or\rAutoPoolSpecification, but not both."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type: string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The prefix can be up to 20 characters long."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type: string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. Possible values include: 'jobschedule',\r'job', 'unmapped'"
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type: boolean
          description: Whether to keep an auto pool alive after its lifetime expires.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool
          type: object
          description: The pool specification for the auto pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type: string
          description: The display name for the pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type: string
          description: "The size of the virtual machines in the pool. All virtual machines in a\rpool are the same size."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type: object
          description: "The cloud service configuration for the pool. This property and\rVirtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type: string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type: string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type: string
          description: "The Azure Guest OS Version currently installed on the virtual machines in\rthe pool. This may differ from TargetOSVersion if the pool state is\rUpgrading."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type: object
          description: "The virtual machine configuration for the pool. This property and\rCloudServiceConfiguration are mutually exclusive and one of the properties\rmust be specified."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type: object
          description: A reference to the Azure Virtual Machines Marketplace image to use.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type: string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For\rexample, Canonical or MicrosoftWindowsServer."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type: string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For\rexample, UbuntuServer or WindowsServer."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type: string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type: string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type: string
          description: "The SKU of Batch Node Agent to be provisioned on the compute node. The\rBatch node agent is a program that runs on each node in the pool, and\rprovides the command-and-control interface between the node and the Batch\rservice. There are different implementations of the node agent, known as\rSKUs, for different operating systems."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type: object
          description: "Windows operating system settings on the virtual machine. This property\rmust not be specified if the ImageReference property specifies a Linux OS\rimage."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type: boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type: number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type: object
          description: How tasks are distributed among compute nodes in the pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type: string
          description: "How tasks should be distributed across compute nodes. Possible values\rinclude: 'spread', 'pack', 'unmapped'"
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type: moment.duration
          description: The timeout for allocation of compute nodes to the pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type: number
          description: The desired number of compute nodes in the pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type: boolean
          description: Whether the pool size should automatically adjust over time.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type: string
          description: The formula for the desired number of compute nodes in the pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type: moment.duration
          description: >-
            A time interval for the desired AutoScale evaluation period in the
            pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type: boolean
          description: Whether the pool permits direct communication between nodes.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type: object
          description: "A task to run on each compute node as it joins the pool. The task runs\rwhen the node is added to the pool or when the node is restarted."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type: string
          description: The command line of the start task.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type: array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type: array
          description: A list of environment variable settings for the start task.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.runElevated
          type: boolean
          description: >-
            Whether to run the start task in elevated mode. The default value is
            false.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type: number
          description: The maximum number of times the task may be retried.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type: boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any\rtasks on the compute node."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type: array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type: array
          description: "The list of application packages to be installed on each compute node in\rthe pool."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type: array
          description: A list of name-value pairs associated with the pool as metadata.
        - id: cloudJobSchedule.jobSpecification.metadata
          type: array
          description: "A list of\rname-value pairs associated with each job created under this schedule as\rmetadata."
        - id: cloudJobSchedule.metadata
          type: array
          description: "A list of name-value pairs\rassociated with the schedule as metadata."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleAddOptions
          type: object
          description: "Additional parameters for\rthe operation"
        - id: options.jobScheduleAddOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.jobScheduleAddOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleAddOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleAddOptions.ocpDate
          type: date
          description: "The time the request\rwas issued. If not specified, this header will be automatically populated\rwith the current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function add(cloudJobSchedule, options, callback);'
    fullName: 'JobSchedule.add(cloudJobSchedule, options, callback)'
    children:
      - 'JobSchedule#add~client'
      - 'JobSchedule#add~callback'
      - 'JobSchedule#add~options'
      - 'JobSchedule#add~jobScheduleAddOptions'
      - 'JobSchedule#add~timeout'
      - 'JobSchedule#add~clientRequestId'
      - 'JobSchedule#add~returnClientRequestId'
      - 'JobSchedule#add~ocpDate'
      - 'JobSchedule#add~timeout'
      - 'JobSchedule#add~clientRequestId'
      - 'JobSchedule#add~returnClientRequestId'
      - 'JobSchedule#add~ocpDate'
      - 'JobSchedule#add~requestUrl'
      - 'JobSchedule#add~queryParameters'
      - 'JobSchedule#add~requestUrl'
      - 'JobSchedule#add~regex'
      - 'JobSchedule#add~requestUrl'
      - 'JobSchedule#add~httpRequest'
      - 'JobSchedule#add~headerName'
      - 'JobSchedule#add~requestContent'
      - 'JobSchedule#add~requestModel'
      - 'JobSchedule#add~requestModelMapper'
      - 'JobSchedule#add~requestModel'
      - 'JobSchedule#add~requestContent'
      - 'JobSchedule#add~serializationError'
  - uid: 'JobSchedule#list'
    id: list
    parent: JobSchedule
    name: 'list(options, callback)'
    summary: Lists all of the job schedules in the specified account.
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleListOptions
          type: object
          description: "Additional parameters for\rthe operation"
        - id: options.jobScheduleListOptions.filter
          type: string
          description: "An OData $filter\rclause."
        - id: options.jobScheduleListOptions.select
          type: string
          description: "An OData $select\rclause."
        - id: options.jobScheduleListOptions.expand
          type: string
          description: "An OData $expand\rclause."
        - id: options.jobScheduleListOptions.maxResults
          type: number
          description: "The maximum\rnumber of items to return in the response."
        - id: options.jobScheduleListOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.jobScheduleListOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleListOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleListOptions.ocpDate
          type: date
          description: "The time the request\rwas issued. If not specified, this header will be automatically populated\rwith the current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CloudJobScheduleListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(options, callback);'
    fullName: 'JobSchedule.list(options, callback)'
    children:
      - 'JobSchedule#list~client'
      - 'JobSchedule#list~callback'
      - 'JobSchedule#list~options'
      - 'JobSchedule#list~jobScheduleListOptions'
      - 'JobSchedule#list~filter'
      - 'JobSchedule#list~select'
      - 'JobSchedule#list~expand'
      - 'JobSchedule#list~maxResults'
      - 'JobSchedule#list~timeout'
      - 'JobSchedule#list~clientRequestId'
      - 'JobSchedule#list~returnClientRequestId'
      - 'JobSchedule#list~ocpDate'
      - 'JobSchedule#list~filter'
      - 'JobSchedule#list~select'
      - 'JobSchedule#list~expand'
      - 'JobSchedule#list~maxResults'
      - 'JobSchedule#list~timeout'
      - 'JobSchedule#list~clientRequestId'
      - 'JobSchedule#list~returnClientRequestId'
      - 'JobSchedule#list~ocpDate'
      - 'JobSchedule#list~requestUrl'
      - 'JobSchedule#list~queryParameters'
      - 'JobSchedule#list~requestUrl'
      - 'JobSchedule#list~regex'
      - 'JobSchedule#list~requestUrl'
      - 'JobSchedule#list~httpRequest'
      - 'JobSchedule#list~headerName'
  - uid: 'JobSchedule#listNext'
    id: listNext
    parent: JobSchedule
    name: 'listNext(nextPageLink, options, callback)'
    summary: Lists all of the job schedules in the specified account.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.jobScheduleListNextOptions
          type: object
          description: "Additional parameters\rfor the operation"
        - id: options.jobScheduleListNextOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.jobScheduleListNextOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.jobScheduleListNextOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CloudJobScheduleListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listNext(nextPageLink, options, callback);'
    fullName: 'JobSchedule.listNext(nextPageLink, options, callback)'
    children:
      - 'JobSchedule#listNext~client'
      - 'JobSchedule#listNext~callback'
      - 'JobSchedule#listNext~options'
      - 'JobSchedule#listNext~jobScheduleListNextOptions'
      - 'JobSchedule#listNext~clientRequestId'
      - 'JobSchedule#listNext~returnClientRequestId'
      - 'JobSchedule#listNext~ocpDate'
      - 'JobSchedule#listNext~clientRequestId'
      - 'JobSchedule#listNext~returnClientRequestId'
      - 'JobSchedule#listNext~ocpDate'
      - 'JobSchedule#listNext~requestUrl'
      - 'JobSchedule#listNext~requestUrl'
      - 'JobSchedule#listNext~regex'
      - 'JobSchedule#listNext~requestUrl'
      - 'JobSchedule#listNext~httpRequest'
      - 'JobSchedule#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: moment.duration
    name: moment.duration
    fullName: moment.duration
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true

items:
  - uid: WebResource
    id: WebResource
    name: WebResource
    summary: "Creates a new WebResource object.\r\rThis class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\rproperties to initiate a request."
    type: Class
    syntax:
      content: WebResource
    fullName: WebResource
    children:
      - 'WebResource#rawResponse'
      - 'WebResource#queryString'
      - WebResource.put
      - WebResource.get
      - WebResource.head
      - WebResource.del
      - WebResource.post
      - WebResource.merge
      - WebResource.patch
      - 'WebResource#withProperty'
      - 'WebResource#properties'
      - 'WebResource#properties[undefined]'
      - 'WebResource#withRawResponse'
      - 'WebResource#rawResponse'
      - 'WebResource#rawResponse'
      - 'WebResource#withHeadersOnly'
      - 'WebResource#headersOnly'
      - 'WebResource#headersOnly'
      - 'WebResource#withQueryOption'
      - 'WebResource#queryString[undefined]'
      - 'WebResource#queryString[undefined]'
      - 'WebResource#withQueryOptions'
      - 'WebResource#withHeader'
      - 'WebResource#headers'
      - 'WebResource#headers[undefined]'
      - 'WebResource#withBody'
      - 'WebResource#body'
      - 'WebResource#withHeaders'
      - 'WebResource#addOptionalMetadataHeaders'
      - 'WebResource#validResponse'
      - 'WebResource#pipeInput'
  - uid: 'WebResource#rawResponse'
    id: rawResponse
    parent: WebResource
    name: rawResponse
    type: Field
    syntax:
      content: rawResponse
    fullName: WebResource.rawResponse
  - uid: 'WebResource#queryString'
    id: queryString
    parent: WebResource
    name: queryString
    type: Field
    syntax:
      content: queryString
    fullName: WebResource.queryString
  - uid: WebResource.put
    id: put
    parent: WebResource
    name: put(path)
    summary: Creates a new put request web resource.
    type: Method
    syntax:
      parameters:
        - id: path
          type: string
          description: The path for the put operation.
      return:
        type: WebResource
        description: A new webresource with a put operation for the given path.
      content: function put(path);
    fullName: WebResource.put(path)
    children:
      - WebResource.put~webResource
  - uid: WebResource.get
    id: get
    parent: WebResource
    name: get(path)
    summary: Creates a new get request web resource.
    type: Method
    syntax:
      parameters:
        - id: path
          type: string
          description: The path for the get operation.
      return:
        type: WebResource
        description: A new webresource with a get operation for the given path.
      content: function get(path);
    fullName: WebResource.get(path)
    children:
      - WebResource.get~webResource
  - uid: WebResource.head
    id: head
    parent: WebResource
    name: head(path)
    summary: Creates a new head request web resource.
    type: Method
    syntax:
      parameters:
        - id: path
          type: string
          description: The path for the head operation.
      return:
        type: WebResource
        description: A new webresource with a head operation for the given path.
      content: function head(path);
    fullName: WebResource.head(path)
    children:
      - WebResource.head~webResource
  - uid: WebResource.del
    id: del
    parent: WebResource
    name: del(path)
    summary: Creates a new delete request web resource.
    type: Method
    syntax:
      parameters:
        - id: path
          type: string
          description: The path for the delete operation.
      return:
        type: WebResource
        description: A new webresource with a delete operation for the given path.
      content: function del(path);
    fullName: WebResource.del(path)
    children:
      - WebResource.del~webResource
  - uid: WebResource.post
    id: post
    parent: WebResource
    name: post(path)
    summary: Creates a new post request web resource.
    type: Method
    syntax:
      parameters:
        - id: path
          type: string
          description: The path for the post operation.
      return:
        type: WebResource
        description: A new webresource with a post operation for the given path.
      content: function post(path);
    fullName: WebResource.post(path)
    children:
      - WebResource.post~webResource
  - uid: WebResource.merge
    id: merge
    parent: WebResource
    name: merge(path)
    summary: Creates a new merge request web resource.
    type: Method
    syntax:
      parameters:
        - id: path
          type: string
          description: The path for the merge operation.
      return:
        type: WebResource
        description: A new webresource with a merge operation for the given path.
      content: function merge(path);
    fullName: WebResource.merge(path)
    children:
      - WebResource.merge~webResource
  - uid: WebResource.patch
    id: patch
    parent: WebResource
    name: patch(path)
    summary: Creates a new patch request web resource.
    type: Method
    syntax:
      parameters:
        - id: path
          type: string
          description: The path for the patch operation.
      return:
        type: WebResource
        description: A new webresource with a patch operation for the given path.
      content: function patch(path);
    fullName: WebResource.patch(path)
    children:
      - WebResource.patch~webResource
  - uid: 'WebResource#withProperty'
    id: withProperty
    parent: WebResource
    name: 'withProperty(name, value)'
    summary: Specifies a custom property in the web resource.
    type: Method
    syntax:
      parameters:
        - id: name
          type: string
          description: The property name.
        - id: value
          type: string
          description: The property value.
      return:
        type: WebResource
        description: The webresource.
      content: 'function withProperty(name, value);'
    fullName: 'WebResource.withProperty(name, value)'
  - uid: 'WebResource#properties'
    id: properties
    parent: WebResource
    name: properties
    type: Field
    syntax:
      content: properties
    fullName: WebResource.properties
  - uid: 'WebResource#properties[undefined]'
    id: 'properties[undefined]'
    parent: WebResource
    name: 'properties[undefined]'
    type: Field
    syntax:
      content: 'properties[undefined]'
    fullName: 'WebResource.properties[undefined]'
  - uid: 'WebResource#withRawResponse'
    id: withRawResponse
    parent: WebResource
    name: withRawResponse(rawResponse)
    summary: Specifies if the response should be parsed or not.
    type: Method
    syntax:
      parameters:
        - id: rawResponse
          type: bool
          description: true if the response should not be parse; false otherwise.
      return:
        type: WebResource
        description: The webresource.
      content: function withRawResponse(rawResponse);
    fullName: WebResource.withRawResponse(rawResponse)
  - uid: 'WebResource#rawResponse'
    id: rawResponse
    parent: WebResource
    name: rawResponse
    type: Field
    syntax:
      content: rawResponse
    fullName: WebResource.rawResponse
  - uid: 'WebResource#rawResponse'
    id: rawResponse
    parent: WebResource
    name: rawResponse
    type: Field
    syntax:
      content: rawResponse
    fullName: WebResource.rawResponse
  - uid: 'WebResource#withHeadersOnly'
    id: withHeadersOnly
    parent: WebResource
    name: withHeadersOnly()
    type: Method
    syntax:
      content: function withHeadersOnly();
    fullName: WebResource.withHeadersOnly()
  - uid: 'WebResource#headersOnly'
    id: headersOnly
    parent: WebResource
    name: headersOnly
    type: Field
    syntax:
      content: headersOnly
    fullName: WebResource.headersOnly
  - uid: 'WebResource#headersOnly'
    id: headersOnly
    parent: WebResource
    name: headersOnly
    type: Field
    syntax:
      content: headersOnly
    fullName: WebResource.headersOnly
  - uid: 'WebResource#withQueryOption'
    id: withQueryOption
    parent: WebResource
    name: 'withQueryOption(name, value, defaultValue)'
    summary: Adds an optional query string parameter.
    type: Method
    syntax:
      parameters:
        - id: name
          type: Object
          description: The name of the query string parameter.
        - id: value
          type: Object
          description: The value of the query string parameter.
        - id: defaultValue
          type: Object
          description: >-
            The default value for the query string parameter to be used if no
            value is passed.
      return:
        type: Object
        description: The web resource.
      content: 'function withQueryOption(name, value, defaultValue);'
    fullName: 'WebResource.withQueryOption(name, value, defaultValue)'
  - uid: 'WebResource#queryString[undefined]'
    id: 'queryString[undefined]'
    parent: WebResource
    name: 'queryString[undefined]'
    type: Field
    syntax:
      content: 'queryString[undefined]'
    fullName: 'WebResource.queryString[undefined]'
  - uid: 'WebResource#queryString[undefined]'
    id: 'queryString[undefined]'
    parent: WebResource
    name: 'queryString[undefined]'
    type: Field
    syntax:
      content: 'queryString[undefined]'
    fullName: 'WebResource.queryString[undefined]'
  - uid: 'WebResource#withQueryOptions'
    id: withQueryOptions
    parent: WebResource
    name: withQueryOptions(object)
    summary: "Adds optional query string parameters.\r\rAdditional arguments will be the needles to search in the haystack."
    type: Method
    syntax:
      parameters:
        - id: object
          type: Object
          description: The haystack of query string parameters.
      return:
        type: Object
        description: The web resource.
      content: function withQueryOptions(object);
    fullName: WebResource.withQueryOptions(object)
    children:
      - 'WebResource#withQueryOptions~i'
  - uid: 'WebResource#withHeader'
    id: withHeader
    parent: WebResource
    name: 'withHeader(name, value)'
    summary: Adds an optional header parameter.
    type: Method
    syntax:
      parameters:
        - id: name
          type: Object
          description: The name of the header parameter.
        - id: value
          type: Object
          description: The value of the header parameter.
      return:
        type: Object
        description: The web resource.
      content: 'function withHeader(name, value);'
    fullName: 'WebResource.withHeader(name, value)'
  - uid: 'WebResource#headers'
    id: headers
    parent: WebResource
    name: headers
    type: Field
    syntax:
      content: headers
    fullName: WebResource.headers
  - uid: 'WebResource#headers[undefined]'
    id: 'headers[undefined]'
    parent: WebResource
    name: 'headers[undefined]'
    type: Field
    syntax:
      content: 'headers[undefined]'
    fullName: 'WebResource.headers[undefined]'
  - uid: 'WebResource#withBody'
    id: withBody
    parent: WebResource
    name: withBody(body)
    summary: Adds an optional body.
    type: Method
    syntax:
      parameters:
        - id: body
          type: Object
          description: The request body.
      return:
        type: Object
        description: The web resource.
      content: function withBody(body);
    fullName: WebResource.withBody(body)
  - uid: 'WebResource#body'
    id: body
    parent: WebResource
    name: body
    type: Field
    syntax:
      content: body
    fullName: WebResource.body
  - uid: 'WebResource#withHeaders'
    id: withHeaders
    parent: WebResource
    name: withHeaders(object)
    summary: "Adds optional query string parameters.\r\rAdditional arguments will be the needles to search in the haystack."
    type: Method
    syntax:
      parameters:
        - id: object
          type: Object
          description: The haystack of headers.
      return:
        type: Object
        description: The web resource.
      content: function withHeaders(object);
    fullName: WebResource.withHeaders(object)
    children:
      - 'WebResource#withHeaders~i'
  - uid: 'WebResource#addOptionalMetadataHeaders'
    id: addOptionalMetadataHeaders
    parent: WebResource
    name: addOptionalMetadataHeaders()
    type: Method
    syntax:
      content: function addOptionalMetadataHeaders();
    fullName: WebResource.addOptionalMetadataHeaders()
    children:
      - 'WebResource#addOptionalMetadataHeaders~self'
  - uid: 'WebResource#validResponse'
    id: validResponse
    parent: WebResource
    name: validResponse(statusCode)
    summary: >-
      Determines if a status code corresponds to a valid response according to
      the WebResource's expected status codes.
    type: Method
    syntax:
      parameters:
        - id: statusCode
          type: int
          description: The response status code.
      return:
        description: true if the response is valid; false otherwise.
      content: function validResponse(statusCode);
    fullName: WebResource.validResponse(statusCode)
  - uid: 'WebResource#pipeInput'
    id: pipeInput
    parent: WebResource
    name: 'pipeInput(inputStream, outputStream)'
    summary: "Hook up the given input stream to a destination output stream if the WebResource method\rrequires a request body and a body is not already set."
    type: Method
    syntax:
      parameters:
        - id: inputStream
          type: Stream
          description: the stream to pipe from
        - id: outputStream
          type: Stream
          description: the stream to pipe to
      return:
        description: destStream
      content: 'function pipeInput(inputStream, outputStream);'
    fullName: 'WebResource.pipeInput(inputStream, outputStream)'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: WebResource
    name: WebResource
    fullName: WebResource
    isExternal: false
  - uid: bool
    name: bool
    fullName: bool
    isExternal: true
  - uid: Object
    name: Object
    fullName: Object
    isExternal: true
  - uid: int
    name: int
    fullName: int
    isExternal: true
  - uid: undefined
    name: undefined
    fullName: undefined
    isExternal: true
  - uid: Stream
    name: Stream
    fullName: Stream
    isExternal: true

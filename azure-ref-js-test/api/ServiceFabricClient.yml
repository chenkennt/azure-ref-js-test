items:
  - uid: ServiceFabricClient
    id: ServiceFabricClient
    name: ServiceFabricClient
    type: Class
    syntax:
      content: ServiceFabricClient
    fullName: ServiceFabricClient
    children:
      - ServiceFabricClient~options
      - 'ServiceFabricClient#baseUri'
      - 'ServiceFabricClient#baseUri'
      - 'ServiceFabricClient#apiVersion'
      - 'ServiceFabricClient#models'
      - 'ServiceFabricClient#getClusterManifest'
      - 'ServiceFabricClient#sendClusterHealthReport'
      - 'ServiceFabricClient#getNodeList'
      - 'ServiceFabricClient#getNode'
      - 'ServiceFabricClient#enableNode'
      - 'ServiceFabricClient#disableNode'
      - 'ServiceFabricClient#removeNodeState'
      - 'ServiceFabricClient#getNodeHealth'
      - 'ServiceFabricClient#getDeployedApplicationList'
      - 'ServiceFabricClient#getDeployedApplication'
      - 'ServiceFabricClient#getDeployedApplicationHealth'
      - 'ServiceFabricClient#getNodeLoadInformation'
      - 'ServiceFabricClient#getDeployedCodePackage'
      - 'ServiceFabricClient#getDeployedReplica'
      - 'ServiceFabricClient#getDeployedReplicaDetail'
      - 'ServiceFabricClient#getDeployedServicePackage'
      - 'ServiceFabricClient#getDeployedServicePackageHealth'
      - 'ServiceFabricClient#getDeployedServiceType'
      - 'ServiceFabricClient#sendNodeHealthReport'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport'
      - 'ServiceFabricClient#getApplicationTypeList'
      - 'ServiceFabricClient#getApplicationType'
      - 'ServiceFabricClient#getServiceManifest'
      - 'ServiceFabricClient#getServiceType'
      - 'ServiceFabricClient#getApplicationManifest'
      - 'ServiceFabricClient#registerApplicationType'
      - 'ServiceFabricClient#unregisterApplicationType'
      - 'ServiceFabricClient#getApplicationList'
      - 'ServiceFabricClient#getApplication'
      - 'ServiceFabricClient#getServiceList'
      - 'ServiceFabricClient#getService'
      - 'ServiceFabricClient#getServiceGroupDescription'
      - 'ServiceFabricClient#getServiceGroupMember'
      - 'ServiceFabricClient#getApplicationHealth'
      - 'ServiceFabricClient#getApplicationUpgrade'
      - 'ServiceFabricClient#sendApplicationHealthReport'
      - 'ServiceFabricClient#newApplication'
      - 'ServiceFabricClient#newService'
      - 'ServiceFabricClient#newServiceFromTemplate'
      - 'ServiceFabricClient#newServiceGroup'
      - 'ServiceFabricClient#newServiceGroupFromTemplate'
      - 'ServiceFabricClient#updateServiceGroup'
      - 'ServiceFabricClient#removeApplication'
      - 'ServiceFabricClient#startApplicationUpgrade'
      - 'ServiceFabricClient#updateApplicationUpgrade'
      - 'ServiceFabricClient#resumeApplicationUpgrade'
      - 'ServiceFabricClient#startApplicationUpgradeRollback'
      - 'ServiceFabricClient#updateService'
      - 'ServiceFabricClient#removeService'
      - 'ServiceFabricClient#removeServiceGroup'
      - 'ServiceFabricClient#getServiceDescription'
      - 'ServiceFabricClient#resolveService'
      - 'ServiceFabricClient#getServiceHealth'
      - 'ServiceFabricClient#sendServiceHealth'
      - 'ServiceFabricClient#getPartitionList'
      - 'ServiceFabricClient#getPartition'
      - 'ServiceFabricClient#repairPartitionList'
      - 'ServiceFabricClient#repairPartition'
      - 'ServiceFabricClient#resetPartitionLoad'
      - 'ServiceFabricClient#getReplicaList'
      - 'ServiceFabricClient#getReplica'
      - 'ServiceFabricClient#getPartitionHealth'
      - 'ServiceFabricClient#sendPartitionHealthReport'
      - 'ServiceFabricClient#getReplicaHealth'
      - 'ServiceFabricClient#sendReplicaHealth'
      - 'ServiceFabricClient#getPartitionLoadInformation'
      - 'ServiceFabricClient#getReplicaLoadInformation'
      - 'ServiceFabricClient#getClusterLoadInformation'
      - 'ServiceFabricClient#getClusterHealth'
      - 'ServiceFabricClient#getUpgradeProgress'
  - uid: ServiceFabricClient~options
    id: options
    parent: ServiceFabricClient
    name: options
    type: Field
    syntax:
      content: options
    fullName: ServiceFabricClient.options
  - uid: 'ServiceFabricClient#baseUri'
    id: baseUri
    parent: ServiceFabricClient
    name: baseUri
    type: Field
    syntax:
      content: baseUri
    fullName: ServiceFabricClient.baseUri
  - uid: 'ServiceFabricClient#baseUri'
    id: baseUri
    parent: ServiceFabricClient
    name: baseUri
    type: Field
    syntax:
      content: baseUri
    fullName: ServiceFabricClient.baseUri
  - uid: 'ServiceFabricClient#apiVersion'
    id: apiVersion
    parent: ServiceFabricClient
    name: apiVersion
    type: Field
    syntax:
      content: apiVersion
    fullName: ServiceFabricClient.apiVersion
  - uid: 'ServiceFabricClient#models'
    id: models
    parent: ServiceFabricClient
    name: models
    type: Field
    syntax:
      content: models
    fullName: ServiceFabricClient.models
  - uid: 'ServiceFabricClient#getClusterManifest'
    id: getClusterManifest
    parent: ServiceFabricClient
    name: 'getClusterManifest(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getClusterManifest(options, callback);'
    fullName: 'ServiceFabricClient.getClusterManifest(options, callback)'
    children:
      - 'ServiceFabricClient#getClusterManifest~client'
      - 'ServiceFabricClient#getClusterManifest~callback'
      - 'ServiceFabricClient#getClusterManifest~options'
      - 'ServiceFabricClient#getClusterManifest~requestUrl'
      - 'ServiceFabricClient#getClusterManifest~queryParameters'
      - 'ServiceFabricClient#getClusterManifest~requestUrl'
      - 'ServiceFabricClient#getClusterManifest~regex'
      - 'ServiceFabricClient#getClusterManifest~requestUrl'
      - 'ServiceFabricClient#getClusterManifest~httpRequest'
      - 'ServiceFabricClient#getClusterManifest~headerName'
  - uid: 'ServiceFabricClient#sendClusterHealthReport'
    id: sendClusterHealthReport
    parent: ServiceFabricClient
    name: 'sendClusterHealthReport(clusterHealthReport, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: clusterHealthReport
          type: object
          description: The report of the cluster health
        - id: clusterHealthReport.sourceId
          type: string
        - id: clusterHealthReport.property
          type: string
        - id: clusterHealthReport.healthState
          type: number
        - id: clusterHealthReport.description
          type: string
        - id: clusterHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: clusterHealthReport.sequenceNumber
          type: string
        - id: clusterHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendClusterHealthReport(clusterHealthReport, options,
        callback);
    fullName: >-
      ServiceFabricClient.sendClusterHealthReport(clusterHealthReport, options,
      callback)
    children:
      - 'ServiceFabricClient#sendClusterHealthReport~client'
      - 'ServiceFabricClient#sendClusterHealthReport~callback'
      - 'ServiceFabricClient#sendClusterHealthReport~options'
      - 'ServiceFabricClient#sendClusterHealthReport~requestUrl'
      - 'ServiceFabricClient#sendClusterHealthReport~queryParameters'
      - 'ServiceFabricClient#sendClusterHealthReport~requestUrl'
      - 'ServiceFabricClient#sendClusterHealthReport~regex'
      - 'ServiceFabricClient#sendClusterHealthReport~requestUrl'
      - 'ServiceFabricClient#sendClusterHealthReport~httpRequest'
      - 'ServiceFabricClient#sendClusterHealthReport~headerName'
      - 'ServiceFabricClient#sendClusterHealthReport~requestContent'
      - 'ServiceFabricClient#sendClusterHealthReport~requestModel'
      - 'ServiceFabricClient#sendClusterHealthReport~requestModelMapper'
      - 'ServiceFabricClient#sendClusterHealthReport~requestModel'
      - 'ServiceFabricClient#sendClusterHealthReport~requestContent'
      - 'ServiceFabricClient#sendClusterHealthReport~serializationError'
  - uid: 'ServiceFabricClient#getNodeList'
    id: getNodeList
    parent: ServiceFabricClient
    name: 'getNodeList(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.continuationToken
          type: string
          description: The token of the continuation
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getNodeList(options, callback);'
    fullName: 'ServiceFabricClient.getNodeList(options, callback)'
    children:
      - 'ServiceFabricClient#getNodeList~client'
      - 'ServiceFabricClient#getNodeList~callback'
      - 'ServiceFabricClient#getNodeList~options'
      - 'ServiceFabricClient#getNodeList~continuationToken'
      - 'ServiceFabricClient#getNodeList~requestUrl'
      - 'ServiceFabricClient#getNodeList~queryParameters'
      - 'ServiceFabricClient#getNodeList~requestUrl'
      - 'ServiceFabricClient#getNodeList~regex'
      - 'ServiceFabricClient#getNodeList~requestUrl'
      - 'ServiceFabricClient#getNodeList~httpRequest'
      - 'ServiceFabricClient#getNodeList~headerName'
  - uid: 'ServiceFabricClient#getNode'
    id: getNode
    parent: ServiceFabricClient
    name: 'getNode(nodeName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.continuationToken
          type: string
          description: The token of the continuation
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Node} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getNode(nodeName, options, callback);'
    fullName: 'ServiceFabricClient.getNode(nodeName, options, callback)'
    children:
      - 'ServiceFabricClient#getNode~client'
      - 'ServiceFabricClient#getNode~callback'
      - 'ServiceFabricClient#getNode~options'
      - 'ServiceFabricClient#getNode~continuationToken'
      - 'ServiceFabricClient#getNode~requestUrl'
      - 'ServiceFabricClient#getNode~requestUrl'
      - 'ServiceFabricClient#getNode~queryParameters'
      - 'ServiceFabricClient#getNode~requestUrl'
      - 'ServiceFabricClient#getNode~regex'
      - 'ServiceFabricClient#getNode~requestUrl'
      - 'ServiceFabricClient#getNode~httpRequest'
      - 'ServiceFabricClient#getNode~headerName'
  - uid: 'ServiceFabricClient#enableNode'
    id: enableNode
    parent: ServiceFabricClient
    name: 'enableNode(nodeName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function enableNode(nodeName, options, callback);'
    fullName: 'ServiceFabricClient.enableNode(nodeName, options, callback)'
    children:
      - 'ServiceFabricClient#enableNode~client'
      - 'ServiceFabricClient#enableNode~callback'
      - 'ServiceFabricClient#enableNode~options'
      - 'ServiceFabricClient#enableNode~requestUrl'
      - 'ServiceFabricClient#enableNode~requestUrl'
      - 'ServiceFabricClient#enableNode~queryParameters'
      - 'ServiceFabricClient#enableNode~requestUrl'
      - 'ServiceFabricClient#enableNode~regex'
      - 'ServiceFabricClient#enableNode~requestUrl'
      - 'ServiceFabricClient#enableNode~httpRequest'
      - 'ServiceFabricClient#enableNode~headerName'
  - uid: 'ServiceFabricClient#disableNode'
    id: disableNode
    parent: ServiceFabricClient
    name: 'disableNode(nodeName, disableNode, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: disableNode
          type: object
          description: The node of the disable
        - id: disableNode.deactivationIntent
          type: number
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function disableNode(nodeName, disableNode, options, callback);'
    fullName: 'ServiceFabricClient.disableNode(nodeName, disableNode, options, callback)'
    children:
      - 'ServiceFabricClient#disableNode~client'
      - 'ServiceFabricClient#disableNode~callback'
      - 'ServiceFabricClient#disableNode~options'
      - 'ServiceFabricClient#disableNode~requestUrl'
      - 'ServiceFabricClient#disableNode~requestUrl'
      - 'ServiceFabricClient#disableNode~queryParameters'
      - 'ServiceFabricClient#disableNode~requestUrl'
      - 'ServiceFabricClient#disableNode~regex'
      - 'ServiceFabricClient#disableNode~requestUrl'
      - 'ServiceFabricClient#disableNode~httpRequest'
      - 'ServiceFabricClient#disableNode~headerName'
      - 'ServiceFabricClient#disableNode~requestContent'
      - 'ServiceFabricClient#disableNode~requestModel'
      - 'ServiceFabricClient#disableNode~requestModelMapper'
      - 'ServiceFabricClient#disableNode~requestModel'
      - 'ServiceFabricClient#disableNode~requestContent'
      - 'ServiceFabricClient#disableNode~serializationError'
  - uid: 'ServiceFabricClient#removeNodeState'
    id: removeNodeState
    parent: ServiceFabricClient
    name: 'removeNodeState(nodeName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function removeNodeState(nodeName, options, callback);'
    fullName: 'ServiceFabricClient.removeNodeState(nodeName, options, callback)'
    children:
      - 'ServiceFabricClient#removeNodeState~client'
      - 'ServiceFabricClient#removeNodeState~callback'
      - 'ServiceFabricClient#removeNodeState~options'
      - 'ServiceFabricClient#removeNodeState~requestUrl'
      - 'ServiceFabricClient#removeNodeState~requestUrl'
      - 'ServiceFabricClient#removeNodeState~queryParameters'
      - 'ServiceFabricClient#removeNodeState~requestUrl'
      - 'ServiceFabricClient#removeNodeState~regex'
      - 'ServiceFabricClient#removeNodeState~requestUrl'
      - 'ServiceFabricClient#removeNodeState~httpRequest'
      - 'ServiceFabricClient#removeNodeState~headerName'
  - uid: 'ServiceFabricClient#getNodeHealth'
    id: getNodeHealth
    parent: ServiceFabricClient
    name: 'getNodeHealth(nodeName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.eventsHealthStateFilter
          type: string
          description: "The filter of the events\rhealth state"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link NodeHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getNodeHealth(nodeName, options, callback);'
    fullName: 'ServiceFabricClient.getNodeHealth(nodeName, options, callback)'
    children:
      - 'ServiceFabricClient#getNodeHealth~client'
      - 'ServiceFabricClient#getNodeHealth~callback'
      - 'ServiceFabricClient#getNodeHealth~options'
      - 'ServiceFabricClient#getNodeHealth~eventsHealthStateFilter'
      - 'ServiceFabricClient#getNodeHealth~requestUrl'
      - 'ServiceFabricClient#getNodeHealth~requestUrl'
      - 'ServiceFabricClient#getNodeHealth~queryParameters'
      - 'ServiceFabricClient#getNodeHealth~requestUrl'
      - 'ServiceFabricClient#getNodeHealth~regex'
      - 'ServiceFabricClient#getNodeHealth~requestUrl'
      - 'ServiceFabricClient#getNodeHealth~httpRequest'
      - 'ServiceFabricClient#getNodeHealth~headerName'
  - uid: 'ServiceFabricClient#getDeployedApplicationList'
    id: getDeployedApplicationList
    parent: ServiceFabricClient
    name: 'getDeployedApplicationList(nodeName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getDeployedApplicationList(nodeName, options, callback);'
    fullName: >-
      ServiceFabricClient.getDeployedApplicationList(nodeName, options,
      callback)
    children:
      - 'ServiceFabricClient#getDeployedApplicationList~client'
      - 'ServiceFabricClient#getDeployedApplicationList~callback'
      - 'ServiceFabricClient#getDeployedApplicationList~options'
      - 'ServiceFabricClient#getDeployedApplicationList~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationList~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationList~queryParameters'
      - 'ServiceFabricClient#getDeployedApplicationList~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationList~regex'
      - 'ServiceFabricClient#getDeployedApplicationList~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationList~httpRequest'
      - 'ServiceFabricClient#getDeployedApplicationList~headerName'
  - uid: 'ServiceFabricClient#getDeployedApplication'
    id: getDeployedApplication
    parent: ServiceFabricClient
    name: 'getDeployedApplication(nodeName, applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeployedApplication} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedApplication(nodeName, applicationName, options,
        callback);
    fullName: >-
      ServiceFabricClient.getDeployedApplication(nodeName, applicationName,
      options, callback)
    children:
      - 'ServiceFabricClient#getDeployedApplication~client'
      - 'ServiceFabricClient#getDeployedApplication~callback'
      - 'ServiceFabricClient#getDeployedApplication~options'
      - 'ServiceFabricClient#getDeployedApplication~requestUrl'
      - 'ServiceFabricClient#getDeployedApplication~requestUrl'
      - 'ServiceFabricClient#getDeployedApplication~requestUrl'
      - 'ServiceFabricClient#getDeployedApplication~queryParameters'
      - 'ServiceFabricClient#getDeployedApplication~requestUrl'
      - 'ServiceFabricClient#getDeployedApplication~regex'
      - 'ServiceFabricClient#getDeployedApplication~requestUrl'
      - 'ServiceFabricClient#getDeployedApplication~httpRequest'
      - 'ServiceFabricClient#getDeployedApplication~headerName'
  - uid: 'ServiceFabricClient#getDeployedApplicationHealth'
    id: getDeployedApplicationHealth
    parent: ServiceFabricClient
    name: 'getDeployedApplicationHealth(nodeName, applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.eventsHealthStateFilter
          type: string
          description: "The filter of the events\rhealth state"
        - id: options.deployedServicePackagesHealthStateFilter
          type: string
          description: "The\rfilter of the deployed service packages health state"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeployedApplicationHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedApplicationHealth(nodeName, applicationName,
        options, callback);
    fullName: >-
      ServiceFabricClient.getDeployedApplicationHealth(nodeName,
      applicationName, options, callback)
    children:
      - 'ServiceFabricClient#getDeployedApplicationHealth~client'
      - 'ServiceFabricClient#getDeployedApplicationHealth~callback'
      - 'ServiceFabricClient#getDeployedApplicationHealth~options'
      - 'ServiceFabricClient#getDeployedApplicationHealth~eventsHealthStateFilter'
      - >-
        ServiceFabricClient#getDeployedApplicationHealth~deployedServicePackagesHealthStateFilter
      - 'ServiceFabricClient#getDeployedApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationHealth~queryParameters'
      - 'ServiceFabricClient#getDeployedApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationHealth~regex'
      - 'ServiceFabricClient#getDeployedApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedApplicationHealth~httpRequest'
      - 'ServiceFabricClient#getDeployedApplicationHealth~headerName'
  - uid: 'ServiceFabricClient#getNodeLoadInformation'
    id: getNodeLoadInformation
    parent: ServiceFabricClient
    name: 'getNodeLoadInformation(nodeName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link NodeLoadInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getNodeLoadInformation(nodeName, options, callback);'
    fullName: 'ServiceFabricClient.getNodeLoadInformation(nodeName, options, callback)'
    children:
      - 'ServiceFabricClient#getNodeLoadInformation~client'
      - 'ServiceFabricClient#getNodeLoadInformation~callback'
      - 'ServiceFabricClient#getNodeLoadInformation~options'
      - 'ServiceFabricClient#getNodeLoadInformation~requestUrl'
      - 'ServiceFabricClient#getNodeLoadInformation~requestUrl'
      - 'ServiceFabricClient#getNodeLoadInformation~queryParameters'
      - 'ServiceFabricClient#getNodeLoadInformation~requestUrl'
      - 'ServiceFabricClient#getNodeLoadInformation~regex'
      - 'ServiceFabricClient#getNodeLoadInformation~requestUrl'
      - 'ServiceFabricClient#getNodeLoadInformation~httpRequest'
      - 'ServiceFabricClient#getNodeLoadInformation~headerName'
  - uid: 'ServiceFabricClient#getDeployedCodePackage'
    id: getDeployedCodePackage
    parent: ServiceFabricClient
    name: 'getDeployedCodePackage(nodeName, applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedCodePackage(nodeName, applicationName, options,
        callback);
    fullName: >-
      ServiceFabricClient.getDeployedCodePackage(nodeName, applicationName,
      options, callback)
    children:
      - 'ServiceFabricClient#getDeployedCodePackage~client'
      - 'ServiceFabricClient#getDeployedCodePackage~callback'
      - 'ServiceFabricClient#getDeployedCodePackage~options'
      - 'ServiceFabricClient#getDeployedCodePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedCodePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedCodePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedCodePackage~queryParameters'
      - 'ServiceFabricClient#getDeployedCodePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedCodePackage~regex'
      - 'ServiceFabricClient#getDeployedCodePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedCodePackage~httpRequest'
      - 'ServiceFabricClient#getDeployedCodePackage~headerName'
  - uid: 'ServiceFabricClient#getDeployedReplica'
    id: getDeployedReplica
    parent: ServiceFabricClient
    name: 'getDeployedReplica(nodeName, applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedReplica(nodeName, applicationName, options,
        callback);
    fullName: >-
      ServiceFabricClient.getDeployedReplica(nodeName, applicationName, options,
      callback)
    children:
      - 'ServiceFabricClient#getDeployedReplica~client'
      - 'ServiceFabricClient#getDeployedReplica~callback'
      - 'ServiceFabricClient#getDeployedReplica~options'
      - 'ServiceFabricClient#getDeployedReplica~requestUrl'
      - 'ServiceFabricClient#getDeployedReplica~requestUrl'
      - 'ServiceFabricClient#getDeployedReplica~requestUrl'
      - 'ServiceFabricClient#getDeployedReplica~queryParameters'
      - 'ServiceFabricClient#getDeployedReplica~requestUrl'
      - 'ServiceFabricClient#getDeployedReplica~regex'
      - 'ServiceFabricClient#getDeployedReplica~requestUrl'
      - 'ServiceFabricClient#getDeployedReplica~httpRequest'
      - 'ServiceFabricClient#getDeployedReplica~headerName'
  - uid: 'ServiceFabricClient#getDeployedReplicaDetail'
    id: getDeployedReplicaDetail
    parent: ServiceFabricClient
    name: >-
      getDeployedReplicaDetail(nodeName, partitionName, replicaId, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: partitionName
          type: string
          description: The name of the partition
        - id: replicaId
          type: string
          description: The id of the replica
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeployedReplicaDetail} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedReplicaDetail(nodeName, partitionName, replicaId,
        options, callback);
    fullName: >-
      ServiceFabricClient.getDeployedReplicaDetail(nodeName, partitionName,
      replicaId, options, callback)
    children:
      - 'ServiceFabricClient#getDeployedReplicaDetail~client'
      - 'ServiceFabricClient#getDeployedReplicaDetail~callback'
      - 'ServiceFabricClient#getDeployedReplicaDetail~options'
      - 'ServiceFabricClient#getDeployedReplicaDetail~requestUrl'
      - 'ServiceFabricClient#getDeployedReplicaDetail~requestUrl'
      - 'ServiceFabricClient#getDeployedReplicaDetail~requestUrl'
      - 'ServiceFabricClient#getDeployedReplicaDetail~requestUrl'
      - 'ServiceFabricClient#getDeployedReplicaDetail~queryParameters'
      - 'ServiceFabricClient#getDeployedReplicaDetail~requestUrl'
      - 'ServiceFabricClient#getDeployedReplicaDetail~regex'
      - 'ServiceFabricClient#getDeployedReplicaDetail~requestUrl'
      - 'ServiceFabricClient#getDeployedReplicaDetail~httpRequest'
      - 'ServiceFabricClient#getDeployedReplicaDetail~headerName'
  - uid: 'ServiceFabricClient#getDeployedServicePackage'
    id: getDeployedServicePackage
    parent: ServiceFabricClient
    name: 'getDeployedServicePackage(nodeName, applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedServicePackage(nodeName, applicationName, options,
        callback);
    fullName: >-
      ServiceFabricClient.getDeployedServicePackage(nodeName, applicationName,
      options, callback)
    children:
      - 'ServiceFabricClient#getDeployedServicePackage~client'
      - 'ServiceFabricClient#getDeployedServicePackage~callback'
      - 'ServiceFabricClient#getDeployedServicePackage~options'
      - 'ServiceFabricClient#getDeployedServicePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackage~queryParameters'
      - 'ServiceFabricClient#getDeployedServicePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackage~regex'
      - 'ServiceFabricClient#getDeployedServicePackage~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackage~httpRequest'
      - 'ServiceFabricClient#getDeployedServicePackage~headerName'
  - uid: 'ServiceFabricClient#getDeployedServicePackageHealth'
    id: getDeployedServicePackageHealth
    parent: ServiceFabricClient
    name: >-
      getDeployedServicePackageHealth(nodeName, applicationName,
      servicePackageName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: servicePackageName
          type: string
          description: The name of the service package
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.eventsHealthStateFilter
          type: string
          description: "The filter of the events\rhealth state"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeployedServicePackageHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedServicePackageHealth(nodeName, applicationName,
        servicePackageName, options, callback);
    fullName: >-
      ServiceFabricClient.getDeployedServicePackageHealth(nodeName,
      applicationName, servicePackageName, options, callback)
    children:
      - 'ServiceFabricClient#getDeployedServicePackageHealth~client'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~callback'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~options'
      - >-
        ServiceFabricClient#getDeployedServicePackageHealth~eventsHealthStateFilter
      - 'ServiceFabricClient#getDeployedServicePackageHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~queryParameters'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~regex'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~requestUrl'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~httpRequest'
      - 'ServiceFabricClient#getDeployedServicePackageHealth~headerName'
  - uid: 'ServiceFabricClient#getDeployedServiceType'
    id: getDeployedServiceType
    parent: ServiceFabricClient
    name: 'getDeployedServiceType(nodeName, applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployedServiceType(nodeName, applicationName, options,
        callback);
    fullName: >-
      ServiceFabricClient.getDeployedServiceType(nodeName, applicationName,
      options, callback)
    children:
      - 'ServiceFabricClient#getDeployedServiceType~client'
      - 'ServiceFabricClient#getDeployedServiceType~callback'
      - 'ServiceFabricClient#getDeployedServiceType~options'
      - 'ServiceFabricClient#getDeployedServiceType~requestUrl'
      - 'ServiceFabricClient#getDeployedServiceType~requestUrl'
      - 'ServiceFabricClient#getDeployedServiceType~requestUrl'
      - 'ServiceFabricClient#getDeployedServiceType~queryParameters'
      - 'ServiceFabricClient#getDeployedServiceType~requestUrl'
      - 'ServiceFabricClient#getDeployedServiceType~regex'
      - 'ServiceFabricClient#getDeployedServiceType~requestUrl'
      - 'ServiceFabricClient#getDeployedServiceType~httpRequest'
      - 'ServiceFabricClient#getDeployedServiceType~headerName'
  - uid: 'ServiceFabricClient#sendNodeHealthReport'
    id: sendNodeHealthReport
    parent: ServiceFabricClient
    name: 'sendNodeHealthReport(nodeName, nodeHealthReport, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: nodeHealthReport
          type: object
          description: The report of the node health
        - id: nodeHealthReport.sourceId
          type: string
        - id: nodeHealthReport.property
          type: string
        - id: nodeHealthReport.healthState
          type: number
        - id: nodeHealthReport.description
          type: string
        - id: nodeHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: nodeHealthReport.sequenceNumber
          type: string
        - id: nodeHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendNodeHealthReport(nodeName, nodeHealthReport, options,
        callback);
    fullName: >-
      ServiceFabricClient.sendNodeHealthReport(nodeName, nodeHealthReport,
      options, callback)
    children:
      - 'ServiceFabricClient#sendNodeHealthReport~client'
      - 'ServiceFabricClient#sendNodeHealthReport~callback'
      - 'ServiceFabricClient#sendNodeHealthReport~options'
      - 'ServiceFabricClient#sendNodeHealthReport~requestUrl'
      - 'ServiceFabricClient#sendNodeHealthReport~requestUrl'
      - 'ServiceFabricClient#sendNodeHealthReport~queryParameters'
      - 'ServiceFabricClient#sendNodeHealthReport~requestUrl'
      - 'ServiceFabricClient#sendNodeHealthReport~regex'
      - 'ServiceFabricClient#sendNodeHealthReport~requestUrl'
      - 'ServiceFabricClient#sendNodeHealthReport~httpRequest'
      - 'ServiceFabricClient#sendNodeHealthReport~headerName'
      - 'ServiceFabricClient#sendNodeHealthReport~requestContent'
      - 'ServiceFabricClient#sendNodeHealthReport~requestModel'
      - 'ServiceFabricClient#sendNodeHealthReport~requestModelMapper'
      - 'ServiceFabricClient#sendNodeHealthReport~requestModel'
      - 'ServiceFabricClient#sendNodeHealthReport~requestContent'
      - 'ServiceFabricClient#sendNodeHealthReport~serializationError'
  - uid: 'ServiceFabricClient#sendDeployedApplicationHealthReport'
    id: sendDeployedApplicationHealthReport
    parent: ServiceFabricClient
    name: >-
      sendDeployedApplicationHealthReport(nodeName, applicationName,
      deployedApplicationHealthReport, options, callback)
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: deployedApplicationHealthReport
          type: object
          description: "The report of the deployed\rapplication health"
        - id: deployedApplicationHealthReport.sourceId
          type: string
        - id: deployedApplicationHealthReport.property
          type: string
        - id: deployedApplicationHealthReport.healthState
          type: number
        - id: deployedApplicationHealthReport.description
          type: string
        - id: deployedApplicationHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: deployedApplicationHealthReport.sequenceNumber
          type: string
        - id: deployedApplicationHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendDeployedApplicationHealthReport(nodeName, applicationName,
        deployedApplicationHealthReport, options, callback);
    fullName: >-
      ServiceFabricClient.sendDeployedApplicationHealthReport(nodeName,
      applicationName, deployedApplicationHealthReport, options, callback)
    children:
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~client'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~callback'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~options'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~queryParameters'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~regex'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~httpRequest'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~headerName'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestContent'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestModel'
      - >-
        ServiceFabricClient#sendDeployedApplicationHealthReport~requestModelMapper
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestModel'
      - 'ServiceFabricClient#sendDeployedApplicationHealthReport~requestContent'
      - >-
        ServiceFabricClient#sendDeployedApplicationHealthReport~serializationError
  - uid: 'ServiceFabricClient#sendDeployedServicePackageHealthReport'
    id: sendDeployedServicePackageHealthReport
    parent: ServiceFabricClient
    name: >-
      sendDeployedServicePackageHealthReport(nodeName, applicationName,
      serviceManifestName, deployedServicePackageHealthReport, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: nodeName
          type: string
          description: The name of the node
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceManifestName
          type: string
          description: The name of the service manifest
        - id: deployedServicePackageHealthReport
          type: object
          description: "The report of the\rdeployed service package health"
        - id: deployedServicePackageHealthReport.sourceId
          type: string
        - id: deployedServicePackageHealthReport.property
          type: string
        - id: deployedServicePackageHealthReport.healthState
          type: number
        - id: deployedServicePackageHealthReport.description
          type: string
        - id: deployedServicePackageHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: deployedServicePackageHealthReport.sequenceNumber
          type: string
        - id: deployedServicePackageHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendDeployedServicePackageHealthReport(nodeName,
        applicationName, serviceManifestName,
        deployedServicePackageHealthReport, options, callback);
    fullName: >-
      ServiceFabricClient.sendDeployedServicePackageHealthReport(nodeName,
      applicationName, serviceManifestName, deployedServicePackageHealthReport,
      options, callback)
    children:
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~client'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~callback'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~options'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestUrl'
      - >-
        ServiceFabricClient#sendDeployedServicePackageHealthReport~queryParameters
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~regex'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestUrl'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~httpRequest'
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~headerName'
      - >-
        ServiceFabricClient#sendDeployedServicePackageHealthReport~requestContent
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestModel'
      - >-
        ServiceFabricClient#sendDeployedServicePackageHealthReport~requestModelMapper
      - 'ServiceFabricClient#sendDeployedServicePackageHealthReport~requestModel'
      - >-
        ServiceFabricClient#sendDeployedServicePackageHealthReport~requestContent
      - >-
        ServiceFabricClient#sendDeployedServicePackageHealthReport~serializationError
  - uid: 'ServiceFabricClient#getApplicationTypeList'
    id: getApplicationTypeList
    parent: ServiceFabricClient
    name: 'getApplicationTypeList(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getApplicationTypeList(options, callback);'
    fullName: 'ServiceFabricClient.getApplicationTypeList(options, callback)'
    children:
      - 'ServiceFabricClient#getApplicationTypeList~client'
      - 'ServiceFabricClient#getApplicationTypeList~callback'
      - 'ServiceFabricClient#getApplicationTypeList~options'
      - 'ServiceFabricClient#getApplicationTypeList~requestUrl'
      - 'ServiceFabricClient#getApplicationTypeList~queryParameters'
      - 'ServiceFabricClient#getApplicationTypeList~requestUrl'
      - 'ServiceFabricClient#getApplicationTypeList~regex'
      - 'ServiceFabricClient#getApplicationTypeList~requestUrl'
      - 'ServiceFabricClient#getApplicationTypeList~httpRequest'
      - 'ServiceFabricClient#getApplicationTypeList~headerName'
  - uid: 'ServiceFabricClient#getApplicationType'
    id: getApplicationType
    parent: ServiceFabricClient
    name: 'getApplicationType(applicationTypeName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationTypeName
          type: string
          description: The name of the application type
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getApplicationType(applicationTypeName, options, callback);'
    fullName: >-
      ServiceFabricClient.getApplicationType(applicationTypeName, options,
      callback)
    children:
      - 'ServiceFabricClient#getApplicationType~client'
      - 'ServiceFabricClient#getApplicationType~callback'
      - 'ServiceFabricClient#getApplicationType~options'
      - 'ServiceFabricClient#getApplicationType~requestUrl'
      - 'ServiceFabricClient#getApplicationType~requestUrl'
      - 'ServiceFabricClient#getApplicationType~queryParameters'
      - 'ServiceFabricClient#getApplicationType~requestUrl'
      - 'ServiceFabricClient#getApplicationType~regex'
      - 'ServiceFabricClient#getApplicationType~requestUrl'
      - 'ServiceFabricClient#getApplicationType~httpRequest'
      - 'ServiceFabricClient#getApplicationType~headerName'
  - uid: 'ServiceFabricClient#getServiceManifest'
    id: getServiceManifest
    parent: ServiceFabricClient
    name: >-
      getServiceManifest(applicationTypeName, applicationTypeVersion,
      serviceManifestName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationTypeName
          type: string
          description: The name of the application type
        - id: applicationTypeVersion
          type: string
          description: The version of the application type
        - id: serviceManifestName
          type: string
          description: The name of the service manifest
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ServiceManifest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getServiceManifest(applicationTypeName, applicationTypeVersion,
        serviceManifestName, options, callback);
    fullName: >-
      ServiceFabricClient.getServiceManifest(applicationTypeName,
      applicationTypeVersion, serviceManifestName, options, callback)
    children:
      - 'ServiceFabricClient#getServiceManifest~client'
      - 'ServiceFabricClient#getServiceManifest~callback'
      - 'ServiceFabricClient#getServiceManifest~options'
      - 'ServiceFabricClient#getServiceManifest~requestUrl'
      - 'ServiceFabricClient#getServiceManifest~requestUrl'
      - 'ServiceFabricClient#getServiceManifest~queryParameters'
      - 'ServiceFabricClient#getServiceManifest~requestUrl'
      - 'ServiceFabricClient#getServiceManifest~regex'
      - 'ServiceFabricClient#getServiceManifest~requestUrl'
      - 'ServiceFabricClient#getServiceManifest~httpRequest'
      - 'ServiceFabricClient#getServiceManifest~headerName'
  - uid: 'ServiceFabricClient#getServiceType'
    id: getServiceType
    parent: ServiceFabricClient
    name: >-
      getServiceType(applicationTypeName, applicationTypeVersion, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: applicationTypeName
          type: string
          description: The name of the application type
        - id: applicationTypeVersion
          type: string
          description: The version of the application type
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getServiceType(applicationTypeName, applicationTypeVersion,
        options, callback);
    fullName: >-
      ServiceFabricClient.getServiceType(applicationTypeName,
      applicationTypeVersion, options, callback)
    children:
      - 'ServiceFabricClient#getServiceType~client'
      - 'ServiceFabricClient#getServiceType~callback'
      - 'ServiceFabricClient#getServiceType~options'
      - 'ServiceFabricClient#getServiceType~requestUrl'
      - 'ServiceFabricClient#getServiceType~requestUrl'
      - 'ServiceFabricClient#getServiceType~queryParameters'
      - 'ServiceFabricClient#getServiceType~requestUrl'
      - 'ServiceFabricClient#getServiceType~regex'
      - 'ServiceFabricClient#getServiceType~requestUrl'
      - 'ServiceFabricClient#getServiceType~httpRequest'
      - 'ServiceFabricClient#getServiceType~headerName'
  - uid: 'ServiceFabricClient#getApplicationManifest'
    id: getApplicationManifest
    parent: ServiceFabricClient
    name: >-
      getApplicationManifest(applicationTypeName, applicationTypeVersion,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationTypeName
          type: string
          description: The name of the application type
        - id: applicationTypeVersion
          type: string
          description: The version of the application type
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.continuationToken
          type: string
          description: The token of the continuation
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ApplicationManifest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getApplicationManifest(applicationTypeName,
        applicationTypeVersion, options, callback);
    fullName: >-
      ServiceFabricClient.getApplicationManifest(applicationTypeName,
      applicationTypeVersion, options, callback)
    children:
      - 'ServiceFabricClient#getApplicationManifest~client'
      - 'ServiceFabricClient#getApplicationManifest~callback'
      - 'ServiceFabricClient#getApplicationManifest~options'
      - 'ServiceFabricClient#getApplicationManifest~continuationToken'
      - 'ServiceFabricClient#getApplicationManifest~requestUrl'
      - 'ServiceFabricClient#getApplicationManifest~requestUrl'
      - 'ServiceFabricClient#getApplicationManifest~queryParameters'
      - 'ServiceFabricClient#getApplicationManifest~requestUrl'
      - 'ServiceFabricClient#getApplicationManifest~regex'
      - 'ServiceFabricClient#getApplicationManifest~requestUrl'
      - 'ServiceFabricClient#getApplicationManifest~httpRequest'
      - 'ServiceFabricClient#getApplicationManifest~headerName'
  - uid: 'ServiceFabricClient#registerApplicationType'
    id: registerApplicationType
    parent: ServiceFabricClient
    name: 'registerApplicationType(registerApplicationType, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: registerApplicationType
          type: object
          description: The type of the register application
        - id: registerApplicationType.applicationTypeBuildPath
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function registerApplicationType(registerApplicationType, options,
        callback);
    fullName: >-
      ServiceFabricClient.registerApplicationType(registerApplicationType,
      options, callback)
    children:
      - 'ServiceFabricClient#registerApplicationType~client'
      - 'ServiceFabricClient#registerApplicationType~callback'
      - 'ServiceFabricClient#registerApplicationType~options'
      - 'ServiceFabricClient#registerApplicationType~requestUrl'
      - 'ServiceFabricClient#registerApplicationType~queryParameters'
      - 'ServiceFabricClient#registerApplicationType~requestUrl'
      - 'ServiceFabricClient#registerApplicationType~regex'
      - 'ServiceFabricClient#registerApplicationType~requestUrl'
      - 'ServiceFabricClient#registerApplicationType~httpRequest'
      - 'ServiceFabricClient#registerApplicationType~headerName'
      - 'ServiceFabricClient#registerApplicationType~requestContent'
      - 'ServiceFabricClient#registerApplicationType~requestModel'
      - 'ServiceFabricClient#registerApplicationType~requestModelMapper'
      - 'ServiceFabricClient#registerApplicationType~requestModel'
      - 'ServiceFabricClient#registerApplicationType~requestContent'
      - 'ServiceFabricClient#registerApplicationType~serializationError'
  - uid: 'ServiceFabricClient#unregisterApplicationType'
    id: unregisterApplicationType
    parent: ServiceFabricClient
    name: >-
      unregisterApplicationType(applicationTypeName, unregisterApplicationType,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationTypeName
          type: string
          description: The name of the application type
        - id: unregisterApplicationType
          type: object
          description: "The type of the unregister\rapplication"
        - id: unregisterApplicationType.applicationTypeVersion
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function unregisterApplicationType(applicationTypeName,
        unregisterApplicationType, options, callback);
    fullName: >-
      ServiceFabricClient.unregisterApplicationType(applicationTypeName,
      unregisterApplicationType, options, callback)
    children:
      - 'ServiceFabricClient#unregisterApplicationType~client'
      - 'ServiceFabricClient#unregisterApplicationType~callback'
      - 'ServiceFabricClient#unregisterApplicationType~options'
      - 'ServiceFabricClient#unregisterApplicationType~requestUrl'
      - 'ServiceFabricClient#unregisterApplicationType~requestUrl'
      - 'ServiceFabricClient#unregisterApplicationType~queryParameters'
      - 'ServiceFabricClient#unregisterApplicationType~requestUrl'
      - 'ServiceFabricClient#unregisterApplicationType~regex'
      - 'ServiceFabricClient#unregisterApplicationType~requestUrl'
      - 'ServiceFabricClient#unregisterApplicationType~httpRequest'
      - 'ServiceFabricClient#unregisterApplicationType~headerName'
      - 'ServiceFabricClient#unregisterApplicationType~requestContent'
      - 'ServiceFabricClient#unregisterApplicationType~requestModel'
      - 'ServiceFabricClient#unregisterApplicationType~requestModelMapper'
      - 'ServiceFabricClient#unregisterApplicationType~requestModel'
      - 'ServiceFabricClient#unregisterApplicationType~requestContent'
      - 'ServiceFabricClient#unregisterApplicationType~serializationError'
  - uid: 'ServiceFabricClient#getApplicationList'
    id: getApplicationList
    parent: ServiceFabricClient
    name: 'getApplicationList(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.continuationToken
          type: string
          description: The token of the continuation
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getApplicationList(options, callback);'
    fullName: 'ServiceFabricClient.getApplicationList(options, callback)'
    children:
      - 'ServiceFabricClient#getApplicationList~client'
      - 'ServiceFabricClient#getApplicationList~callback'
      - 'ServiceFabricClient#getApplicationList~options'
      - 'ServiceFabricClient#getApplicationList~continuationToken'
      - 'ServiceFabricClient#getApplicationList~requestUrl'
      - 'ServiceFabricClient#getApplicationList~queryParameters'
      - 'ServiceFabricClient#getApplicationList~requestUrl'
      - 'ServiceFabricClient#getApplicationList~regex'
      - 'ServiceFabricClient#getApplicationList~requestUrl'
      - 'ServiceFabricClient#getApplicationList~httpRequest'
      - 'ServiceFabricClient#getApplicationList~headerName'
  - uid: 'ServiceFabricClient#getApplication'
    id: getApplication
    parent: ServiceFabricClient
    name: 'getApplication(applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.continuationToken
          type: string
          description: The token of the continuation
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Application} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getApplication(applicationName, options, callback);'
    fullName: 'ServiceFabricClient.getApplication(applicationName, options, callback)'
    children:
      - 'ServiceFabricClient#getApplication~client'
      - 'ServiceFabricClient#getApplication~callback'
      - 'ServiceFabricClient#getApplication~options'
      - 'ServiceFabricClient#getApplication~continuationToken'
      - 'ServiceFabricClient#getApplication~requestUrl'
      - 'ServiceFabricClient#getApplication~requestUrl'
      - 'ServiceFabricClient#getApplication~queryParameters'
      - 'ServiceFabricClient#getApplication~requestUrl'
      - 'ServiceFabricClient#getApplication~regex'
      - 'ServiceFabricClient#getApplication~requestUrl'
      - 'ServiceFabricClient#getApplication~httpRequest'
      - 'ServiceFabricClient#getApplication~headerName'
  - uid: 'ServiceFabricClient#getServiceList'
    id: getServiceList
    parent: ServiceFabricClient
    name: 'getServiceList(applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getServiceList(applicationName, options, callback);'
    fullName: 'ServiceFabricClient.getServiceList(applicationName, options, callback)'
    children:
      - 'ServiceFabricClient#getServiceList~client'
      - 'ServiceFabricClient#getServiceList~callback'
      - 'ServiceFabricClient#getServiceList~options'
      - 'ServiceFabricClient#getServiceList~requestUrl'
      - 'ServiceFabricClient#getServiceList~requestUrl'
      - 'ServiceFabricClient#getServiceList~queryParameters'
      - 'ServiceFabricClient#getServiceList~requestUrl'
      - 'ServiceFabricClient#getServiceList~regex'
      - 'ServiceFabricClient#getServiceList~requestUrl'
      - 'ServiceFabricClient#getServiceList~httpRequest'
      - 'ServiceFabricClient#getServiceList~headerName'
  - uid: 'ServiceFabricClient#getService'
    id: getService
    parent: ServiceFabricClient
    name: 'getService(applicationName, serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Service} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getService(applicationName, serviceName, options, callback);'
    fullName: >-
      ServiceFabricClient.getService(applicationName, serviceName, options,
      callback)
    children:
      - 'ServiceFabricClient#getService~client'
      - 'ServiceFabricClient#getService~callback'
      - 'ServiceFabricClient#getService~options'
      - 'ServiceFabricClient#getService~requestUrl'
      - 'ServiceFabricClient#getService~requestUrl'
      - 'ServiceFabricClient#getService~requestUrl'
      - 'ServiceFabricClient#getService~queryParameters'
      - 'ServiceFabricClient#getService~requestUrl'
      - 'ServiceFabricClient#getService~regex'
      - 'ServiceFabricClient#getService~requestUrl'
      - 'ServiceFabricClient#getService~httpRequest'
      - 'ServiceFabricClient#getService~headerName'
  - uid: 'ServiceFabricClient#getServiceGroupDescription'
    id: getServiceGroupDescription
    parent: ServiceFabricClient
    name: >-
      getServiceGroupDescription(applicationName, serviceName, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ServiceGroupDescription} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getServiceGroupDescription(applicationName, serviceName,
        options, callback);
    fullName: >-
      ServiceFabricClient.getServiceGroupDescription(applicationName,
      serviceName, options, callback)
    children:
      - 'ServiceFabricClient#getServiceGroupDescription~client'
      - 'ServiceFabricClient#getServiceGroupDescription~callback'
      - 'ServiceFabricClient#getServiceGroupDescription~options'
      - 'ServiceFabricClient#getServiceGroupDescription~requestUrl'
      - 'ServiceFabricClient#getServiceGroupDescription~requestUrl'
      - 'ServiceFabricClient#getServiceGroupDescription~requestUrl'
      - 'ServiceFabricClient#getServiceGroupDescription~queryParameters'
      - 'ServiceFabricClient#getServiceGroupDescription~requestUrl'
      - 'ServiceFabricClient#getServiceGroupDescription~regex'
      - 'ServiceFabricClient#getServiceGroupDescription~requestUrl'
      - 'ServiceFabricClient#getServiceGroupDescription~httpRequest'
      - 'ServiceFabricClient#getServiceGroupDescription~headerName'
  - uid: 'ServiceFabricClient#getServiceGroupMember'
    id: getServiceGroupMember
    parent: ServiceFabricClient
    name: 'getServiceGroupMember(applicationName, serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ServiceGroupMember} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getServiceGroupMember(applicationName, serviceName, options,
        callback);
    fullName: >-
      ServiceFabricClient.getServiceGroupMember(applicationName, serviceName,
      options, callback)
    children:
      - 'ServiceFabricClient#getServiceGroupMember~client'
      - 'ServiceFabricClient#getServiceGroupMember~callback'
      - 'ServiceFabricClient#getServiceGroupMember~options'
      - 'ServiceFabricClient#getServiceGroupMember~requestUrl'
      - 'ServiceFabricClient#getServiceGroupMember~requestUrl'
      - 'ServiceFabricClient#getServiceGroupMember~requestUrl'
      - 'ServiceFabricClient#getServiceGroupMember~queryParameters'
      - 'ServiceFabricClient#getServiceGroupMember~requestUrl'
      - 'ServiceFabricClient#getServiceGroupMember~regex'
      - 'ServiceFabricClient#getServiceGroupMember~requestUrl'
      - 'ServiceFabricClient#getServiceGroupMember~httpRequest'
      - 'ServiceFabricClient#getServiceGroupMember~headerName'
  - uid: 'ServiceFabricClient#getApplicationHealth'
    id: getApplicationHealth
    parent: ServiceFabricClient
    name: 'getApplicationHealth(applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.eventsHealthStateFilter
          type: string
          description: "The filter of the events\rhealth state"
        - id: options.deployedApplicationsHealthStateFilter
          type: string
          description: "The filter\rof the deployed application health state"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ApplicationHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getApplicationHealth(applicationName, options, callback);'
    fullName: >-
      ServiceFabricClient.getApplicationHealth(applicationName, options,
      callback)
    children:
      - 'ServiceFabricClient#getApplicationHealth~client'
      - 'ServiceFabricClient#getApplicationHealth~callback'
      - 'ServiceFabricClient#getApplicationHealth~options'
      - 'ServiceFabricClient#getApplicationHealth~eventsHealthStateFilter'
      - >-
        ServiceFabricClient#getApplicationHealth~deployedApplicationsHealthStateFilter
      - 'ServiceFabricClient#getApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getApplicationHealth~queryParameters'
      - 'ServiceFabricClient#getApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getApplicationHealth~regex'
      - 'ServiceFabricClient#getApplicationHealth~requestUrl'
      - 'ServiceFabricClient#getApplicationHealth~httpRequest'
      - 'ServiceFabricClient#getApplicationHealth~headerName'
  - uid: 'ServiceFabricClient#getApplicationUpgrade'
    id: getApplicationUpgrade
    parent: ServiceFabricClient
    name: 'getApplicationUpgrade(applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ApplicationUpgrade} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getApplicationUpgrade(applicationName, options, callback);'
    fullName: >-
      ServiceFabricClient.getApplicationUpgrade(applicationName, options,
      callback)
    children:
      - 'ServiceFabricClient#getApplicationUpgrade~client'
      - 'ServiceFabricClient#getApplicationUpgrade~callback'
      - 'ServiceFabricClient#getApplicationUpgrade~options'
      - 'ServiceFabricClient#getApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#getApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#getApplicationUpgrade~queryParameters'
      - 'ServiceFabricClient#getApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#getApplicationUpgrade~regex'
      - 'ServiceFabricClient#getApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#getApplicationUpgrade~httpRequest'
      - 'ServiceFabricClient#getApplicationUpgrade~headerName'
  - uid: 'ServiceFabricClient#sendApplicationHealthReport'
    id: sendApplicationHealthReport
    parent: ServiceFabricClient
    name: >-
      sendApplicationHealthReport(applicationName, applicationHealthReport,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: applicationHealthReport
          type: object
          description: The report of the application health
        - id: applicationHealthReport.sourceId
          type: string
        - id: applicationHealthReport.property
          type: string
        - id: applicationHealthReport.healthState
          type: number
        - id: applicationHealthReport.description
          type: string
        - id: applicationHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: applicationHealthReport.sequenceNumber
          type: string
        - id: applicationHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendApplicationHealthReport(applicationName,
        applicationHealthReport, options, callback);
    fullName: >-
      ServiceFabricClient.sendApplicationHealthReport(applicationName,
      applicationHealthReport, options, callback)
    children:
      - 'ServiceFabricClient#sendApplicationHealthReport~client'
      - 'ServiceFabricClient#sendApplicationHealthReport~callback'
      - 'ServiceFabricClient#sendApplicationHealthReport~options'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendApplicationHealthReport~queryParameters'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendApplicationHealthReport~regex'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestUrl'
      - 'ServiceFabricClient#sendApplicationHealthReport~httpRequest'
      - 'ServiceFabricClient#sendApplicationHealthReport~headerName'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestContent'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestModel'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestModelMapper'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestModel'
      - 'ServiceFabricClient#sendApplicationHealthReport~requestContent'
      - 'ServiceFabricClient#sendApplicationHealthReport~serializationError'
  - uid: 'ServiceFabricClient#newApplication'
    id: newApplication
    parent: ServiceFabricClient
    name: 'newApplication(applicationDescription, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationDescription
          type: object
          description: The description of the application
        - id: applicationDescription.name
          type: string
        - id: applicationDescription.typeName
          type: string
        - id: applicationDescription.typeVersion
          type: string
        - id: applicationDescription.parameterList
          type: array
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function newApplication(applicationDescription, options, callback);'
    fullName: >-
      ServiceFabricClient.newApplication(applicationDescription, options,
      callback)
    children:
      - 'ServiceFabricClient#newApplication~client'
      - 'ServiceFabricClient#newApplication~callback'
      - 'ServiceFabricClient#newApplication~options'
      - 'ServiceFabricClient#newApplication~requestUrl'
      - 'ServiceFabricClient#newApplication~queryParameters'
      - 'ServiceFabricClient#newApplication~requestUrl'
      - 'ServiceFabricClient#newApplication~regex'
      - 'ServiceFabricClient#newApplication~requestUrl'
      - 'ServiceFabricClient#newApplication~httpRequest'
      - 'ServiceFabricClient#newApplication~headerName'
      - 'ServiceFabricClient#newApplication~requestContent'
      - 'ServiceFabricClient#newApplication~requestModel'
      - 'ServiceFabricClient#newApplication~requestModelMapper'
      - 'ServiceFabricClient#newApplication~requestModel'
      - 'ServiceFabricClient#newApplication~requestContent'
      - 'ServiceFabricClient#newApplication~serializationError'
  - uid: 'ServiceFabricClient#newService'
    id: newService
    parent: ServiceFabricClient
    name: 'newService(applicationName, serviceDescription, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceDescription
          type: object
          description: The description of the service
        - id: serviceDescription.applicationName
          type: string
        - id: serviceDescription.serviceName
          type: string
        - id: serviceDescription.serviceTypeName
          type: string
        - id: serviceDescription.partitionDescription
          type: object
        - id: serviceDescription.partitionDescription.partitionScheme
          type: number
        - id: serviceDescription.partitionDescription.count
          type: number
        - id: serviceDescription.partitionDescription.names
          type: array
        - id: serviceDescription.partitionDescription.lowKey
          type: string
        - id: serviceDescription.partitionDescription.highKey
          type: string
        - id: serviceDescription.placementConstraints
          type: string
        - id: serviceDescription.correlationScheme
          type: object
        - id: serviceDescription.serviceLoadMetrics
          type: object
        - id: serviceDescription.servicePlacementPolicies
          type: object
        - id: serviceDescription.servicePlacementPolicies.serviceName
          type: string
        - id: serviceDescription.servicePlacementPolicies.serviceCorrelationScheme
          type: number
        - id: serviceDescription.flags
          type: number
        - id: serviceDescription.ServiceKind
          type: string
          description: Polymorhpic Discriminator
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function newService(applicationName, serviceDescription, options,
        callback);
    fullName: >-
      ServiceFabricClient.newService(applicationName, serviceDescription,
      options, callback)
    children:
      - 'ServiceFabricClient#newService~client'
      - 'ServiceFabricClient#newService~callback'
      - 'ServiceFabricClient#newService~options'
      - 'ServiceFabricClient#newService~requestUrl'
      - 'ServiceFabricClient#newService~requestUrl'
      - 'ServiceFabricClient#newService~queryParameters'
      - 'ServiceFabricClient#newService~requestUrl'
      - 'ServiceFabricClient#newService~regex'
      - 'ServiceFabricClient#newService~requestUrl'
      - 'ServiceFabricClient#newService~httpRequest'
      - 'ServiceFabricClient#newService~headerName'
      - 'ServiceFabricClient#newService~requestContent'
      - 'ServiceFabricClient#newService~requestModel'
      - 'ServiceFabricClient#newService~requestModelMapper'
      - 'ServiceFabricClient#newService~requestModel'
      - 'ServiceFabricClient#newService~requestContent'
      - 'ServiceFabricClient#newService~serializationError'
  - uid: 'ServiceFabricClient#newServiceFromTemplate'
    id: newServiceFromTemplate
    parent: ServiceFabricClient
    name: >-
      newServiceFromTemplate(applicationName, serviceDescriptionTemplate,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceDescriptionTemplate
          type: object
          description: "The template of the service\rdescription"
        - id: serviceDescriptionTemplate.serviceName
          type: string
        - id: serviceDescriptionTemplate.serviceTypeName
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function newServiceFromTemplate(applicationName,
        serviceDescriptionTemplate, options, callback);
    fullName: >-
      ServiceFabricClient.newServiceFromTemplate(applicationName,
      serviceDescriptionTemplate, options, callback)
    children:
      - 'ServiceFabricClient#newServiceFromTemplate~client'
      - 'ServiceFabricClient#newServiceFromTemplate~callback'
      - 'ServiceFabricClient#newServiceFromTemplate~options'
      - 'ServiceFabricClient#newServiceFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceFromTemplate~queryParameters'
      - 'ServiceFabricClient#newServiceFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceFromTemplate~regex'
      - 'ServiceFabricClient#newServiceFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceFromTemplate~httpRequest'
      - 'ServiceFabricClient#newServiceFromTemplate~headerName'
      - 'ServiceFabricClient#newServiceFromTemplate~requestContent'
      - 'ServiceFabricClient#newServiceFromTemplate~requestModel'
      - 'ServiceFabricClient#newServiceFromTemplate~requestModelMapper'
      - 'ServiceFabricClient#newServiceFromTemplate~requestModel'
      - 'ServiceFabricClient#newServiceFromTemplate~requestContent'
      - 'ServiceFabricClient#newServiceFromTemplate~serializationError'
  - uid: 'ServiceFabricClient#newServiceGroup'
    id: newServiceGroup
    parent: ServiceFabricClient
    name: >-
      newServiceGroup(applicationName, serviceGroupDescription, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the service group
        - id: serviceGroupDescription
          type: object
          description: The description of the service group
        - id: serviceGroupDescription.applicationName
          type: string
        - id: serviceGroupDescription.serviceName
          type: string
        - id: serviceGroupDescription.serviceTypeName
          type: string
        - id: serviceGroupDescription.partitionDescription
          type: object
        - id: serviceGroupDescription.partitionDescription.partitionScheme
          type: number
        - id: serviceGroupDescription.partitionDescription.count
          type: number
        - id: serviceGroupDescription.partitionDescription.names
          type: array
        - id: serviceGroupDescription.partitionDescription.lowKey
          type: string
        - id: serviceGroupDescription.partitionDescription.highKey
          type: string
        - id: serviceGroupDescription.placementConstraints
          type: string
        - id: serviceGroupDescription.correlationScheme
          type: object
        - id: serviceGroupDescription.serviceLoadMetrics
          type: object
        - id: serviceGroupDescription.servicePlacementPolicies
          type: object
        - id: serviceGroupDescription.servicePlacementPolicies.serviceName
          type: string
        - id: >-
            serviceGroupDescription.servicePlacementPolicies.serviceCorrelationScheme
          type: number
        - id: serviceGroupDescription.flags
          type: number
        - id: serviceGroupDescription.serviceGroupMemberDescription
          type: array
        - id: serviceGroupDescription.ServiceKind
          type: string
          description: "Polymorhpic\rDiscriminator"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function newServiceGroup(applicationName, serviceGroupDescription,
        options, callback);
    fullName: >-
      ServiceFabricClient.newServiceGroup(applicationName,
      serviceGroupDescription, options, callback)
    children:
      - 'ServiceFabricClient#newServiceGroup~client'
      - 'ServiceFabricClient#newServiceGroup~callback'
      - 'ServiceFabricClient#newServiceGroup~options'
      - 'ServiceFabricClient#newServiceGroup~requestUrl'
      - 'ServiceFabricClient#newServiceGroup~requestUrl'
      - 'ServiceFabricClient#newServiceGroup~queryParameters'
      - 'ServiceFabricClient#newServiceGroup~requestUrl'
      - 'ServiceFabricClient#newServiceGroup~regex'
      - 'ServiceFabricClient#newServiceGroup~requestUrl'
      - 'ServiceFabricClient#newServiceGroup~httpRequest'
      - 'ServiceFabricClient#newServiceGroup~headerName'
      - 'ServiceFabricClient#newServiceGroup~requestContent'
      - 'ServiceFabricClient#newServiceGroup~requestModel'
      - 'ServiceFabricClient#newServiceGroup~requestModelMapper'
      - 'ServiceFabricClient#newServiceGroup~requestModel'
      - 'ServiceFabricClient#newServiceGroup~requestContent'
      - 'ServiceFabricClient#newServiceGroup~serializationError'
  - uid: 'ServiceFabricClient#newServiceGroupFromTemplate'
    id: newServiceGroupFromTemplate
    parent: ServiceFabricClient
    name: >-
      newServiceGroupFromTemplate(applicationName, serviceDescriptionTemplate,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceDescriptionTemplate
          type: object
          description: "The template of the service\rdescription"
        - id: serviceDescriptionTemplate.serviceName
          type: string
        - id: serviceDescriptionTemplate.serviceTypeName
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function newServiceGroupFromTemplate(applicationName,
        serviceDescriptionTemplate, options, callback);
    fullName: >-
      ServiceFabricClient.newServiceGroupFromTemplate(applicationName,
      serviceDescriptionTemplate, options, callback)
    children:
      - 'ServiceFabricClient#newServiceGroupFromTemplate~client'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~callback'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~options'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~queryParameters'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~regex'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestUrl'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~httpRequest'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~headerName'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestContent'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestModel'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestModelMapper'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestModel'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~requestContent'
      - 'ServiceFabricClient#newServiceGroupFromTemplate~serializationError'
  - uid: 'ServiceFabricClient#updateServiceGroup'
    id: updateServiceGroup
    parent: ServiceFabricClient
    name: >-
      updateServiceGroup(applicationName, serviceName,
      serviceGroupUpdateDescription, options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceName
          type: string
          description: The name of the service
        - id: serviceGroupUpdateDescription
          type: object
          description: "The description of the\rservice group update"
        - id: serviceGroupUpdateDescription.flags
          type: number
        - id: serviceGroupUpdateDescription.ServiceKind
          type: string
          description: "Polymorhpic\rDiscriminator"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateServiceGroup(applicationName, serviceName,
        serviceGroupUpdateDescription, options, callback);
    fullName: >-
      ServiceFabricClient.updateServiceGroup(applicationName, serviceName,
      serviceGroupUpdateDescription, options, callback)
    children:
      - 'ServiceFabricClient#updateServiceGroup~client'
      - 'ServiceFabricClient#updateServiceGroup~callback'
      - 'ServiceFabricClient#updateServiceGroup~options'
      - 'ServiceFabricClient#updateServiceGroup~requestUrl'
      - 'ServiceFabricClient#updateServiceGroup~requestUrl'
      - 'ServiceFabricClient#updateServiceGroup~requestUrl'
      - 'ServiceFabricClient#updateServiceGroup~queryParameters'
      - 'ServiceFabricClient#updateServiceGroup~requestUrl'
      - 'ServiceFabricClient#updateServiceGroup~regex'
      - 'ServiceFabricClient#updateServiceGroup~requestUrl'
      - 'ServiceFabricClient#updateServiceGroup~httpRequest'
      - 'ServiceFabricClient#updateServiceGroup~headerName'
      - 'ServiceFabricClient#updateServiceGroup~requestContent'
      - 'ServiceFabricClient#updateServiceGroup~requestModel'
      - 'ServiceFabricClient#updateServiceGroup~requestModelMapper'
      - 'ServiceFabricClient#updateServiceGroup~requestModel'
      - 'ServiceFabricClient#updateServiceGroup~requestContent'
      - 'ServiceFabricClient#updateServiceGroup~serializationError'
  - uid: 'ServiceFabricClient#removeApplication'
    id: removeApplication
    parent: ServiceFabricClient
    name: 'removeApplication(applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function removeApplication(applicationName, options, callback);'
    fullName: 'ServiceFabricClient.removeApplication(applicationName, options, callback)'
    children:
      - 'ServiceFabricClient#removeApplication~client'
      - 'ServiceFabricClient#removeApplication~callback'
      - 'ServiceFabricClient#removeApplication~options'
      - 'ServiceFabricClient#removeApplication~requestUrl'
      - 'ServiceFabricClient#removeApplication~requestUrl'
      - 'ServiceFabricClient#removeApplication~queryParameters'
      - 'ServiceFabricClient#removeApplication~requestUrl'
      - 'ServiceFabricClient#removeApplication~regex'
      - 'ServiceFabricClient#removeApplication~requestUrl'
      - 'ServiceFabricClient#removeApplication~httpRequest'
      - 'ServiceFabricClient#removeApplication~headerName'
  - uid: 'ServiceFabricClient#startApplicationUpgrade'
    id: startApplicationUpgrade
    parent: ServiceFabricClient
    name: >-
      startApplicationUpgrade(applicationName,
      startApplicationUpgradeDescription, options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: startApplicationUpgradeDescription
          type: object
          description: "The description of the\rstart application upgrade"
        - id: startApplicationUpgradeDescription.name
          type: string
        - id: startApplicationUpgradeDescription.targetApplicationTypeVersion
          type: string
        - id: startApplicationUpgradeDescription.parameters
          type: array
        - id: startApplicationUpgradeDescription.upgradeKind
          type: number
        - id: startApplicationUpgradeDescription.rollingUpgradeMode
          type: number
        - id: >-
            startApplicationUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type: number
        - id: startApplicationUpgradeDescription.forceRestart
          type: boolean
        - id: startApplicationUpgradeDescription.monitoringPolicy
          type: object
        - id: startApplicationUpgradeDescription.monitoringPolicy.failureAction
          type: number
        - id: >-
            startApplicationUpgradeDescription.monitoringPolicy.healthCheckWaitDurationInMilliseconds
          type: string
        - id: >-
            startApplicationUpgradeDescription.monitoringPolicy.healthCheckStableDurationInMilliseconds
          type: string
        - id: >-
            startApplicationUpgradeDescription.monitoringPolicy.healthCheckRetryTimeoutInMilliseconds
          type: string
        - id: >-
            startApplicationUpgradeDescription.monitoringPolicy.upgradeTimeoutInMilliseconds
          type: string
        - id: >-
            startApplicationUpgradeDescription.monitoringPolicy.upgradeDomainTimeoutInMilliseconds
          type: string
        - id: startApplicationUpgradeDescription.applicationHealthPolicy
          type: object
        - id: >-
            startApplicationUpgradeDescription.applicationHealthPolicy.considerWarningAsError
          type: boolean
        - id: >-
            startApplicationUpgradeDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type: number
        - id: >-
            startApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type: object
        - id: >-
            startApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type: number
        - id: >-
            startApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type: number
        - id: >-
            startApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type: number
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function startApplicationUpgrade(applicationName,
        startApplicationUpgradeDescription, options, callback);
    fullName: >-
      ServiceFabricClient.startApplicationUpgrade(applicationName,
      startApplicationUpgradeDescription, options, callback)
    children:
      - 'ServiceFabricClient#startApplicationUpgrade~client'
      - 'ServiceFabricClient#startApplicationUpgrade~callback'
      - 'ServiceFabricClient#startApplicationUpgrade~options'
      - 'ServiceFabricClient#startApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgrade~queryParameters'
      - 'ServiceFabricClient#startApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgrade~regex'
      - 'ServiceFabricClient#startApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgrade~httpRequest'
      - 'ServiceFabricClient#startApplicationUpgrade~headerName'
      - 'ServiceFabricClient#startApplicationUpgrade~requestContent'
      - 'ServiceFabricClient#startApplicationUpgrade~requestModel'
      - 'ServiceFabricClient#startApplicationUpgrade~requestModelMapper'
      - 'ServiceFabricClient#startApplicationUpgrade~requestModel'
      - 'ServiceFabricClient#startApplicationUpgrade~requestContent'
      - 'ServiceFabricClient#startApplicationUpgrade~serializationError'
  - uid: 'ServiceFabricClient#updateApplicationUpgrade'
    id: updateApplicationUpgrade
    parent: ServiceFabricClient
    name: >-
      updateApplicationUpgrade(applicationName,
      updateApplicationUpgradeDescription, options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: updateApplicationUpgradeDescription
          type: object
          description: "The description of the\rapplication upgrade"
        - id: updateApplicationUpgradeDescription.name
          type: string
        - id: updateApplicationUpgradeDescription.upgradeKind
          type: number
        - id: updateApplicationUpgradeDescription.updateDescription
          type: object
        - id: >-
            updateApplicationUpgradeDescription.updateDescription.rollingUpgradeMode
          type: number
        - id: updateApplicationUpgradeDescription.updateDescription.forceRestart
          type: boolean
        - id: updateApplicationUpgradeDescription.updateDescription.failureAction
          type: number
        - id: >-
            updateApplicationUpgradeDescription.updateDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type: number
        - id: >-
            updateApplicationUpgradeDescription.updateDescription.healthCheckWaitDurationInMilliseconds
          type: string
        - id: >-
            updateApplicationUpgradeDescription.updateDescription.healthCheckStableDurationInMilliseconds
          type: string
        - id: >-
            updateApplicationUpgradeDescription.updateDescription.healthCheckRetryTimeoutInMilliseconds
          type: string
        - id: >-
            updateApplicationUpgradeDescription.updateDescription.upgradeTimeoutInMilliseconds
          type: string
        - id: >-
            updateApplicationUpgradeDescription.updateDescription.upgradeDomainTimeoutInMilliseconds
          type: string
        - id: updateApplicationUpgradeDescription.applicationHealthPolicy
          type: object
        - id: >-
            updateApplicationUpgradeDescription.applicationHealthPolicy.considerWarningAsError
          type: boolean
        - id: >-
            updateApplicationUpgradeDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type: number
        - id: >-
            updateApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type: object
        - id: >-
            updateApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type: number
        - id: >-
            updateApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type: number
        - id: >-
            updateApplicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type: number
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateApplicationUpgrade(applicationName,
        updateApplicationUpgradeDescription, options, callback);
    fullName: >-
      ServiceFabricClient.updateApplicationUpgrade(applicationName,
      updateApplicationUpgradeDescription, options, callback)
    children:
      - 'ServiceFabricClient#updateApplicationUpgrade~client'
      - 'ServiceFabricClient#updateApplicationUpgrade~callback'
      - 'ServiceFabricClient#updateApplicationUpgrade~options'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#updateApplicationUpgrade~queryParameters'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#updateApplicationUpgrade~regex'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#updateApplicationUpgrade~httpRequest'
      - 'ServiceFabricClient#updateApplicationUpgrade~headerName'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestContent'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestModel'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestModelMapper'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestModel'
      - 'ServiceFabricClient#updateApplicationUpgrade~requestContent'
      - 'ServiceFabricClient#updateApplicationUpgrade~serializationError'
  - uid: 'ServiceFabricClient#resumeApplicationUpgrade'
    id: resumeApplicationUpgrade
    parent: ServiceFabricClient
    name: >-
      resumeApplicationUpgrade(applicationName, resumeApplicationUpgrade,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: resumeApplicationUpgrade
          type: object
          description: "The upgrade of the resume\rapplication"
        - id: resumeApplicationUpgrade.upgradeDomainName
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function resumeApplicationUpgrade(applicationName,
        resumeApplicationUpgrade, options, callback);
    fullName: >-
      ServiceFabricClient.resumeApplicationUpgrade(applicationName,
      resumeApplicationUpgrade, options, callback)
    children:
      - 'ServiceFabricClient#resumeApplicationUpgrade~client'
      - 'ServiceFabricClient#resumeApplicationUpgrade~callback'
      - 'ServiceFabricClient#resumeApplicationUpgrade~options'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#resumeApplicationUpgrade~queryParameters'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#resumeApplicationUpgrade~regex'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestUrl'
      - 'ServiceFabricClient#resumeApplicationUpgrade~httpRequest'
      - 'ServiceFabricClient#resumeApplicationUpgrade~headerName'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestContent'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestModel'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestModelMapper'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestModel'
      - 'ServiceFabricClient#resumeApplicationUpgrade~requestContent'
      - 'ServiceFabricClient#resumeApplicationUpgrade~serializationError'
  - uid: 'ServiceFabricClient#startApplicationUpgradeRollback'
    id: startApplicationUpgradeRollback
    parent: ServiceFabricClient
    name: 'startApplicationUpgradeRollback(applicationName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function startApplicationUpgradeRollback(applicationName, options,
        callback);
    fullName: >-
      ServiceFabricClient.startApplicationUpgradeRollback(applicationName,
      options, callback)
    children:
      - 'ServiceFabricClient#startApplicationUpgradeRollback~client'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~callback'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~options'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~queryParameters'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~regex'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~requestUrl'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~httpRequest'
      - 'ServiceFabricClient#startApplicationUpgradeRollback~headerName'
  - uid: 'ServiceFabricClient#updateService'
    id: updateService
    parent: ServiceFabricClient
    name: 'updateService(serviceName, serviceUpdateDescription, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: serviceUpdateDescription
          type: object
          description: "The description of the service\rupdate"
        - id: serviceUpdateDescription.flags
          type: number
        - id: serviceUpdateDescription.ServiceKind
          type: string
          description: "Polymorhpic\rDiscriminator"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateService(serviceName, serviceUpdateDescription, options,
        callback);
    fullName: >-
      ServiceFabricClient.updateService(serviceName, serviceUpdateDescription,
      options, callback)
    children:
      - 'ServiceFabricClient#updateService~client'
      - 'ServiceFabricClient#updateService~callback'
      - 'ServiceFabricClient#updateService~options'
      - 'ServiceFabricClient#updateService~requestUrl'
      - 'ServiceFabricClient#updateService~requestUrl'
      - 'ServiceFabricClient#updateService~queryParameters'
      - 'ServiceFabricClient#updateService~requestUrl'
      - 'ServiceFabricClient#updateService~regex'
      - 'ServiceFabricClient#updateService~requestUrl'
      - 'ServiceFabricClient#updateService~httpRequest'
      - 'ServiceFabricClient#updateService~headerName'
      - 'ServiceFabricClient#updateService~requestContent'
      - 'ServiceFabricClient#updateService~requestModel'
      - 'ServiceFabricClient#updateService~requestModelMapper'
      - 'ServiceFabricClient#updateService~requestModel'
      - 'ServiceFabricClient#updateService~requestContent'
      - 'ServiceFabricClient#updateService~serializationError'
  - uid: 'ServiceFabricClient#removeService'
    id: removeService
    parent: ServiceFabricClient
    name: 'removeService(serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function removeService(serviceName, options, callback);'
    fullName: 'ServiceFabricClient.removeService(serviceName, options, callback)'
    children:
      - 'ServiceFabricClient#removeService~client'
      - 'ServiceFabricClient#removeService~callback'
      - 'ServiceFabricClient#removeService~options'
      - 'ServiceFabricClient#removeService~requestUrl'
      - 'ServiceFabricClient#removeService~requestUrl'
      - 'ServiceFabricClient#removeService~queryParameters'
      - 'ServiceFabricClient#removeService~requestUrl'
      - 'ServiceFabricClient#removeService~regex'
      - 'ServiceFabricClient#removeService~requestUrl'
      - 'ServiceFabricClient#removeService~httpRequest'
      - 'ServiceFabricClient#removeService~headerName'
  - uid: 'ServiceFabricClient#removeServiceGroup'
    id: removeServiceGroup
    parent: ServiceFabricClient
    name: 'removeServiceGroup(applicationName, serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: applicationName
          type: string
          description: The name of the application
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function removeServiceGroup(applicationName, serviceName, options,
        callback);
    fullName: >-
      ServiceFabricClient.removeServiceGroup(applicationName, serviceName,
      options, callback)
    children:
      - 'ServiceFabricClient#removeServiceGroup~client'
      - 'ServiceFabricClient#removeServiceGroup~callback'
      - 'ServiceFabricClient#removeServiceGroup~options'
      - 'ServiceFabricClient#removeServiceGroup~requestUrl'
      - 'ServiceFabricClient#removeServiceGroup~requestUrl'
      - 'ServiceFabricClient#removeServiceGroup~requestUrl'
      - 'ServiceFabricClient#removeServiceGroup~queryParameters'
      - 'ServiceFabricClient#removeServiceGroup~requestUrl'
      - 'ServiceFabricClient#removeServiceGroup~regex'
      - 'ServiceFabricClient#removeServiceGroup~requestUrl'
      - 'ServiceFabricClient#removeServiceGroup~httpRequest'
      - 'ServiceFabricClient#removeServiceGroup~headerName'
  - uid: 'ServiceFabricClient#getServiceDescription'
    id: getServiceDescription
    parent: ServiceFabricClient
    name: 'getServiceDescription(serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ServiceDescription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getServiceDescription(serviceName, options, callback);'
    fullName: 'ServiceFabricClient.getServiceDescription(serviceName, options, callback)'
    children:
      - 'ServiceFabricClient#getServiceDescription~client'
      - 'ServiceFabricClient#getServiceDescription~callback'
      - 'ServiceFabricClient#getServiceDescription~options'
      - 'ServiceFabricClient#getServiceDescription~requestUrl'
      - 'ServiceFabricClient#getServiceDescription~requestUrl'
      - 'ServiceFabricClient#getServiceDescription~queryParameters'
      - 'ServiceFabricClient#getServiceDescription~requestUrl'
      - 'ServiceFabricClient#getServiceDescription~regex'
      - 'ServiceFabricClient#getServiceDescription~requestUrl'
      - 'ServiceFabricClient#getServiceDescription~httpRequest'
      - 'ServiceFabricClient#getServiceDescription~headerName'
  - uid: 'ServiceFabricClient#resolveService'
    id: resolveService
    parent: ServiceFabricClient
    name: 'resolveService(serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.partitionKeyType
          type: number
          description: The type of the partition key
        - id: options.partitionKeyValue
          type: string
          description: The value of the partition key
        - id: options.previousRspVersion
          type: string
          description: The version of the previous rsp
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ResolvedServicePartition} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function resolveService(serviceName, options, callback);'
    fullName: 'ServiceFabricClient.resolveService(serviceName, options, callback)'
    children:
      - 'ServiceFabricClient#resolveService~client'
      - 'ServiceFabricClient#resolveService~callback'
      - 'ServiceFabricClient#resolveService~options'
      - 'ServiceFabricClient#resolveService~partitionKeyType'
      - 'ServiceFabricClient#resolveService~partitionKeyValue'
      - 'ServiceFabricClient#resolveService~previousRspVersion'
      - 'ServiceFabricClient#resolveService~requestUrl'
      - 'ServiceFabricClient#resolveService~requestUrl'
      - 'ServiceFabricClient#resolveService~queryParameters'
      - 'ServiceFabricClient#resolveService~requestUrl'
      - 'ServiceFabricClient#resolveService~regex'
      - 'ServiceFabricClient#resolveService~requestUrl'
      - 'ServiceFabricClient#resolveService~httpRequest'
      - 'ServiceFabricClient#resolveService~headerName'
  - uid: 'ServiceFabricClient#getServiceHealth'
    id: getServiceHealth
    parent: ServiceFabricClient
    name: 'getServiceHealth(serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ServiceHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getServiceHealth(serviceName, options, callback);'
    fullName: 'ServiceFabricClient.getServiceHealth(serviceName, options, callback)'
    children:
      - 'ServiceFabricClient#getServiceHealth~client'
      - 'ServiceFabricClient#getServiceHealth~callback'
      - 'ServiceFabricClient#getServiceHealth~options'
      - 'ServiceFabricClient#getServiceHealth~requestUrl'
      - 'ServiceFabricClient#getServiceHealth~requestUrl'
      - 'ServiceFabricClient#getServiceHealth~queryParameters'
      - 'ServiceFabricClient#getServiceHealth~requestUrl'
      - 'ServiceFabricClient#getServiceHealth~regex'
      - 'ServiceFabricClient#getServiceHealth~requestUrl'
      - 'ServiceFabricClient#getServiceHealth~httpRequest'
      - 'ServiceFabricClient#getServiceHealth~headerName'
  - uid: 'ServiceFabricClient#sendServiceHealth'
    id: sendServiceHealth
    parent: ServiceFabricClient
    name: 'sendServiceHealth(serviceName, serviceHealthReport, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: serviceHealthReport
          type: object
          description: The report of the service health
        - id: serviceHealthReport.sourceId
          type: string
        - id: serviceHealthReport.property
          type: string
        - id: serviceHealthReport.healthState
          type: number
        - id: serviceHealthReport.description
          type: string
        - id: serviceHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: serviceHealthReport.sequenceNumber
          type: string
        - id: serviceHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendServiceHealth(serviceName, serviceHealthReport, options,
        callback);
    fullName: >-
      ServiceFabricClient.sendServiceHealth(serviceName, serviceHealthReport,
      options, callback)
    children:
      - 'ServiceFabricClient#sendServiceHealth~client'
      - 'ServiceFabricClient#sendServiceHealth~callback'
      - 'ServiceFabricClient#sendServiceHealth~options'
      - 'ServiceFabricClient#sendServiceHealth~requestUrl'
      - 'ServiceFabricClient#sendServiceHealth~requestUrl'
      - 'ServiceFabricClient#sendServiceHealth~queryParameters'
      - 'ServiceFabricClient#sendServiceHealth~requestUrl'
      - 'ServiceFabricClient#sendServiceHealth~regex'
      - 'ServiceFabricClient#sendServiceHealth~requestUrl'
      - 'ServiceFabricClient#sendServiceHealth~httpRequest'
      - 'ServiceFabricClient#sendServiceHealth~headerName'
      - 'ServiceFabricClient#sendServiceHealth~requestContent'
      - 'ServiceFabricClient#sendServiceHealth~requestModel'
      - 'ServiceFabricClient#sendServiceHealth~requestModelMapper'
      - 'ServiceFabricClient#sendServiceHealth~requestModel'
      - 'ServiceFabricClient#sendServiceHealth~requestContent'
      - 'ServiceFabricClient#sendServiceHealth~serializationError'
  - uid: 'ServiceFabricClient#getPartitionList'
    id: getPartitionList
    parent: ServiceFabricClient
    name: 'getPartitionList(serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getPartitionList(serviceName, options, callback);'
    fullName: 'ServiceFabricClient.getPartitionList(serviceName, options, callback)'
    children:
      - 'ServiceFabricClient#getPartitionList~client'
      - 'ServiceFabricClient#getPartitionList~callback'
      - 'ServiceFabricClient#getPartitionList~options'
      - 'ServiceFabricClient#getPartitionList~requestUrl'
      - 'ServiceFabricClient#getPartitionList~requestUrl'
      - 'ServiceFabricClient#getPartitionList~queryParameters'
      - 'ServiceFabricClient#getPartitionList~requestUrl'
      - 'ServiceFabricClient#getPartitionList~regex'
      - 'ServiceFabricClient#getPartitionList~requestUrl'
      - 'ServiceFabricClient#getPartitionList~httpRequest'
      - 'ServiceFabricClient#getPartitionList~headerName'
  - uid: 'ServiceFabricClient#getPartition'
    id: getPartition
    parent: ServiceFabricClient
    name: 'getPartition(serviceName, partitionId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: partitionId
          type: string
          description: The id of the partition
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Partition} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getPartition(serviceName, partitionId, options, callback);'
    fullName: >-
      ServiceFabricClient.getPartition(serviceName, partitionId, options,
      callback)
    children:
      - 'ServiceFabricClient#getPartition~client'
      - 'ServiceFabricClient#getPartition~callback'
      - 'ServiceFabricClient#getPartition~options'
      - 'ServiceFabricClient#getPartition~requestUrl'
      - 'ServiceFabricClient#getPartition~requestUrl'
      - 'ServiceFabricClient#getPartition~requestUrl'
      - 'ServiceFabricClient#getPartition~queryParameters'
      - 'ServiceFabricClient#getPartition~requestUrl'
      - 'ServiceFabricClient#getPartition~regex'
      - 'ServiceFabricClient#getPartition~requestUrl'
      - 'ServiceFabricClient#getPartition~httpRequest'
      - 'ServiceFabricClient#getPartition~headerName'
  - uid: 'ServiceFabricClient#repairPartitionList'
    id: repairPartitionList
    parent: ServiceFabricClient
    name: 'repairPartitionList(serviceName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: serviceName
          type: string
          description: The name of the service
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function repairPartitionList(serviceName, options, callback);'
    fullName: 'ServiceFabricClient.repairPartitionList(serviceName, options, callback)'
    children:
      - 'ServiceFabricClient#repairPartitionList~client'
      - 'ServiceFabricClient#repairPartitionList~callback'
      - 'ServiceFabricClient#repairPartitionList~options'
      - 'ServiceFabricClient#repairPartitionList~requestUrl'
      - 'ServiceFabricClient#repairPartitionList~requestUrl'
      - 'ServiceFabricClient#repairPartitionList~queryParameters'
      - 'ServiceFabricClient#repairPartitionList~requestUrl'
      - 'ServiceFabricClient#repairPartitionList~regex'
      - 'ServiceFabricClient#repairPartitionList~requestUrl'
      - 'ServiceFabricClient#repairPartitionList~httpRequest'
      - 'ServiceFabricClient#repairPartitionList~headerName'
  - uid: 'ServiceFabricClient#repairPartition'
    id: repairPartition
    parent: ServiceFabricClient
    name: 'repairPartition(partitionId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function repairPartition(partitionId, options, callback);'
    fullName: 'ServiceFabricClient.repairPartition(partitionId, options, callback)'
    children:
      - 'ServiceFabricClient#repairPartition~client'
      - 'ServiceFabricClient#repairPartition~callback'
      - 'ServiceFabricClient#repairPartition~options'
      - 'ServiceFabricClient#repairPartition~requestUrl'
      - 'ServiceFabricClient#repairPartition~requestUrl'
      - 'ServiceFabricClient#repairPartition~queryParameters'
      - 'ServiceFabricClient#repairPartition~requestUrl'
      - 'ServiceFabricClient#repairPartition~regex'
      - 'ServiceFabricClient#repairPartition~requestUrl'
      - 'ServiceFabricClient#repairPartition~httpRequest'
      - 'ServiceFabricClient#repairPartition~headerName'
  - uid: 'ServiceFabricClient#resetPartitionLoad'
    id: resetPartitionLoad
    parent: ServiceFabricClient
    name: 'resetPartitionLoad(partitionId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function resetPartitionLoad(partitionId, options, callback);'
    fullName: 'ServiceFabricClient.resetPartitionLoad(partitionId, options, callback)'
    children:
      - 'ServiceFabricClient#resetPartitionLoad~client'
      - 'ServiceFabricClient#resetPartitionLoad~callback'
      - 'ServiceFabricClient#resetPartitionLoad~options'
      - 'ServiceFabricClient#resetPartitionLoad~requestUrl'
      - 'ServiceFabricClient#resetPartitionLoad~requestUrl'
      - 'ServiceFabricClient#resetPartitionLoad~queryParameters'
      - 'ServiceFabricClient#resetPartitionLoad~requestUrl'
      - 'ServiceFabricClient#resetPartitionLoad~regex'
      - 'ServiceFabricClient#resetPartitionLoad~requestUrl'
      - 'ServiceFabricClient#resetPartitionLoad~httpRequest'
      - 'ServiceFabricClient#resetPartitionLoad~headerName'
  - uid: 'ServiceFabricClient#getReplicaList'
    id: getReplicaList
    parent: ServiceFabricClient
    name: 'getReplicaList(partitionId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getReplicaList(partitionId, options, callback);'
    fullName: 'ServiceFabricClient.getReplicaList(partitionId, options, callback)'
    children:
      - 'ServiceFabricClient#getReplicaList~client'
      - 'ServiceFabricClient#getReplicaList~callback'
      - 'ServiceFabricClient#getReplicaList~options'
      - 'ServiceFabricClient#getReplicaList~requestUrl'
      - 'ServiceFabricClient#getReplicaList~requestUrl'
      - 'ServiceFabricClient#getReplicaList~queryParameters'
      - 'ServiceFabricClient#getReplicaList~requestUrl'
      - 'ServiceFabricClient#getReplicaList~regex'
      - 'ServiceFabricClient#getReplicaList~requestUrl'
      - 'ServiceFabricClient#getReplicaList~httpRequest'
      - 'ServiceFabricClient#getReplicaList~headerName'
  - uid: 'ServiceFabricClient#getReplica'
    id: getReplica
    parent: ServiceFabricClient
    name: 'getReplica(partitionId, replicaId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: replicaId
          type: string
          description: The id of the replica
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Replica} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getReplica(partitionId, replicaId, options, callback);'
    fullName: 'ServiceFabricClient.getReplica(partitionId, replicaId, options, callback)'
    children:
      - 'ServiceFabricClient#getReplica~client'
      - 'ServiceFabricClient#getReplica~callback'
      - 'ServiceFabricClient#getReplica~options'
      - 'ServiceFabricClient#getReplica~requestUrl'
      - 'ServiceFabricClient#getReplica~requestUrl'
      - 'ServiceFabricClient#getReplica~requestUrl'
      - 'ServiceFabricClient#getReplica~queryParameters'
      - 'ServiceFabricClient#getReplica~requestUrl'
      - 'ServiceFabricClient#getReplica~regex'
      - 'ServiceFabricClient#getReplica~requestUrl'
      - 'ServiceFabricClient#getReplica~httpRequest'
      - 'ServiceFabricClient#getReplica~headerName'
  - uid: 'ServiceFabricClient#getPartitionHealth'
    id: getPartitionHealth
    parent: ServiceFabricClient
    name: 'getPartitionHealth(partitionId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.eventsHealthStateFilter
          type: string
          description: "The filter of the events\rhealth state"
        - id: options.replicasHealthStateFilter
          type: string
          description: "The filter of the\rreplicas health state"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PartitionHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getPartitionHealth(partitionId, options, callback);'
    fullName: 'ServiceFabricClient.getPartitionHealth(partitionId, options, callback)'
    children:
      - 'ServiceFabricClient#getPartitionHealth~client'
      - 'ServiceFabricClient#getPartitionHealth~callback'
      - 'ServiceFabricClient#getPartitionHealth~options'
      - 'ServiceFabricClient#getPartitionHealth~eventsHealthStateFilter'
      - 'ServiceFabricClient#getPartitionHealth~replicasHealthStateFilter'
      - 'ServiceFabricClient#getPartitionHealth~requestUrl'
      - 'ServiceFabricClient#getPartitionHealth~requestUrl'
      - 'ServiceFabricClient#getPartitionHealth~queryParameters'
      - 'ServiceFabricClient#getPartitionHealth~requestUrl'
      - 'ServiceFabricClient#getPartitionHealth~regex'
      - 'ServiceFabricClient#getPartitionHealth~requestUrl'
      - 'ServiceFabricClient#getPartitionHealth~httpRequest'
      - 'ServiceFabricClient#getPartitionHealth~headerName'
  - uid: 'ServiceFabricClient#sendPartitionHealthReport'
    id: sendPartitionHealthReport
    parent: ServiceFabricClient
    name: >-
      sendPartitionHealthReport(partitionId, partitionHealthReport, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: partitionHealthReport
          type: object
          description: The report of the partition health
        - id: partitionHealthReport.sourceId
          type: string
        - id: partitionHealthReport.property
          type: string
        - id: partitionHealthReport.healthState
          type: number
        - id: partitionHealthReport.description
          type: string
        - id: partitionHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: partitionHealthReport.sequenceNumber
          type: string
        - id: partitionHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendPartitionHealthReport(partitionId, partitionHealthReport,
        options, callback);
    fullName: >-
      ServiceFabricClient.sendPartitionHealthReport(partitionId,
      partitionHealthReport, options, callback)
    children:
      - 'ServiceFabricClient#sendPartitionHealthReport~client'
      - 'ServiceFabricClient#sendPartitionHealthReport~callback'
      - 'ServiceFabricClient#sendPartitionHealthReport~options'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestUrl'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestUrl'
      - 'ServiceFabricClient#sendPartitionHealthReport~queryParameters'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestUrl'
      - 'ServiceFabricClient#sendPartitionHealthReport~regex'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestUrl'
      - 'ServiceFabricClient#sendPartitionHealthReport~httpRequest'
      - 'ServiceFabricClient#sendPartitionHealthReport~headerName'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestContent'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestModel'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestModelMapper'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestModel'
      - 'ServiceFabricClient#sendPartitionHealthReport~requestContent'
      - 'ServiceFabricClient#sendPartitionHealthReport~serializationError'
  - uid: 'ServiceFabricClient#getReplicaHealth'
    id: getReplicaHealth
    parent: ServiceFabricClient
    name: 'getReplicaHealth(partitionId, replicaId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: replicaId
          type: string
          description: The id of the replica
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.eventsHealthStateFilter
          type: string
          description: "The filter of the events\rhealth state"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ReplicaHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getReplicaHealth(partitionId, replicaId, options, callback);'
    fullName: >-
      ServiceFabricClient.getReplicaHealth(partitionId, replicaId, options,
      callback)
    children:
      - 'ServiceFabricClient#getReplicaHealth~client'
      - 'ServiceFabricClient#getReplicaHealth~callback'
      - 'ServiceFabricClient#getReplicaHealth~options'
      - 'ServiceFabricClient#getReplicaHealth~eventsHealthStateFilter'
      - 'ServiceFabricClient#getReplicaHealth~requestUrl'
      - 'ServiceFabricClient#getReplicaHealth~requestUrl'
      - 'ServiceFabricClient#getReplicaHealth~requestUrl'
      - 'ServiceFabricClient#getReplicaHealth~queryParameters'
      - 'ServiceFabricClient#getReplicaHealth~requestUrl'
      - 'ServiceFabricClient#getReplicaHealth~regex'
      - 'ServiceFabricClient#getReplicaHealth~requestUrl'
      - 'ServiceFabricClient#getReplicaHealth~httpRequest'
      - 'ServiceFabricClient#getReplicaHealth~headerName'
  - uid: 'ServiceFabricClient#sendReplicaHealth'
    id: sendReplicaHealth
    parent: ServiceFabricClient
    name: >-
      sendReplicaHealth(partitionId, replicaId, replicaHealthReport, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: replicaId
          type: string
          description: The id of the replica
        - id: replicaHealthReport
          type: object
          description: The report of the replica health
        - id: replicaHealthReport.sourceId
          type: string
        - id: replicaHealthReport.property
          type: string
        - id: replicaHealthReport.healthState
          type: number
        - id: replicaHealthReport.description
          type: string
        - id: replicaHealthReport.timeToLiveInMilliSeconds
          type: string
        - id: replicaHealthReport.sequenceNumber
          type: string
        - id: replicaHealthReport.removeWhenExpired
          type: boolean
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function sendReplicaHealth(partitionId, replicaId, replicaHealthReport,
        options, callback);
    fullName: >-
      ServiceFabricClient.sendReplicaHealth(partitionId, replicaId,
      replicaHealthReport, options, callback)
    children:
      - 'ServiceFabricClient#sendReplicaHealth~client'
      - 'ServiceFabricClient#sendReplicaHealth~callback'
      - 'ServiceFabricClient#sendReplicaHealth~options'
      - 'ServiceFabricClient#sendReplicaHealth~requestUrl'
      - 'ServiceFabricClient#sendReplicaHealth~requestUrl'
      - 'ServiceFabricClient#sendReplicaHealth~requestUrl'
      - 'ServiceFabricClient#sendReplicaHealth~queryParameters'
      - 'ServiceFabricClient#sendReplicaHealth~requestUrl'
      - 'ServiceFabricClient#sendReplicaHealth~regex'
      - 'ServiceFabricClient#sendReplicaHealth~requestUrl'
      - 'ServiceFabricClient#sendReplicaHealth~httpRequest'
      - 'ServiceFabricClient#sendReplicaHealth~headerName'
      - 'ServiceFabricClient#sendReplicaHealth~requestContent'
      - 'ServiceFabricClient#sendReplicaHealth~requestModel'
      - 'ServiceFabricClient#sendReplicaHealth~requestModelMapper'
      - 'ServiceFabricClient#sendReplicaHealth~requestModel'
      - 'ServiceFabricClient#sendReplicaHealth~requestContent'
      - 'ServiceFabricClient#sendReplicaHealth~serializationError'
  - uid: 'ServiceFabricClient#getPartitionLoadInformation'
    id: getPartitionLoadInformation
    parent: ServiceFabricClient
    name: 'getPartitionLoadInformation(partitionId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PartitionLoadInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getPartitionLoadInformation(partitionId, options, callback);'
    fullName: >-
      ServiceFabricClient.getPartitionLoadInformation(partitionId, options,
      callback)
    children:
      - 'ServiceFabricClient#getPartitionLoadInformation~client'
      - 'ServiceFabricClient#getPartitionLoadInformation~callback'
      - 'ServiceFabricClient#getPartitionLoadInformation~options'
      - 'ServiceFabricClient#getPartitionLoadInformation~requestUrl'
      - 'ServiceFabricClient#getPartitionLoadInformation~requestUrl'
      - 'ServiceFabricClient#getPartitionLoadInformation~queryParameters'
      - 'ServiceFabricClient#getPartitionLoadInformation~requestUrl'
      - 'ServiceFabricClient#getPartitionLoadInformation~regex'
      - 'ServiceFabricClient#getPartitionLoadInformation~requestUrl'
      - 'ServiceFabricClient#getPartitionLoadInformation~httpRequest'
      - 'ServiceFabricClient#getPartitionLoadInformation~headerName'
  - uid: 'ServiceFabricClient#getReplicaLoadInformation'
    id: getReplicaLoadInformation
    parent: ServiceFabricClient
    name: 'getReplicaLoadInformation(partitionId, replicaId, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: partitionId
          type: string
          description: The id of the partition
        - id: replicaId
          type: string
          description: The id of the replica
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ReplicaLoadInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getReplicaLoadInformation(partitionId, replicaId, options,
        callback);
    fullName: >-
      ServiceFabricClient.getReplicaLoadInformation(partitionId, replicaId,
      options, callback)
    children:
      - 'ServiceFabricClient#getReplicaLoadInformation~client'
      - 'ServiceFabricClient#getReplicaLoadInformation~callback'
      - 'ServiceFabricClient#getReplicaLoadInformation~options'
      - 'ServiceFabricClient#getReplicaLoadInformation~requestUrl'
      - 'ServiceFabricClient#getReplicaLoadInformation~requestUrl'
      - 'ServiceFabricClient#getReplicaLoadInformation~requestUrl'
      - 'ServiceFabricClient#getReplicaLoadInformation~queryParameters'
      - 'ServiceFabricClient#getReplicaLoadInformation~requestUrl'
      - 'ServiceFabricClient#getReplicaLoadInformation~regex'
      - 'ServiceFabricClient#getReplicaLoadInformation~requestUrl'
      - 'ServiceFabricClient#getReplicaLoadInformation~httpRequest'
      - 'ServiceFabricClient#getReplicaLoadInformation~headerName'
  - uid: 'ServiceFabricClient#getClusterLoadInformation'
    id: getClusterLoadInformation
    parent: ServiceFabricClient
    name: 'getClusterLoadInformation(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ClusterLoadInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getClusterLoadInformation(options, callback);'
    fullName: 'ServiceFabricClient.getClusterLoadInformation(options, callback)'
    children:
      - 'ServiceFabricClient#getClusterLoadInformation~client'
      - 'ServiceFabricClient#getClusterLoadInformation~callback'
      - 'ServiceFabricClient#getClusterLoadInformation~options'
      - 'ServiceFabricClient#getClusterLoadInformation~requestUrl'
      - 'ServiceFabricClient#getClusterLoadInformation~queryParameters'
      - 'ServiceFabricClient#getClusterLoadInformation~requestUrl'
      - 'ServiceFabricClient#getClusterLoadInformation~regex'
      - 'ServiceFabricClient#getClusterLoadInformation~requestUrl'
      - 'ServiceFabricClient#getClusterLoadInformation~httpRequest'
      - 'ServiceFabricClient#getClusterLoadInformation~headerName'
  - uid: 'ServiceFabricClient#getClusterHealth'
    id: getClusterHealth
    parent: ServiceFabricClient
    name: 'getClusterHealth(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.eventsHealthStateFilter
          type: string
          description: "The filter of the events\rhealth state"
        - id: options.nodesHealthStateFilter
          type: string
          description: "The filter of the nodes\rhealth state"
        - id: options.applicationsHealthStateFilter
          type: string
          description: "The filter of the\rapplications health state"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ClusterHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getClusterHealth(options, callback);'
    fullName: 'ServiceFabricClient.getClusterHealth(options, callback)'
    children:
      - 'ServiceFabricClient#getClusterHealth~client'
      - 'ServiceFabricClient#getClusterHealth~callback'
      - 'ServiceFabricClient#getClusterHealth~options'
      - 'ServiceFabricClient#getClusterHealth~eventsHealthStateFilter'
      - 'ServiceFabricClient#getClusterHealth~nodesHealthStateFilter'
      - 'ServiceFabricClient#getClusterHealth~applicationsHealthStateFilter'
      - 'ServiceFabricClient#getClusterHealth~requestUrl'
      - 'ServiceFabricClient#getClusterHealth~queryParameters'
      - 'ServiceFabricClient#getClusterHealth~requestUrl'
      - 'ServiceFabricClient#getClusterHealth~regex'
      - 'ServiceFabricClient#getClusterHealth~requestUrl'
      - 'ServiceFabricClient#getClusterHealth~httpRequest'
      - 'ServiceFabricClient#getClusterHealth~headerName'
  - uid: 'ServiceFabricClient#getUpgradeProgress'
    id: getUpgradeProgress
    parent: ServiceFabricClient
    name: 'getUpgradeProgress(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ClusterUpgradeProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getUpgradeProgress(options, callback);'
    fullName: 'ServiceFabricClient.getUpgradeProgress(options, callback)'
    children:
      - 'ServiceFabricClient#getUpgradeProgress~client'
      - 'ServiceFabricClient#getUpgradeProgress~callback'
      - 'ServiceFabricClient#getUpgradeProgress~options'
      - 'ServiceFabricClient#getUpgradeProgress~requestUrl'
      - 'ServiceFabricClient#getUpgradeProgress~queryParameters'
      - 'ServiceFabricClient#getUpgradeProgress~requestUrl'
      - 'ServiceFabricClient#getUpgradeProgress~regex'
      - 'ServiceFabricClient#getUpgradeProgress~requestUrl'
      - 'ServiceFabricClient#getUpgradeProgress~httpRequest'
      - 'ServiceFabricClient#getUpgradeProgress~headerName'
references:
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true

items:
  - uid: Gateway
    id: Gateway
    name: Gateway
    type: Class
    syntax:
      content: Gateway
    fullName: Gateway
    children:
      - 'Gateway#client'
      - 'Gateway#create'
      - 'Gateway#beginCreate'
      - 'Gateway#update'
      - 'Gateway#beginUpdate'
      - 'Gateway#deleteMethod'
      - 'Gateway#get'
      - 'Gateway#list'
      - 'Gateway#listForResourceGroup'
      - 'Gateway#upgrade'
      - 'Gateway#beginUpgrade'
      - 'Gateway#regenerateProfile'
      - 'Gateway#beginRegenerateProfile'
      - 'Gateway#getProfile'
      - 'Gateway#beginGetProfile'
      - 'Gateway#listNext'
      - 'Gateway#listForResourceGroupNext'
  - uid: 'Gateway#client'
    id: client
    parent: Gateway
    name: client
    type: Field
    syntax:
      content: client
    fullName: Gateway.client
  - uid: 'Gateway#create'
    id: create
    parent: Gateway
    name: >-
      create(resourceGroupName, gatewayName, options, options.location,
      options.tags, options.autoUpgrade, options.customHeaders, callback)
    summary: Creates or updates a ManagementService gateway.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.location
          type: string
          description: location of the resource
        - id: options.tags
          type: object
          description: resource tags
        - id: options.autoUpgrade
          type: string
          description: "The autoUpgrade property gives the\rflexibility to gateway to auto upgrade itself. If properties value not\rspecified, then we assume autoUpgrade = Off. Possible values include:\r'On', 'Off'"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function create(resourceGroupName, gatewayName, options,
        options.location, options.tags, options.autoUpgrade,
        options.customHeaders, callback);
    fullName: >-
      Gateway.create(resourceGroupName, gatewayName, options, options.location,
      options.tags, options.autoUpgrade, options.customHeaders, callback)
    children:
      - 'Gateway#create~client'
      - 'Gateway#create~callback'
      - 'Gateway#create~options'
  - uid: 'Gateway#beginCreate'
    id: beginCreate
    parent: Gateway
    name: >-
      beginCreate(resourceGroupName, gatewayName, options, options.location,
      options.tags, options.autoUpgrade, options.customHeaders, callback)
    summary: Creates or updates a ManagementService gateway.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.location
          type: string
          description: location of the resource
        - id: options.tags
          type: object
          description: resource tags
        - id: options.autoUpgrade
          type: string
          description: "The autoUpgrade property gives the\rflexibility to gateway to auto upgrade itself. If properties value not\rspecified, then we assume autoUpgrade = Off. Possible values include:\r'On', 'Off'"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreate(resourceGroupName, gatewayName, options,
        options.location, options.tags, options.autoUpgrade,
        options.customHeaders, callback);
    fullName: >-
      Gateway.beginCreate(resourceGroupName, gatewayName, options,
      options.location, options.tags, options.autoUpgrade,
      options.customHeaders, callback)
    children:
      - 'Gateway#beginCreate~client'
      - 'Gateway#beginCreate~callback'
      - 'Gateway#beginCreate~options'
      - 'Gateway#beginCreate~location'
      - 'Gateway#beginCreate~tags'
      - 'Gateway#beginCreate~autoUpgrade'
      - 'Gateway#beginCreate~allowedValues'
      - 'Gateway#beginCreate~gatewayParameters'
      - 'Gateway#beginCreate~gatewayParameters'
      - 'Gateway#beginCreate~requestUrl'
      - 'Gateway#beginCreate~requestUrl'
      - 'Gateway#beginCreate~requestUrl'
      - 'Gateway#beginCreate~requestUrl'
      - 'Gateway#beginCreate~queryParameters'
      - 'Gateway#beginCreate~requestUrl'
      - 'Gateway#beginCreate~regex'
      - 'Gateway#beginCreate~requestUrl'
      - 'Gateway#beginCreate~httpRequest'
      - 'Gateway#beginCreate~headerName'
      - 'Gateway#beginCreate~requestContent'
      - 'Gateway#beginCreate~requestModel'
      - 'Gateway#beginCreate~requestModelMapper'
      - 'Gateway#beginCreate~requestModel'
      - 'Gateway#beginCreate~requestContent'
      - 'Gateway#beginCreate~serializationError'
  - uid: 'Gateway#update'
    id: update
    parent: Gateway
    name: >-
      update(resourceGroupName, gatewayName, options, options.location,
      options.tags, options.autoUpgrade, options.customHeaders, callback)
    summary: Updates a gateway belonging to a resource group.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.location
          type: string
          description: location of the resource
        - id: options.tags
          type: object
          description: resource tags
        - id: options.autoUpgrade
          type: string
          description: "The autoUpgrade property gives the\rflexibility to gateway to auto upgrade itself. If properties value not\rspecified, then we assume autoUpgrade = Off. Possible values include:\r'On', 'Off'"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function update(resourceGroupName, gatewayName, options,
        options.location, options.tags, options.autoUpgrade,
        options.customHeaders, callback);
    fullName: >-
      Gateway.update(resourceGroupName, gatewayName, options, options.location,
      options.tags, options.autoUpgrade, options.customHeaders, callback)
    children:
      - 'Gateway#update~client'
      - 'Gateway#update~callback'
      - 'Gateway#update~options'
  - uid: 'Gateway#beginUpdate'
    id: beginUpdate
    parent: Gateway
    name: >-
      beginUpdate(resourceGroupName, gatewayName, options, options.location,
      options.tags, options.autoUpgrade, options.customHeaders, callback)
    summary: Updates a gateway belonging to a resource group.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.location
          type: string
          description: location of the resource
        - id: options.tags
          type: object
          description: resource tags
        - id: options.autoUpgrade
          type: string
          description: "The autoUpgrade property gives the\rflexibility to gateway to auto upgrade itself. If properties value not\rspecified, then we assume autoUpgrade = Off. Possible values include:\r'On', 'Off'"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginUpdate(resourceGroupName, gatewayName, options,
        options.location, options.tags, options.autoUpgrade,
        options.customHeaders, callback);
    fullName: >-
      Gateway.beginUpdate(resourceGroupName, gatewayName, options,
      options.location, options.tags, options.autoUpgrade,
      options.customHeaders, callback)
    children:
      - 'Gateway#beginUpdate~client'
      - 'Gateway#beginUpdate~callback'
      - 'Gateway#beginUpdate~options'
      - 'Gateway#beginUpdate~location'
      - 'Gateway#beginUpdate~tags'
      - 'Gateway#beginUpdate~autoUpgrade'
      - 'Gateway#beginUpdate~allowedValues'
      - 'Gateway#beginUpdate~gatewayParameters'
      - 'Gateway#beginUpdate~gatewayParameters'
      - 'Gateway#beginUpdate~requestUrl'
      - 'Gateway#beginUpdate~requestUrl'
      - 'Gateway#beginUpdate~requestUrl'
      - 'Gateway#beginUpdate~requestUrl'
      - 'Gateway#beginUpdate~queryParameters'
      - 'Gateway#beginUpdate~requestUrl'
      - 'Gateway#beginUpdate~regex'
      - 'Gateway#beginUpdate~requestUrl'
      - 'Gateway#beginUpdate~httpRequest'
      - 'Gateway#beginUpdate~headerName'
      - 'Gateway#beginUpdate~requestContent'
      - 'Gateway#beginUpdate~requestModel'
      - 'Gateway#beginUpdate~requestModelMapper'
      - 'Gateway#beginUpdate~requestModel'
      - 'Gateway#beginUpdate~requestContent'
      - 'Gateway#beginUpdate~serializationError'
  - uid: 'Gateway#deleteMethod'
    id: deleteMethod
    parent: Gateway
    name: >-
      deleteMethod(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    summary: Deletes a gateway from a resource group.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(resourceGroupName, gatewayName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.deleteMethod(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#deleteMethod~client'
      - 'Gateway#deleteMethod~callback'
      - 'Gateway#deleteMethod~options'
      - 'Gateway#deleteMethod~requestUrl'
      - 'Gateway#deleteMethod~requestUrl'
      - 'Gateway#deleteMethod~requestUrl'
      - 'Gateway#deleteMethod~requestUrl'
      - 'Gateway#deleteMethod~queryParameters'
      - 'Gateway#deleteMethod~requestUrl'
      - 'Gateway#deleteMethod~regex'
      - 'Gateway#deleteMethod~requestUrl'
      - 'Gateway#deleteMethod~httpRequest'
      - 'Gateway#deleteMethod~headerName'
  - uid: 'Gateway#get'
    id: get
    parent: Gateway
    name: >-
      get(resourceGroupName, gatewayName, options, options.expand,
      options.customHeaders, callback)
    summary: Returns a gateway
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum)
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.expand
          type: string
          description: "Gets subscription credentials which\runiquely identify Microsoft Azure subscription. The subscription ID forms\rpart of the URI for every service call. Possible values include: 'status'"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function get(resourceGroupName, gatewayName, options, options.expand,
        options.customHeaders, callback);
    fullName: >-
      Gateway.get(resourceGroupName, gatewayName, options, options.expand,
      options.customHeaders, callback)
    children:
      - 'Gateway#get~client'
      - 'Gateway#get~callback'
      - 'Gateway#get~options'
      - 'Gateway#get~expand'
      - 'Gateway#get~allowedValues'
      - 'Gateway#get~requestUrl'
      - 'Gateway#get~requestUrl'
      - 'Gateway#get~requestUrl'
      - 'Gateway#get~requestUrl'
      - 'Gateway#get~queryParameters'
      - 'Gateway#get~requestUrl'
      - 'Gateway#get~regex'
      - 'Gateway#get~requestUrl'
      - 'Gateway#get~httpRequest'
      - 'Gateway#get~headerName'
  - uid: 'Gateway#list'
    id: list
    parent: Gateway
    name: 'list(options, options.customHeaders, callback)'
    summary: Returns gateways in a subscription
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResources} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(options, options.customHeaders, callback);'
    fullName: 'Gateway.list(options, options.customHeaders, callback)'
    children:
      - 'Gateway#list~client'
      - 'Gateway#list~callback'
      - 'Gateway#list~options'
      - 'Gateway#list~requestUrl'
      - 'Gateway#list~requestUrl'
      - 'Gateway#list~queryParameters'
      - 'Gateway#list~requestUrl'
      - 'Gateway#list~regex'
      - 'Gateway#list~requestUrl'
      - 'Gateway#list~httpRequest'
      - 'Gateway#list~headerName'
  - uid: 'Gateway#listForResourceGroup'
    id: listForResourceGroup
    parent: Gateway
    name: >-
      listForResourceGroup(resourceGroupName, options, options.customHeaders,
      callback)
    summary: Returns gateways in a resource group
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResources} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listForResourceGroup(resourceGroupName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.listForResourceGroup(resourceGroupName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#listForResourceGroup~client'
      - 'Gateway#listForResourceGroup~callback'
      - 'Gateway#listForResourceGroup~options'
      - 'Gateway#listForResourceGroup~requestUrl'
      - 'Gateway#listForResourceGroup~requestUrl'
      - 'Gateway#listForResourceGroup~requestUrl'
      - 'Gateway#listForResourceGroup~queryParameters'
      - 'Gateway#listForResourceGroup~requestUrl'
      - 'Gateway#listForResourceGroup~regex'
      - 'Gateway#listForResourceGroup~requestUrl'
      - 'Gateway#listForResourceGroup~httpRequest'
      - 'Gateway#listForResourceGroup~headerName'
  - uid: 'Gateway#upgrade'
    id: upgrade
    parent: Gateway
    name: >-
      upgrade(resourceGroupName, gatewayName, options, options.customHeaders,
      callback)
    summary: Upgrade a gateway
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function upgrade(resourceGroupName, gatewayName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.upgrade(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#upgrade~client'
      - 'Gateway#upgrade~callback'
      - 'Gateway#upgrade~options'
  - uid: 'Gateway#beginUpgrade'
    id: beginUpgrade
    parent: Gateway
    name: >-
      beginUpgrade(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    summary: Upgrade a gateway
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginUpgrade(resourceGroupName, gatewayName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.beginUpgrade(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#beginUpgrade~client'
      - 'Gateway#beginUpgrade~callback'
      - 'Gateway#beginUpgrade~options'
      - 'Gateway#beginUpgrade~requestUrl'
      - 'Gateway#beginUpgrade~requestUrl'
      - 'Gateway#beginUpgrade~requestUrl'
      - 'Gateway#beginUpgrade~requestUrl'
      - 'Gateway#beginUpgrade~queryParameters'
      - 'Gateway#beginUpgrade~requestUrl'
      - 'Gateway#beginUpgrade~regex'
      - 'Gateway#beginUpgrade~requestUrl'
      - 'Gateway#beginUpgrade~httpRequest'
      - 'Gateway#beginUpgrade~headerName'
  - uid: 'Gateway#regenerateProfile'
    id: regenerateProfile
    parent: Gateway
    name: >-
      regenerateProfile(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    summary: Regenerate a gateway's profile
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function regenerateProfile(resourceGroupName, gatewayName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.regenerateProfile(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#regenerateProfile~client'
      - 'Gateway#regenerateProfile~callback'
      - 'Gateway#regenerateProfile~options'
  - uid: 'Gateway#beginRegenerateProfile'
    id: beginRegenerateProfile
    parent: Gateway
    name: >-
      beginRegenerateProfile(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    summary: Regenerate a gateway's profile
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginRegenerateProfile(resourceGroupName, gatewayName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.beginRegenerateProfile(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#beginRegenerateProfile~client'
      - 'Gateway#beginRegenerateProfile~callback'
      - 'Gateway#beginRegenerateProfile~options'
      - 'Gateway#beginRegenerateProfile~requestUrl'
      - 'Gateway#beginRegenerateProfile~requestUrl'
      - 'Gateway#beginRegenerateProfile~requestUrl'
      - 'Gateway#beginRegenerateProfile~requestUrl'
      - 'Gateway#beginRegenerateProfile~queryParameters'
      - 'Gateway#beginRegenerateProfile~requestUrl'
      - 'Gateway#beginRegenerateProfile~regex'
      - 'Gateway#beginRegenerateProfile~requestUrl'
      - 'Gateway#beginRegenerateProfile~httpRequest'
      - 'Gateway#beginRegenerateProfile~headerName'
  - uid: 'Gateway#getProfile'
    id: getProfile
    parent: Gateway
    name: >-
      getProfile(resourceGroupName, gatewayName, options, options.customHeaders,
      callback)
    summary: Gets a gateway profile
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayProfile} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getProfile(resourceGroupName, gatewayName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.getProfile(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#getProfile~client'
      - 'Gateway#getProfile~callback'
      - 'Gateway#getProfile~options'
  - uid: 'Gateway#beginGetProfile'
    id: beginGetProfile
    parent: Gateway
    name: >-
      beginGetProfile(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    summary: Gets a gateway profile
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The resource group name uniquely\ridentifies the resource group within the user subscriptionId."
        - id: gatewayName
          type: string
          description: The gateway name (256 characters maximum).
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayProfile} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginGetProfile(resourceGroupName, gatewayName, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.beginGetProfile(resourceGroupName, gatewayName, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#beginGetProfile~client'
      - 'Gateway#beginGetProfile~callback'
      - 'Gateway#beginGetProfile~options'
      - 'Gateway#beginGetProfile~requestUrl'
      - 'Gateway#beginGetProfile~requestUrl'
      - 'Gateway#beginGetProfile~requestUrl'
      - 'Gateway#beginGetProfile~requestUrl'
      - 'Gateway#beginGetProfile~queryParameters'
      - 'Gateway#beginGetProfile~requestUrl'
      - 'Gateway#beginGetProfile~regex'
      - 'Gateway#beginGetProfile~requestUrl'
      - 'Gateway#beginGetProfile~httpRequest'
      - 'Gateway#beginGetProfile~headerName'
  - uid: 'Gateway#listNext'
    id: listNext
    parent: Gateway
    name: 'listNext(nextPageLink, options, options.customHeaders, callback)'
    summary: Returns gateways in a subscription
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResources} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listNext(nextPageLink, options, options.customHeaders,
        callback);
    fullName: 'Gateway.listNext(nextPageLink, options, options.customHeaders, callback)'
    children:
      - 'Gateway#listNext~client'
      - 'Gateway#listNext~callback'
      - 'Gateway#listNext~options'
      - 'Gateway#listNext~requestUrl'
      - 'Gateway#listNext~requestUrl'
      - 'Gateway#listNext~regex'
      - 'Gateway#listNext~requestUrl'
      - 'Gateway#listNext~httpRequest'
      - 'Gateway#listNext~headerName'
  - uid: 'Gateway#listForResourceGroupNext'
    id: listForResourceGroupNext
    parent: Gateway
    name: >-
      listForResourceGroupNext(nextPageLink, options, options.customHeaders,
      callback)
    summary: Returns gateways in a resource group
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GatewayResources} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listForResourceGroupNext(nextPageLink, options,
        options.customHeaders, callback);
    fullName: >-
      Gateway.listForResourceGroupNext(nextPageLink, options,
      options.customHeaders, callback)
    children:
      - 'Gateway#listForResourceGroupNext~client'
      - 'Gateway#listForResourceGroupNext~callback'
      - 'Gateway#listForResourceGroupNext~options'
      - 'Gateway#listForResourceGroupNext~requestUrl'
      - 'Gateway#listForResourceGroupNext~requestUrl'
      - 'Gateway#listForResourceGroupNext~regex'
      - 'Gateway#listForResourceGroupNext~requestUrl'
      - 'Gateway#listForResourceGroupNext~httpRequest'
      - 'Gateway#listForResourceGroupNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false

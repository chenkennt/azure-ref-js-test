items:
  - uid: StorageAccountOperations~StorageAccountOperations
    id: StorageAccountOperations
    parent: StorageAccountOperations
    name: StorageAccountOperations
    type: Class
    syntax:
      content: StorageAccountOperations
    fullName: StorageAccountOperations.StorageAccountOperations
    children:
      - 'StorageAccountOperations~StorageAccountOperations#client'
      - 'StorageAccountOperations~StorageAccountOperations#abortMigration'
      - 'StorageAccountOperations~StorageAccountOperations#beginAbortMigration'
      - 'StorageAccountOperations~StorageAccountOperations#beginCommitMigration'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating'
      - 'StorageAccountOperations~StorageAccountOperations#beginPrepareMigration'
      - 'StorageAccountOperations~StorageAccountOperations#checkNameAvailability'
      - 'StorageAccountOperations~StorageAccountOperations#commitMigration'
      - 'StorageAccountOperations~StorageAccountOperations#create'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod'
      - 'StorageAccountOperations~StorageAccountOperations#get'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys'
      - 'StorageAccountOperations~StorageAccountOperations#list'
      - 'StorageAccountOperations~StorageAccountOperations#prepareMigration'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys'
      - 'StorageAccountOperations~StorageAccountOperations#update'
  - uid: 'StorageAccountOperations~StorageAccountOperations#client'
    id: client
    parent: StorageAccountOperations~StorageAccountOperations
    name: client
    type: Field
    syntax:
      content: client
    fullName: StorageAccountOperations~StorageAccountOperations.client
  - uid: 'StorageAccountOperations~StorageAccountOperations#abortMigration'
    id: abortMigration
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'abortMigration(storageAccountName, callback)'
    summary: "Abort storage account migration api validates and aborts the given storage\raccount for IaaS Classic to ARM migration."
    type: Method
    syntax:
      parameters:
        - id: storageAccountName
          type: string
          description: Name of storage account to be migrated.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function abortMigration(storageAccountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.abortMigration(storageAccountName,
      callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#abortMigration~client2'
  - uid: 'StorageAccountOperations~StorageAccountOperations#beginAbortMigration'
    id: beginAbortMigration
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'beginAbortMigration(storageAccountName, callback)'
    summary: "Abort storage account migration api validates and aborts the given storage\raccount for IaaS Classic to ARM migration."
    type: Method
    syntax:
      parameters:
        - id: storageAccountName
          type: string
          description: Name of storage account to be migrated.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function beginAbortMigration(storageAccountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.beginAbortMigration(storageAccountName,
      callback)
    children:
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~queryParameters
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginAbortMigration~httpRequest
  - uid: 'StorageAccountOperations~StorageAccountOperations#beginCommitMigration'
    id: beginCommitMigration
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'beginCommitMigration(storageAccountName, callback)'
    summary: "Commit storage account migration api validates and commits the given\rstorage account for IaaS Classic to ARM migration."
    type: Method
    syntax:
      parameters:
        - id: storageAccountName
          type: string
          description: Name of storage account to be migrated.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function beginCommitMigration(storageAccountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.beginCommitMigration(storageAccountName,
      callback)
    children:
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~queryParameters
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCommitMigration~httpRequest
  - uid: 'StorageAccountOperations~StorageAccountOperations#beginCreating'
    id: beginCreating
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'beginCreating(parameters, callback)'
    summary: "The Begin Creating Storage Account operation creates a new storage account\rin Azure.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: parameters
          type: StorageAccountCreateParameters
          description: "Parameters supplied to\rthe Begin Creating Storage Account operation."
        - id: parameters.name
          type: string
          description: "A name for the storage account, unique\rwithin Azure. Storage account names must be between 3 and 24 characters\rin length, and must use numbers and lower-case letters only. This name is\rthe DNS prefix name and can be used to access blobs, queues, and tables\rin the storage account. For example:\rhttp://ServiceName.blob.core.windows.net/mycontainer/."
        - id: parameters.description
          type: string
          description: "A description for the storage\raccount. The description may be up to 1024 characters in length."
        - id: parameters.label
          type: string
          description: "A name for the storage account, specified\ras abase64-encoded string. The name may be up to 100 characters in\rlength. The name can be used identify the storage account for your\rtracking purposes."
        - id: parameters.affinityGroup
          type: string
          description: "The name of an existing\raffinity group in the specified subscription. Required if Location is not\rspecified. You can include either a Location or AffinityGroup element in\rthe request body, but not both. To list available affinity groups, use\rthe List Affinity Groups operation."
        - id: parameters.location
          type: string
          description: "The location where the storage\raccount is created. Required if AffinityGroup is not specified. You can\rinclude either a Location or AffinityGroup element in the request body,\rbut not both. To list available locations, use the List Locations\roperation."
        - id: parameters.extendedProperties
          type: object
          description: "Represents the name of an\rextended storage account property. Each extended property must have a\rdefined name and a value. You can have a maximum of 50 extended property\rname/value pairs. The maximum length of the Name element is 64\rcharacters, only alphanumeric characters and underscores are valid in the\rName, and the name must start with a letter. Attempting to use other\rcharacters, starting the Name with a non-letter character, or entering a\rname that is identical to that of another extended property owned by the\rsame storage account will result in a status code 400 (Bad Request)\rerror. Each extended property value has a maximum length of 255\rcharacters."
        - id: parameters.accountType
          type: string
          description: "Specifies whether the account\rsupports locally-redundant storage, geo-redundant storage, zone-redundant\rstorage, or read access geo-redundant storage. Possible values\rare:'Standard_LRS', 'Standard_ZRS', 'Standard_GRS', and 'Standard_RAGRS'."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function beginCreating(parameters, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.beginCreating(parameters,
      callback)
    children:
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~loweredIndex1
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~loweredIndex1
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~nameChar'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~url2'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~url2'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~url2'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~url2'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~url2'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~url2'
      - 'StorageAccountOperations~StorageAccountOperations#beginCreating~url2'
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~httpRequest
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~requestContent
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~requestDoc
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~createStorageServiceInputElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~serviceNameElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~descriptionElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~emptyElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~nilAttribute
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~labelElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~affinityGroupElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~locationElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~extendedPropertiesDictionaryElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~extendedPropertiesKey
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~extendedPropertiesValue
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~extendedPropertiesElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~extendedPropertiesKeyElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~extendedPropertiesValueElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~accountTypeElement
      - >-
        StorageAccountOperations~StorageAccountOperations#beginCreating~requestContent
  - uid: 'StorageAccountOperations~StorageAccountOperations#beginPrepareMigration'
    id: beginPrepareMigration
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'beginPrepareMigration(storageAccountName, callback)'
    summary: "Prepare storage account migration api validates and prepares the given\rstorage account for IaaS Classic to ARM migration."
    type: Method
    syntax:
      parameters:
        - id: storageAccountName
          type: string
          description: Name of storage account to be migrated.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function beginPrepareMigration(storageAccountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.beginPrepareMigration(storageAccountName,
      callback)
    children:
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~queryParameters
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#beginPrepareMigration~httpRequest
  - uid: 'StorageAccountOperations~StorageAccountOperations#checkNameAvailability'
    id: checkNameAvailability
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'checkNameAvailability(accountName, callback)'
    summary: "The Check Name Availability operation checks if a storage account name is\ravailable for use in Azure.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154125.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: accountName
          type: string
          description: "The desired storage account name to check for\ravailability."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function checkNameAvailability(accountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.checkNameAvailability(accountName,
      callback)
    children:
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~baseUrl
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~url2
      - >-
        StorageAccountOperations~StorageAccountOperations#checkNameAvailability~httpRequest
  - uid: 'StorageAccountOperations~StorageAccountOperations#commitMigration'
    id: commitMigration
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'commitMigration(storageAccountName, callback)'
    summary: "Commit storage account migration api validates and commits the given\rstorage account for IaaS Classic to ARM migration."
    type: Method
    syntax:
      parameters:
        - id: storageAccountName
          type: string
          description: Name of storage account to be migrated.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function commitMigration(storageAccountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.commitMigration(storageAccountName,
      callback)
    children:
      - >-
        StorageAccountOperations~StorageAccountOperations#commitMigration~client2
  - uid: 'StorageAccountOperations~StorageAccountOperations#create'
    id: create
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'create(parameters, callback)'
    summary: "The Create Storage Account operation creates a new storage account in\rAzure.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: parameters
          type: StorageAccountCreateParameters
          description: "Parameters supplied to\rthe Create Storage Account operation."
        - id: parameters.name
          type: string
          description: "A name for the storage account, unique\rwithin Azure. Storage account names must be between 3 and 24 characters\rin length, and must use numbers and lower-case letters only. This name is\rthe DNS prefix name and can be used to access blobs, queues, and tables\rin the storage account. For example:\rhttp://ServiceName.blob.core.windows.net/mycontainer/."
        - id: parameters.description
          type: string
          description: "A description for the storage\raccount. The description may be up to 1024 characters in length."
        - id: parameters.label
          type: string
          description: "A name for the storage account, specified\ras abase64-encoded string. The name may be up to 100 characters in\rlength. The name can be used identify the storage account for your\rtracking purposes."
        - id: parameters.affinityGroup
          type: string
          description: "The name of an existing\raffinity group in the specified subscription. Required if Location is not\rspecified. You can include either a Location or AffinityGroup element in\rthe request body, but not both. To list available affinity groups, use\rthe List Affinity Groups operation."
        - id: parameters.location
          type: string
          description: "The location where the storage\raccount is created. Required if AffinityGroup is not specified. You can\rinclude either a Location or AffinityGroup element in the request body,\rbut not both. To list available locations, use the List Locations\roperation."
        - id: parameters.extendedProperties
          type: object
          description: "Represents the name of an\rextended storage account property. Each extended property must have a\rdefined name and a value. You can have a maximum of 50 extended property\rname/value pairs. The maximum length of the Name element is 64\rcharacters, only alphanumeric characters and underscores are valid in the\rName, and the name must start with a letter. Attempting to use other\rcharacters, starting the Name with a non-letter character, or entering a\rname that is identical to that of another extended property owned by the\rsame storage account will result in a status code 400 (Bad Request)\rerror. Each extended property value has a maximum length of 255\rcharacters."
        - id: parameters.accountType
          type: string
          description: "Specifies whether the account\rsupports locally-redundant storage, geo-redundant storage, zone-redundant\rstorage, or read access geo-redundant storage. Possible values\rare:'Standard_LRS', 'Standard_ZRS', 'Standard_GRS', and 'Standard_RAGRS'."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function create(parameters, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.create(parameters,
      callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#create~client2'
  - uid: 'StorageAccountOperations~StorageAccountOperations#deleteMethod'
    id: deleteMethod
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'deleteMethod(accountName, callback)'
    summary: "The Delete Storage Account operation deletes the specified storage account\rfrom Azure.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/hh264517.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: accountName
          type: string
          description: The name of the storage account to be deleted.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function deleteMethod(accountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.deleteMethod(accountName,
      callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - 'StorageAccountOperations~StorageAccountOperations#deleteMethod~url2'
      - >-
        StorageAccountOperations~StorageAccountOperations#deleteMethod~httpRequest
  - uid: 'StorageAccountOperations~StorageAccountOperations#get'
    id: get
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'get(accountName, callback)'
    summary: "The Get Storage Account Properties operation returns system properties for\rthe specified storage account.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460802.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: accountName
          type: string
          description: "Name of the storage account to get properties\rfor."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function get(accountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.get(accountName,
      callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#get~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~url2'
      - 'StorageAccountOperations~StorageAccountOperations#get~httpRequest'
  - uid: 'StorageAccountOperations~StorageAccountOperations#getKeys'
    id: getKeys
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'getKeys(accountName, callback)'
    summary: "The Get Storage Keys operation returns the primary and secondary access\rkeys for the specified storage account.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460785.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: accountName
          type: string
          description: The name of the desired storage account.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function getKeys(accountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.getKeys(accountName,
      callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#getKeys~httpRequest'
  - uid: 'StorageAccountOperations~StorageAccountOperations#list'
    id: list
    parent: StorageAccountOperations~StorageAccountOperations
    name: list(callback)
    summary: "The List Storage Accounts operation lists the storage accounts available\runder the current subscription.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460787.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: function list(callback);
    fullName: StorageAccountOperations~StorageAccountOperations.list(callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#list~url2'
      - 'StorageAccountOperations~StorageAccountOperations#list~url2'
      - 'StorageAccountOperations~StorageAccountOperations#list~url2'
      - 'StorageAccountOperations~StorageAccountOperations#list~url2'
      - 'StorageAccountOperations~StorageAccountOperations#list~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#list~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#list~url2'
      - 'StorageAccountOperations~StorageAccountOperations#list~url2'
      - 'StorageAccountOperations~StorageAccountOperations#list~url2'
      - 'StorageAccountOperations~StorageAccountOperations#list~httpRequest'
  - uid: 'StorageAccountOperations~StorageAccountOperations#prepareMigration'
    id: prepareMigration
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'prepareMigration(storageAccountName, callback)'
    summary: "Prepare storage account migration api validates and prepares the given\rstorage account for IaaS Classic to ARM migration."
    type: Method
    syntax:
      parameters:
        - id: storageAccountName
          type: string
          description: Name of storage account to be migrated.
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function prepareMigration(storageAccountName, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.prepareMigration(storageAccountName,
      callback)
    children:
      - >-
        StorageAccountOperations~StorageAccountOperations#prepareMigration~client2
  - uid: 'StorageAccountOperations~StorageAccountOperations#regenerateKeys'
    id: regenerateKeys
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'regenerateKeys(parameters, callback)'
    summary: "The Regenerate Keys operation regenerates the primary or secondary access\rkey for the specified storage account.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460795.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: parameters
          type: StorageAccountRegenerateKeysParameters
          description: "Parameters\rsupplied to the Regenerate Keys operation."
        - id: parameters.name
          type: string
          description: The name of the desired storage account.
        - id: parameters.keyType
          type: StorageKeyType
          description: "Specifies which key to\rregenerate."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function regenerateKeys(parameters, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.regenerateKeys(parameters,
      callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - >-
        StorageAccountOperations~StorageAccountOperations#regenerateKeys~queryParameters
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - 'StorageAccountOperations~StorageAccountOperations#regenerateKeys~url2'
      - >-
        StorageAccountOperations~StorageAccountOperations#regenerateKeys~httpRequest
      - >-
        StorageAccountOperations~StorageAccountOperations#regenerateKeys~requestContent
      - >-
        StorageAccountOperations~StorageAccountOperations#regenerateKeys~requestDoc
      - >-
        StorageAccountOperations~StorageAccountOperations#regenerateKeys~regenerateKeysElement
      - >-
        StorageAccountOperations~StorageAccountOperations#regenerateKeys~keyTypeElement
      - >-
        StorageAccountOperations~StorageAccountOperations#regenerateKeys~requestContent
  - uid: 'StorageAccountOperations~StorageAccountOperations#update'
    id: update
    parent: StorageAccountOperations~StorageAccountOperations
    name: 'update(accountName, parameters, callback)'
    summary: "The Update Storage Account operation updates the label and the\rdescription, and enables or disables the geo-replication status for a\rstorage account in Azure.  (see\rhttp://msdn.microsoft.com/en-us/library/windowsazure/hh264516.aspx for\rmore information)"
    type: Method
    syntax:
      parameters:
        - id: accountName
          type: string
          description: Name of the storage account to update.
        - id: parameters
          type: StorageAccountUpdateParameters
          description: "Parameters supplied to\rthe Update Storage Account operation."
        - id: parameters.description
          type: string
        - id: parameters.label
          type: string
          description: "A name for the storage account,\rbase64-encoded. The name may be up to 100 characters in length. The name\rcan be used identify the storage account for your tracking purposes."
        - id: parameters.extendedProperties
          type: object
          description: "Represents the name of an\rextended storage account property. Each extended property must have a\rdefined name and a value. You can have a maximum of 50 extended property\rname/value pairs. The maximum length of the Name element is 64\rcharacters, only alphanumeric characters and underscores are valid in the\rName, and the name must start with a letter. Attempting to use other\rcharacters, starting the Name with a non-letter character, or entering a\rname that is identical to that of another extended property owned by the\rsame storage account will result in a status code 400 (Bad Request)\rerror. Each extended property value has a maximum length of 255\rcharacters. You can delete an extended property by setting the value to\rNULL."
        - id: parameters.accountType
          type: string
          description: "Specifies whether the account\rsupports locally-redundant storage, geo-redundant storage, zone-redundant\rstorage, or read access geo-redundant storage. Possible values\rare:'Standard_LRS', 'Standard_ZRS', 'Standard_GRS', and 'Standard_RAGRS'."
        - id: callback
          type: function
      return:
        type: Stream
        description: The response stream.
      content: 'function update(accountName, parameters, callback);'
    fullName: >-
      StorageAccountOperations~StorageAccountOperations.update(accountName,
      parameters, callback)
    children:
      - 'StorageAccountOperations~StorageAccountOperations#update~loweredIndex1'
      - 'StorageAccountOperations~StorageAccountOperations#update~loweredIndex1'
      - 'StorageAccountOperations~StorageAccountOperations#update~accountNameChar'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#update~baseUrl'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~url2'
      - 'StorageAccountOperations~StorageAccountOperations#update~httpRequest'
      - 'StorageAccountOperations~StorageAccountOperations#update~requestContent'
      - 'StorageAccountOperations~StorageAccountOperations#update~requestDoc'
      - >-
        StorageAccountOperations~StorageAccountOperations#update~updateStorageServiceInputElement
      - >-
        StorageAccountOperations~StorageAccountOperations#update~descriptionElement
      - 'StorageAccountOperations~StorageAccountOperations#update~emptyElement'
      - 'StorageAccountOperations~StorageAccountOperations#update~nilAttribute'
      - 'StorageAccountOperations~StorageAccountOperations#update~labelElement'
      - >-
        StorageAccountOperations~StorageAccountOperations#update~extendedPropertiesDictionaryElement
      - >-
        StorageAccountOperations~StorageAccountOperations#update~extendedPropertiesKey
      - >-
        StorageAccountOperations~StorageAccountOperations#update~extendedPropertiesValue
      - >-
        StorageAccountOperations~StorageAccountOperations#update~extendedPropertiesElement
      - >-
        StorageAccountOperations~StorageAccountOperations#update~extendedPropertiesKeyElement
      - >-
        StorageAccountOperations~StorageAccountOperations#update~extendedPropertiesValueElement
      - >-
        StorageAccountOperations~StorageAccountOperations#update~accountTypeElement
      - 'StorageAccountOperations~StorageAccountOperations#update~requestContent'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: Stream
    name: Stream
    fullName: Stream
    isExternal: true
  - uid: StorageAccountCreateParameters
    name: StorageAccountCreateParameters
    fullName: StorageAccountCreateParameters
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: StorageAccountRegenerateKeysParameters
    name: StorageAccountRegenerateKeysParameters
    fullName: StorageAccountRegenerateKeysParameters
    isExternal: true
  - uid: StorageKeyType
    name: StorageKeyType
    fullName: StorageKeyType
    isExternal: true
  - uid: StorageAccountUpdateParameters
    name: StorageAccountUpdateParameters
    fullName: StorageAccountUpdateParameters
    isExternal: false

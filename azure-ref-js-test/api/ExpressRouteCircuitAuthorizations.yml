items:
  - uid: ExpressRouteCircuitAuthorizations
    id: ExpressRouteCircuitAuthorizations
    name: ExpressRouteCircuitAuthorizations
    type: Class
    syntax:
      content: ExpressRouteCircuitAuthorizations
    fullName: ExpressRouteCircuitAuthorizations
    children:
      - 'ExpressRouteCircuitAuthorizations#client'
      - 'ExpressRouteCircuitAuthorizations#deleteMethod'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod'
      - 'ExpressRouteCircuitAuthorizations#get'
      - 'ExpressRouteCircuitAuthorizations#createOrUpdate'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate'
      - 'ExpressRouteCircuitAuthorizations#list'
      - 'ExpressRouteCircuitAuthorizations#listNext'
  - uid: 'ExpressRouteCircuitAuthorizations#client'
    id: client
    parent: ExpressRouteCircuitAuthorizations
    name: client
    type: Field
    syntax:
      content: client
    fullName: ExpressRouteCircuitAuthorizations.client
  - uid: 'ExpressRouteCircuitAuthorizations#deleteMethod'
    id: deleteMethod
    parent: ExpressRouteCircuitAuthorizations
    name: >-
      deleteMethod(resourceGroupName, circuitName, authorizationName, options,
      callback)
    summary: "The delete authorization operation deletes the specified authorization from\rthe specified ExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: authorizationName
          type: string
          description: The name of the authorization.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(resourceGroupName, circuitName, authorizationName,
        options, callback);
    fullName: >-
      ExpressRouteCircuitAuthorizations.deleteMethod(resourceGroupName,
      circuitName, authorizationName, options, callback)
    children:
      - 'ExpressRouteCircuitAuthorizations#deleteMethod~client'
      - 'ExpressRouteCircuitAuthorizations#deleteMethod~callback'
      - 'ExpressRouteCircuitAuthorizations#deleteMethod~options'
  - uid: 'ExpressRouteCircuitAuthorizations#beginDeleteMethod'
    id: beginDeleteMethod
    parent: ExpressRouteCircuitAuthorizations
    name: >-
      beginDeleteMethod(resourceGroupName, circuitName, authorizationName,
      options, callback)
    summary: "The delete authorization operation deletes the specified authorization from\rthe specified ExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: authorizationName
          type: string
          description: The name of the authorization.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginDeleteMethod(resourceGroupName, circuitName,
        authorizationName, options, callback);
    fullName: >-
      ExpressRouteCircuitAuthorizations.beginDeleteMethod(resourceGroupName,
      circuitName, authorizationName, options, callback)
    children:
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~client'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~callback'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~options'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~queryParameters'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~regex'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~httpRequest'
      - 'ExpressRouteCircuitAuthorizations#beginDeleteMethod~headerName'
  - uid: 'ExpressRouteCircuitAuthorizations#get'
    id: get
    parent: ExpressRouteCircuitAuthorizations
    name: 'get(resourceGroupName, circuitName, authorizationName, options, callback)'
    summary: "The GET authorization operation retrieves the specified authorization from\rthe specified ExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: authorizationName
          type: string
          description: The name of the authorization.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitAuthorization} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function get(resourceGroupName, circuitName, authorizationName, options,
        callback);
    fullName: >-
      ExpressRouteCircuitAuthorizations.get(resourceGroupName, circuitName,
      authorizationName, options, callback)
    children:
      - 'ExpressRouteCircuitAuthorizations#get~client'
      - 'ExpressRouteCircuitAuthorizations#get~callback'
      - 'ExpressRouteCircuitAuthorizations#get~options'
      - 'ExpressRouteCircuitAuthorizations#get~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#get~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#get~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#get~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#get~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#get~queryParameters'
      - 'ExpressRouteCircuitAuthorizations#get~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#get~regex'
      - 'ExpressRouteCircuitAuthorizations#get~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#get~httpRequest'
      - 'ExpressRouteCircuitAuthorizations#get~headerName'
  - uid: 'ExpressRouteCircuitAuthorizations#createOrUpdate'
    id: createOrUpdate
    parent: ExpressRouteCircuitAuthorizations
    name: >-
      createOrUpdate(resourceGroupName, circuitName, authorizationName,
      authorizationParameters, options, callback)
    summary: "The Put Authorization operation creates/updates an authorization in\rthespecified ExpressRouteCircuits"
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: authorizationName
          type: string
          description: The name of the authorization.
        - id: authorizationParameters
          type: object
          description: "Parameters supplied to the\rcreate/update ExpressRouteCircuitAuthorization operation"
        - id: authorizationParameters.authorizationKey
          type: string
          description: "Gets or sets the\rauthorization key"
        - id: authorizationParameters.authorizationUseStatus
          type: string
          description: "Gets or\rsets AuthorizationUseStatus. Possible values include: 'Available', 'InUse'"
        - id: authorizationParameters.provisioningState
          type: string
          description: "Gets or sets\rProvisioning state of the PublicIP resource Updating/Deleting/Failed"
        - id: authorizationParameters.name
          type: string
          description: "Gets name of the resource\rthat is unique within a resource group. This name can be used to access\rthe resource"
        - id: authorizationParameters.etag
          type: string
          description: "A unique read-only string\rthat changes whenever the resource is updated"
        - id: authorizationParameters.id
          type: string
          description: Resource Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitAuthorization} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdate(resourceGroupName, circuitName,
        authorizationName, authorizationParameters, options, callback);
    fullName: >-
      ExpressRouteCircuitAuthorizations.createOrUpdate(resourceGroupName,
      circuitName, authorizationName, authorizationParameters, options,
      callback)
    children:
      - 'ExpressRouteCircuitAuthorizations#createOrUpdate~client'
      - 'ExpressRouteCircuitAuthorizations#createOrUpdate~callback'
      - 'ExpressRouteCircuitAuthorizations#createOrUpdate~options'
  - uid: 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate'
    id: beginCreateOrUpdate
    parent: ExpressRouteCircuitAuthorizations
    name: >-
      beginCreateOrUpdate(resourceGroupName, circuitName, authorizationName,
      authorizationParameters, options, callback)
    summary: "The Put Authorization operation creates/updates an authorization in\rthespecified ExpressRouteCircuits"
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: authorizationName
          type: string
          description: The name of the authorization.
        - id: authorizationParameters
          type: object
          description: "Parameters supplied to the\rcreate/update ExpressRouteCircuitAuthorization operation"
        - id: authorizationParameters.authorizationKey
          type: string
          description: "Gets or sets the\rauthorization key"
        - id: authorizationParameters.authorizationUseStatus
          type: string
          description: "Gets or\rsets AuthorizationUseStatus. Possible values include: 'Available', 'InUse'"
        - id: authorizationParameters.provisioningState
          type: string
          description: "Gets or sets\rProvisioning state of the PublicIP resource Updating/Deleting/Failed"
        - id: authorizationParameters.name
          type: string
          description: "Gets name of the resource\rthat is unique within a resource group. This name can be used to access\rthe resource"
        - id: authorizationParameters.etag
          type: string
          description: "A unique read-only string\rthat changes whenever the resource is updated"
        - id: authorizationParameters.id
          type: string
          description: Resource Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitAuthorization} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdate(resourceGroupName, circuitName,
        authorizationName, authorizationParameters, options, callback);
    fullName: >-
      ExpressRouteCircuitAuthorizations.beginCreateOrUpdate(resourceGroupName,
      circuitName, authorizationName, authorizationParameters, options,
      callback)
    children:
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~client'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~callback'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~options'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~queryParameters'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~regex'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~httpRequest'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~headerName'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestContent'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestModel'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestModelMapper'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestModel'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~requestContent'
      - 'ExpressRouteCircuitAuthorizations#beginCreateOrUpdate~serializationError'
  - uid: 'ExpressRouteCircuitAuthorizations#list'
    id: list
    parent: ExpressRouteCircuitAuthorizations
    name: 'list(resourceGroupName, circuitName, options, callback)'
    summary: "The List authorization operation retrieves all the authorizations in an\rExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the curcuit.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link AuthorizationListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(resourceGroupName, circuitName, options, callback);'
    fullName: >-
      ExpressRouteCircuitAuthorizations.list(resourceGroupName, circuitName,
      options, callback)
    children:
      - 'ExpressRouteCircuitAuthorizations#list~client'
      - 'ExpressRouteCircuitAuthorizations#list~callback'
      - 'ExpressRouteCircuitAuthorizations#list~options'
      - 'ExpressRouteCircuitAuthorizations#list~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#list~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#list~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#list~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#list~queryParameters'
      - 'ExpressRouteCircuitAuthorizations#list~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#list~regex'
      - 'ExpressRouteCircuitAuthorizations#list~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#list~httpRequest'
      - 'ExpressRouteCircuitAuthorizations#list~headerName'
  - uid: 'ExpressRouteCircuitAuthorizations#listNext'
    id: listNext
    parent: ExpressRouteCircuitAuthorizations
    name: 'listNext(nextPageLink, options, callback)'
    summary: "The List authorization operation retrieves all the authorizations in an\rExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link AuthorizationListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listNext(nextPageLink, options, callback);'
    fullName: >-
      ExpressRouteCircuitAuthorizations.listNext(nextPageLink, options,
      callback)
    children:
      - 'ExpressRouteCircuitAuthorizations#listNext~client'
      - 'ExpressRouteCircuitAuthorizations#listNext~callback'
      - 'ExpressRouteCircuitAuthorizations#listNext~options'
      - 'ExpressRouteCircuitAuthorizations#listNext~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#listNext~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#listNext~regex'
      - 'ExpressRouteCircuitAuthorizations#listNext~requestUrl'
      - 'ExpressRouteCircuitAuthorizations#listNext~httpRequest'
      - 'ExpressRouteCircuitAuthorizations#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false

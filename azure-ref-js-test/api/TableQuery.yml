items:
  - uid: TableQuery
    id: TableQuery
    name: TableQuery
    summary: Creates a new TableQuery object.
    type: Class
    syntax:
      content: TableQuery
    fullName: TableQuery
    children:
      - 'TableQuery#_fields'
      - 'TableQuery#_from'
      - 'TableQuery#_where'
      - 'TableQuery#_top'
      - 'TableQuery#_partitionKey'
      - 'TableQuery#_nextPartitionKey'
      - 'TableQuery#_rowKey'
      - 'TableQuery#_nextRowKey'
      - TableQuery.select
      - 'TableQuery#from'
      - 'TableQuery#_from'
      - 'TableQuery#whereKeys'
      - 'TableQuery#_partitionKey'
      - 'TableQuery#_rowKey'
      - 'TableQuery#whereNextKeys'
      - 'TableQuery#_nextPartitionKey'
      - 'TableQuery#_nextRowKey'
      - 'TableQuery#where'
      - 'TableQuery#and'
      - 'TableQuery#or'
      - 'TableQuery#top'
      - 'TableQuery#_top'
      - 'TableQuery#toQueryObject'
      - 'TableQuery#_fields[undefined]'
      - 'TableQuery#toPath'
      - 'TableQuery#_replaceOperators'
  - uid: 'TableQuery#_fields'
    id: _fields
    parent: TableQuery
    name: _fields
    type: Field
    syntax:
      content: _fields
    fullName: TableQuery._fields
  - uid: 'TableQuery#_from'
    id: _from
    parent: TableQuery
    name: _from
    type: Field
    syntax:
      content: _from
    fullName: TableQuery._from
  - uid: 'TableQuery#_where'
    id: _where
    parent: TableQuery
    name: _where
    type: Field
    syntax:
      content: _where
    fullName: TableQuery._where
  - uid: 'TableQuery#_top'
    id: _top
    parent: TableQuery
    name: _top
    type: Field
    syntax:
      content: _top
    fullName: TableQuery._top
  - uid: 'TableQuery#_partitionKey'
    id: _partitionKey
    parent: TableQuery
    name: _partitionKey
    type: Field
    syntax:
      content: _partitionKey
    fullName: TableQuery._partitionKey
  - uid: 'TableQuery#_nextPartitionKey'
    id: _nextPartitionKey
    parent: TableQuery
    name: _nextPartitionKey
    type: Field
    syntax:
      content: _nextPartitionKey
    fullName: TableQuery._nextPartitionKey
  - uid: 'TableQuery#_rowKey'
    id: _rowKey
    parent: TableQuery
    name: _rowKey
    type: Field
    syntax:
      content: _rowKey
    fullName: TableQuery._rowKey
  - uid: 'TableQuery#_nextRowKey'
    id: _nextRowKey
    parent: TableQuery
    name: _nextRowKey
    type: Field
    syntax:
      content: _nextRowKey
    fullName: TableQuery._nextRowKey
  - uid: TableQuery.select
    id: select
    parent: TableQuery
    name: select(fields)
    summary: Constructs a TableQuery specifying the select clause.
    type: Method
    syntax:
      parameters:
        - id: fields
          type: array
          description: The fields to be selected.
      return:
        type: TableQuery
        description: A table query object with the select clause.
      content: function select(fields);
    fullName: TableQuery.select(fields)
    children:
      - TableQuery.select~tableQuery
  - uid: 'TableQuery#from'
    id: from
    parent: TableQuery
    name: from(name)
    summary: Specifies the from clause.
    type: Method
    syntax:
      parameters:
        - id: name
          type: string
          description: The table from where to select the entitites from.
      return:
        type: TableQuery
        description: A table query object with the from clause.
      content: function from(name);
    fullName: TableQuery.from(name)
  - uid: 'TableQuery#_from'
    id: _from
    parent: TableQuery
    name: _from
    type: Field
    syntax:
      content: _from
    fullName: TableQuery._from
  - uid: 'TableQuery#whereKeys'
    id: whereKeys
    parent: TableQuery
    name: 'whereKeys(partitionKey, rowKey)'
    summary: Specifies the partition and row keys.
    type: Method
    syntax:
      parameters:
        - id: partitionKey
          type: string
          description: The partition key for the entities to query.
        - id: rowKey
          type: string
          description: The row key for the entities to query.
      return:
        type: TableQuery
        description: A table query object with the where clause.
      content: 'function whereKeys(partitionKey, rowKey);'
    fullName: 'TableQuery.whereKeys(partitionKey, rowKey)'
  - uid: 'TableQuery#_partitionKey'
    id: _partitionKey
    parent: TableQuery
    name: _partitionKey
    type: Field
    syntax:
      content: _partitionKey
    fullName: TableQuery._partitionKey
  - uid: 'TableQuery#_rowKey'
    id: _rowKey
    parent: TableQuery
    name: _rowKey
    type: Field
    syntax:
      content: _rowKey
    fullName: TableQuery._rowKey
  - uid: 'TableQuery#whereNextKeys'
    id: whereNextKeys
    parent: TableQuery
    name: 'whereNextKeys(nextPartitionKey, nextRowKey)'
    summary: Specifies the next keys.
    type: Method
    syntax:
      parameters:
        - id: nextPartitionKey
          type: string
          description: The next partition key for the entities to start querying from.
        - id: nextRowKey
          type: string
          description: The next row key for the entities to start querying from.
      return:
        type: TableQuery
        description: A table query object with the where clause.
      content: 'function whereNextKeys(nextPartitionKey, nextRowKey);'
    fullName: 'TableQuery.whereNextKeys(nextPartitionKey, nextRowKey)'
  - uid: 'TableQuery#_nextPartitionKey'
    id: _nextPartitionKey
    parent: TableQuery
    name: _nextPartitionKey
    type: Field
    syntax:
      content: _nextPartitionKey
    fullName: TableQuery._nextPartitionKey
  - uid: 'TableQuery#_nextRowKey'
    id: _nextRowKey
    parent: TableQuery
    name: _nextRowKey
    type: Field
    syntax:
      content: _nextRowKey
    fullName: TableQuery._nextRowKey
  - uid: 'TableQuery#where'
    id: where
    parent: TableQuery
    name: 'where(condition, value)'
    summary: Specifies the where clause.
    type: Method
    syntax:
      parameters:
        - id: condition
          type: string
          description: The condition string.
        - id: value
          type: string
          description: Value(s) to insert in question mark (?) parameters.
      return:
        type: TableQuery
        description: A table query object with the where clause.
      content: 'function where(condition, value);'
    fullName: 'TableQuery.where(condition, value)'
    children:
      - 'TableQuery#where~condition'
      - 'TableQuery#where~quotedArguments'
      - 'TableQuery#where~i'
      - 'TableQuery#where~condition'
  - uid: 'TableQuery#and'
    id: and
    parent: TableQuery
    name: 'and(condition, arguments)'
    summary: Specifies an AND where condition.
    type: Method
    syntax:
      parameters:
        - id: condition
          type: string
          description: The condition string.
        - id: arguments
          type: array
          description: >-
            Any number of arguments to be replaced in the condition by the
            question mark (?).
      return:
        type: TableQuery
        description: A table query object with the and clause.
      content: 'function and(condition, arguments);'
    fullName: 'TableQuery.and(condition, arguments)'
    children:
      - 'TableQuery#and~condition'
      - 'TableQuery#and~quotedArguments'
      - 'TableQuery#and~i'
      - 'TableQuery#and~condition'
  - uid: 'TableQuery#or'
    id: or
    parent: TableQuery
    name: 'or(condition, arguments)'
    summary: Specifies an OR where condition.
    type: Method
    syntax:
      parameters:
        - id: condition
          type: string
          description: The condition.
        - id: arguments
          type: array
          description: >-
            Any number of arguments to be replaced in the condition by the
            question mark (?).
      return:
        type: TableQuery
        description: A table query object with the or clause.
      content: 'function or(condition, arguments);'
    fullName: 'TableQuery.or(condition, arguments)'
    children:
      - 'TableQuery#or~condition'
      - 'TableQuery#or~quotedArguments'
      - 'TableQuery#or~i'
      - 'TableQuery#or~condition'
      - 'TableQuery#or~binaryOperation'
  - uid: 'TableQuery#top'
    id: top
    parent: TableQuery
    name: top(top)
    summary: Specifies the top clause.
    type: Method
    syntax:
      parameters:
        - id: top
          type: int
          description: The number of items to fetch.
      return:
        type: TableQuery
        description: A table query object with the top clause.
      content: function top(top);
    fullName: TableQuery.top(top)
  - uid: 'TableQuery#_top'
    id: _top
    parent: TableQuery
    name: _top
    type: Field
    syntax:
      content: _top
    fullName: TableQuery._top
  - uid: 'TableQuery#toQueryObject'
    id: toQueryObject
    parent: TableQuery
    name: toQueryObject()
    summary: Returns the query string object for the query.
    type: Method
    syntax:
      return:
        type: object
        description: JSON object representing the query string arguments for the query.
      content: function toQueryObject();
    fullName: TableQuery.toQueryObject()
    children:
      - 'TableQuery#toQueryObject~query'
      - 'TableQuery#toQueryObject~field'
      - 'TableQuery#toQueryObject~filter'
      - 'TableQuery#toQueryObject~filter'
      - 'TableQuery#toQueryObject~filter'
  - uid: 'TableQuery#_fields[undefined]'
    id: '_fields[undefined]'
    parent: TableQuery
    name: '_fields[undefined]'
    type: Field
    syntax:
      content: '_fields[undefined]'
    fullName: 'TableQuery._fields[undefined]'
  - uid: 'TableQuery#toPath'
    id: toPath
    parent: TableQuery
    name: toPath()
    summary: Returns the URL path.
    type: Method
    syntax:
      return:
        type: string
        description: The path string.
      content: function toPath();
    fullName: TableQuery.toPath()
    children:
      - 'TableQuery#toPath~path'
      - 'TableQuery#toPath~path'
      - 'TableQuery#toPath~path'
  - uid: 'TableQuery#_replaceOperators'
    id: _replaceOperators
    parent: TableQuery
    name: _replaceOperators(whereClause)
    summary: Replace operators.
    type: Method
    syntax:
      parameters:
        - id: whereClause
          type: string
          description: The text where to replace the operators.
      return:
        type: string
        description: The string with the replaced operators.
      content: function _replaceOperators(whereClause);
    fullName: TableQuery._replaceOperators(whereClause)
    children:
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
      - 'TableQuery#_replaceOperators~whereClause'
references:
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: TableQuery
    name: TableQuery
    fullName: TableQuery
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: int
    name: int
    fullName: int
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: false

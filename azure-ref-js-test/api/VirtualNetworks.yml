items:
  - uid: VirtualNetworks
    id: VirtualNetworks
    name: VirtualNetworks
    type: Class
    syntax:
      content: VirtualNetworks
    fullName: VirtualNetworks
    children:
      - 'VirtualNetworks#client'
      - 'VirtualNetworks#deleteMethod'
      - 'VirtualNetworks#beginDeleteMethod'
      - 'VirtualNetworks#get'
      - 'VirtualNetworks#createOrUpdate'
      - 'VirtualNetworks#beginCreateOrUpdate'
      - 'VirtualNetworks#listAll'
      - 'VirtualNetworks#list'
      - 'VirtualNetworks#listAllNext'
      - 'VirtualNetworks#listNext'
  - uid: 'VirtualNetworks#client'
    id: client
    parent: VirtualNetworks
    name: client
    type: Field
    syntax:
      content: client
    fullName: VirtualNetworks.client
  - uid: 'VirtualNetworks#deleteMethod'
    id: deleteMethod
    parent: VirtualNetworks
    name: >-
      deleteMethod(resourceGroupName, virtualNetworkName, options,
      options.customHeaders, callback)
    summary: The Delete VirtualNetwork operation deletes the specifed virtual network
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(resourceGroupName, virtualNetworkName, options,
        options.customHeaders, callback);
    fullName: >-
      VirtualNetworks.deleteMethod(resourceGroupName, virtualNetworkName,
      options, options.customHeaders, callback)
    children:
      - 'VirtualNetworks#deleteMethod~client'
      - 'VirtualNetworks#deleteMethod~callback'
      - 'VirtualNetworks#deleteMethod~options'
  - uid: 'VirtualNetworks#beginDeleteMethod'
    id: beginDeleteMethod
    parent: VirtualNetworks
    name: >-
      beginDeleteMethod(resourceGroupName, virtualNetworkName, options,
      options.customHeaders, callback)
    summary: The Delete VirtualNetwork operation deletes the specifed virtual network
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginDeleteMethod(resourceGroupName, virtualNetworkName,
        options, options.customHeaders, callback);
    fullName: >-
      VirtualNetworks.beginDeleteMethod(resourceGroupName, virtualNetworkName,
      options, options.customHeaders, callback)
    children:
      - 'VirtualNetworks#beginDeleteMethod~client'
      - 'VirtualNetworks#beginDeleteMethod~callback'
      - 'VirtualNetworks#beginDeleteMethod~options'
      - 'VirtualNetworks#beginDeleteMethod~requestUrl'
      - 'VirtualNetworks#beginDeleteMethod~requestUrl'
      - 'VirtualNetworks#beginDeleteMethod~requestUrl'
      - 'VirtualNetworks#beginDeleteMethod~requestUrl'
      - 'VirtualNetworks#beginDeleteMethod~queryParameters'
      - 'VirtualNetworks#beginDeleteMethod~requestUrl'
      - 'VirtualNetworks#beginDeleteMethod~regex'
      - 'VirtualNetworks#beginDeleteMethod~requestUrl'
      - 'VirtualNetworks#beginDeleteMethod~httpRequest'
      - 'VirtualNetworks#beginDeleteMethod~headerName'
  - uid: 'VirtualNetworks#get'
    id: get
    parent: VirtualNetworks
    name: >-
      get(resourceGroupName, virtualNetworkName, options, options.expand,
      options.customHeaders, callback)
    summary: "The Get VirtualNetwork operation retrieves information about the specified\rvirtual network."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.expand
          type: string
          description: expand references resources.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VirtualNetwork} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function get(resourceGroupName, virtualNetworkName, options,
        options.expand, options.customHeaders, callback);
    fullName: >-
      VirtualNetworks.get(resourceGroupName, virtualNetworkName, options,
      options.expand, options.customHeaders, callback)
    children:
      - 'VirtualNetworks#get~client'
      - 'VirtualNetworks#get~callback'
      - 'VirtualNetworks#get~options'
      - 'VirtualNetworks#get~expand'
      - 'VirtualNetworks#get~requestUrl'
      - 'VirtualNetworks#get~requestUrl'
      - 'VirtualNetworks#get~requestUrl'
      - 'VirtualNetworks#get~requestUrl'
      - 'VirtualNetworks#get~queryParameters'
      - 'VirtualNetworks#get~requestUrl'
      - 'VirtualNetworks#get~regex'
      - 'VirtualNetworks#get~requestUrl'
      - 'VirtualNetworks#get~httpRequest'
      - 'VirtualNetworks#get~headerName'
  - uid: 'VirtualNetworks#createOrUpdate'
    id: createOrUpdate
    parent: VirtualNetworks
    name: >-
      createOrUpdate(resourceGroupName, virtualNetworkName, parameters,
      parameters.addressSpace, parameters.addressSpace.addressPrefixes,
      parameters.dhcpOptions, parameters.dhcpOptions.dnsServers,
      parameters.subnets, parameters.resourceGuid, parameters.provisioningState,
      parameters.etag, parameters.id, parameters.location, parameters.tags,
      options, options.customHeaders, callback)
    summary: "The Put VirtualNetwork operation creates/updates a virtual network in the\rspecified resource group."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: parameters
          type: object
          description: "Parameters supplied to the create/update Virtual\rNetwork operation"
        - id: parameters.addressSpace
          type: object
          description: "Gets or sets AddressSpace that\rcontains an array of IP address ranges that can be used by subnets"
        - id: parameters.addressSpace.addressPrefixes
          type: array
          description: "Gets or sets List\rof address blocks reserved for this virtual network in CIDR notation"
        - id: parameters.dhcpOptions
          type: object
          description: "Gets or sets DHCPOptions that\rcontains an array of DNS servers available to VMs deployed in the virtual\rnetwork"
        - id: parameters.dhcpOptions.dnsServers
          type: array
          description: "Gets or sets list of DNS\rservers IP addresses"
        - id: parameters.subnets
          type: array
          description: "Gets or sets List of subnets in a\rVirtualNetwork"
        - id: parameters.resourceGuid
          type: string
          description: "Gets or sets resource guid\rproperty of the VirtualNetwork resource"
        - id: parameters.provisioningState
          type: string
          description: "Gets or sets Provisioning\rstate of the PublicIP resource Updating/Deleting/Failed"
        - id: parameters.etag
          type: string
          description: "Gets a unique read-only string that\rchanges whenever the resource is updated"
        - id: parameters.id
          type: string
          description: Resource Id
        - id: parameters.location
          type: string
          description: Resource location
        - id: parameters.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VirtualNetwork} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdate(resourceGroupName, virtualNetworkName,
        parameters, parameters.addressSpace,
        parameters.addressSpace.addressPrefixes, parameters.dhcpOptions,
        parameters.dhcpOptions.dnsServers, parameters.subnets,
        parameters.resourceGuid, parameters.provisioningState, parameters.etag,
        parameters.id, parameters.location, parameters.tags, options,
        options.customHeaders, callback);
    fullName: >-
      VirtualNetworks.createOrUpdate(resourceGroupName, virtualNetworkName,
      parameters, parameters.addressSpace,
      parameters.addressSpace.addressPrefixes, parameters.dhcpOptions,
      parameters.dhcpOptions.dnsServers, parameters.subnets,
      parameters.resourceGuid, parameters.provisioningState, parameters.etag,
      parameters.id, parameters.location, parameters.tags, options,
      options.customHeaders, callback)
    children:
      - 'VirtualNetworks#createOrUpdate~client'
      - 'VirtualNetworks#createOrUpdate~callback'
      - 'VirtualNetworks#createOrUpdate~options'
  - uid: 'VirtualNetworks#beginCreateOrUpdate'
    id: beginCreateOrUpdate
    parent: VirtualNetworks
    name: >-
      beginCreateOrUpdate(resourceGroupName, virtualNetworkName, parameters,
      parameters.addressSpace, parameters.addressSpace.addressPrefixes,
      parameters.dhcpOptions, parameters.dhcpOptions.dnsServers,
      parameters.subnets, parameters.resourceGuid, parameters.provisioningState,
      parameters.etag, parameters.id, parameters.location, parameters.tags,
      options, options.customHeaders, callback)
    summary: "The Put VirtualNetwork operation creates/updates a virtual network in the\rspecified resource group."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: parameters
          type: object
          description: "Parameters supplied to the create/update Virtual\rNetwork operation"
        - id: parameters.addressSpace
          type: object
          description: "Gets or sets AddressSpace that\rcontains an array of IP address ranges that can be used by subnets"
        - id: parameters.addressSpace.addressPrefixes
          type: array
          description: "Gets or sets List\rof address blocks reserved for this virtual network in CIDR notation"
        - id: parameters.dhcpOptions
          type: object
          description: "Gets or sets DHCPOptions that\rcontains an array of DNS servers available to VMs deployed in the virtual\rnetwork"
        - id: parameters.dhcpOptions.dnsServers
          type: array
          description: "Gets or sets list of DNS\rservers IP addresses"
        - id: parameters.subnets
          type: array
          description: "Gets or sets List of subnets in a\rVirtualNetwork"
        - id: parameters.resourceGuid
          type: string
          description: "Gets or sets resource guid\rproperty of the VirtualNetwork resource"
        - id: parameters.provisioningState
          type: string
          description: "Gets or sets Provisioning\rstate of the PublicIP resource Updating/Deleting/Failed"
        - id: parameters.etag
          type: string
          description: "Gets a unique read-only string that\rchanges whenever the resource is updated"
        - id: parameters.id
          type: string
          description: Resource Id
        - id: parameters.location
          type: string
          description: Resource location
        - id: parameters.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VirtualNetwork} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdate(resourceGroupName, virtualNetworkName,
        parameters, parameters.addressSpace,
        parameters.addressSpace.addressPrefixes, parameters.dhcpOptions,
        parameters.dhcpOptions.dnsServers, parameters.subnets,
        parameters.resourceGuid, parameters.provisioningState, parameters.etag,
        parameters.id, parameters.location, parameters.tags, options,
        options.customHeaders, callback);
    fullName: >-
      VirtualNetworks.beginCreateOrUpdate(resourceGroupName, virtualNetworkName,
      parameters, parameters.addressSpace,
      parameters.addressSpace.addressPrefixes, parameters.dhcpOptions,
      parameters.dhcpOptions.dnsServers, parameters.subnets,
      parameters.resourceGuid, parameters.provisioningState, parameters.etag,
      parameters.id, parameters.location, parameters.tags, options,
      options.customHeaders, callback)
    children:
      - 'VirtualNetworks#beginCreateOrUpdate~client'
      - 'VirtualNetworks#beginCreateOrUpdate~callback'
      - 'VirtualNetworks#beginCreateOrUpdate~options'
      - 'VirtualNetworks#beginCreateOrUpdate~requestUrl'
      - 'VirtualNetworks#beginCreateOrUpdate~requestUrl'
      - 'VirtualNetworks#beginCreateOrUpdate~requestUrl'
      - 'VirtualNetworks#beginCreateOrUpdate~requestUrl'
      - 'VirtualNetworks#beginCreateOrUpdate~queryParameters'
      - 'VirtualNetworks#beginCreateOrUpdate~requestUrl'
      - 'VirtualNetworks#beginCreateOrUpdate~regex'
      - 'VirtualNetworks#beginCreateOrUpdate~requestUrl'
      - 'VirtualNetworks#beginCreateOrUpdate~httpRequest'
      - 'VirtualNetworks#beginCreateOrUpdate~headerName'
      - 'VirtualNetworks#beginCreateOrUpdate~requestContent'
      - 'VirtualNetworks#beginCreateOrUpdate~requestModel'
      - 'VirtualNetworks#beginCreateOrUpdate~requestModelMapper'
      - 'VirtualNetworks#beginCreateOrUpdate~requestModel'
      - 'VirtualNetworks#beginCreateOrUpdate~requestContent'
      - 'VirtualNetworks#beginCreateOrUpdate~serializationError'
  - uid: 'VirtualNetworks#listAll'
    id: listAll
    parent: VirtualNetworks
    name: 'listAll(options, options.customHeaders, callback)'
    summary: The list VirtualNetwork returns all Virtual Networks in a subscription
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VirtualNetworkListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listAll(options, options.customHeaders, callback);'
    fullName: 'VirtualNetworks.listAll(options, options.customHeaders, callback)'
    children:
      - 'VirtualNetworks#listAll~client'
      - 'VirtualNetworks#listAll~callback'
      - 'VirtualNetworks#listAll~options'
      - 'VirtualNetworks#listAll~requestUrl'
      - 'VirtualNetworks#listAll~requestUrl'
      - 'VirtualNetworks#listAll~queryParameters'
      - 'VirtualNetworks#listAll~requestUrl'
      - 'VirtualNetworks#listAll~regex'
      - 'VirtualNetworks#listAll~requestUrl'
      - 'VirtualNetworks#listAll~httpRequest'
      - 'VirtualNetworks#listAll~headerName'
  - uid: 'VirtualNetworks#list'
    id: list
    parent: VirtualNetworks
    name: 'list(resourceGroupName, options, options.customHeaders, callback)'
    summary: The list VirtualNetwork returns all Virtual Networks in a resource group
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VirtualNetworkListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function list(resourceGroupName, options, options.customHeaders,
        callback);
    fullName: >-
      VirtualNetworks.list(resourceGroupName, options, options.customHeaders,
      callback)
    children:
      - 'VirtualNetworks#list~client'
      - 'VirtualNetworks#list~callback'
      - 'VirtualNetworks#list~options'
      - 'VirtualNetworks#list~requestUrl'
      - 'VirtualNetworks#list~requestUrl'
      - 'VirtualNetworks#list~requestUrl'
      - 'VirtualNetworks#list~queryParameters'
      - 'VirtualNetworks#list~requestUrl'
      - 'VirtualNetworks#list~regex'
      - 'VirtualNetworks#list~requestUrl'
      - 'VirtualNetworks#list~httpRequest'
      - 'VirtualNetworks#list~headerName'
  - uid: 'VirtualNetworks#listAllNext'
    id: listAllNext
    parent: VirtualNetworks
    name: 'listAllNext(nextPageLink, options, options.customHeaders, callback)'
    summary: The list VirtualNetwork returns all Virtual Networks in a subscription
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VirtualNetworkListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listAllNext(nextPageLink, options, options.customHeaders,
        callback);
    fullName: >-
      VirtualNetworks.listAllNext(nextPageLink, options, options.customHeaders,
      callback)
    children:
      - 'VirtualNetworks#listAllNext~client'
      - 'VirtualNetworks#listAllNext~callback'
      - 'VirtualNetworks#listAllNext~options'
      - 'VirtualNetworks#listAllNext~requestUrl'
      - 'VirtualNetworks#listAllNext~requestUrl'
      - 'VirtualNetworks#listAllNext~regex'
      - 'VirtualNetworks#listAllNext~requestUrl'
      - 'VirtualNetworks#listAllNext~httpRequest'
      - 'VirtualNetworks#listAllNext~headerName'
  - uid: 'VirtualNetworks#listNext'
    id: listNext
    parent: VirtualNetworks
    name: 'listNext(nextPageLink, options, options.customHeaders, callback)'
    summary: The list VirtualNetwork returns all Virtual Networks in a resource group
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VirtualNetworkListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listNext(nextPageLink, options, options.customHeaders,
        callback);
    fullName: >-
      VirtualNetworks.listNext(nextPageLink, options, options.customHeaders,
      callback)
    children:
      - 'VirtualNetworks#listNext~client'
      - 'VirtualNetworks#listNext~callback'
      - 'VirtualNetworks#listNext~options'
      - 'VirtualNetworks#listNext~requestUrl'
      - 'VirtualNetworks#listNext~requestUrl'
      - 'VirtualNetworks#listNext~regex'
      - 'VirtualNetworks#listNext~requestUrl'
      - 'VirtualNetworks#listNext~httpRequest'
      - 'VirtualNetworks#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: array
    name: array
    fullName: array
    isExternal: true

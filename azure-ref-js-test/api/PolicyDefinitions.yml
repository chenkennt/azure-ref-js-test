items:
  - uid: PolicyDefinitions
    id: PolicyDefinitions
    name: PolicyDefinitions
    type: Class
    syntax:
      content: PolicyDefinitions
    fullName: PolicyDefinitions
    children:
      - 'PolicyDefinitions#client'
      - 'PolicyDefinitions#createOrUpdate'
      - 'PolicyDefinitions#get'
      - 'PolicyDefinitions#deleteMethod'
  - uid: 'PolicyDefinitions#client'
    id: client
    parent: PolicyDefinitions
    name: client
    type: Field
    syntax:
      content: client
    fullName: PolicyDefinitions.client
  - uid: 'PolicyDefinitions#createOrUpdate'
    id: createOrUpdate
    parent: PolicyDefinitions
    name: >-
      createOrUpdate(policyDefinitionName, parameters, parameters.properties,
      parameters.properties.description, parameters.properties.displayName,
      parameters.properties.policyRule, parameters.name, options,
      options.customHeaders, callback)
    summary: Create or update policy definition.
    type: Method
    syntax:
      parameters:
        - id: policyDefinitionName
          type: string
          description: The policy definition name.
        - id: parameters
          type: object
          description: The policy definition properties
        - id: parameters.properties
          type: object
          description: "Gets or sets the policy definition\rproperties."
        - id: parameters.properties.description
          type: string
          description: "Gets or sets the policy\rdefinition description."
        - id: parameters.properties.displayName
          type: string
          description: "Gets or sets the policy\rdefinition display name."
        - id: parameters.properties.policyRule
          type: object
          description: The policy rule json.
        - id: parameters.name
          type: string
          description: Gets or sets the policy definition name.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyDefinition} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdate(policyDefinitionName, parameters,
        parameters.properties, parameters.properties.description,
        parameters.properties.displayName, parameters.properties.policyRule,
        parameters.name, options, options.customHeaders, callback);
    fullName: >-
      PolicyDefinitions.createOrUpdate(policyDefinitionName, parameters,
      parameters.properties, parameters.properties.description,
      parameters.properties.displayName, parameters.properties.policyRule,
      parameters.name, options, options.customHeaders, callback)
    children:
      - 'PolicyDefinitions#createOrUpdate~client'
      - 'PolicyDefinitions#createOrUpdate~callback'
      - 'PolicyDefinitions#createOrUpdate~options'
      - 'PolicyDefinitions#createOrUpdate~requestUrl'
      - 'PolicyDefinitions#createOrUpdate~requestUrl'
      - 'PolicyDefinitions#createOrUpdate~requestUrl'
      - 'PolicyDefinitions#createOrUpdate~queryParameters'
      - 'PolicyDefinitions#createOrUpdate~requestUrl'
      - 'PolicyDefinitions#createOrUpdate~regex'
      - 'PolicyDefinitions#createOrUpdate~requestUrl'
      - 'PolicyDefinitions#createOrUpdate~httpRequest'
      - 'PolicyDefinitions#createOrUpdate~headerName'
      - 'PolicyDefinitions#createOrUpdate~requestContent'
      - 'PolicyDefinitions#createOrUpdate~requestModel'
      - 'PolicyDefinitions#createOrUpdate~requestModelMapper'
      - 'PolicyDefinitions#createOrUpdate~requestModel'
      - 'PolicyDefinitions#createOrUpdate~requestContent'
      - 'PolicyDefinitions#createOrUpdate~serializationError'
  - uid: 'PolicyDefinitions#get'
    id: get
    parent: PolicyDefinitions
    name: 'get(policyDefinitionName, options, options.customHeaders, callback)'
    summary: Gets policy definition.
    type: Method
    syntax:
      parameters:
        - id: policyDefinitionName
          type: string
          description: The policy definition name.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link PolicyDefinition} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function get(policyDefinitionName, options, options.customHeaders,
        callback);
    fullName: >-
      PolicyDefinitions.get(policyDefinitionName, options,
      options.customHeaders, callback)
    children:
      - 'PolicyDefinitions#get~client'
      - 'PolicyDefinitions#get~callback'
      - 'PolicyDefinitions#get~options'
      - 'PolicyDefinitions#get~requestUrl'
      - 'PolicyDefinitions#get~requestUrl'
      - 'PolicyDefinitions#get~requestUrl'
      - 'PolicyDefinitions#get~queryParameters'
      - 'PolicyDefinitions#get~requestUrl'
      - 'PolicyDefinitions#get~regex'
      - 'PolicyDefinitions#get~requestUrl'
      - 'PolicyDefinitions#get~httpRequest'
      - 'PolicyDefinitions#get~headerName'
  - uid: 'PolicyDefinitions#deleteMethod'
    id: deleteMethod
    parent: PolicyDefinitions
    name: >-
      deleteMethod(policyDefinitionName, options, options.customHeaders,
      callback)
    summary: Deletes policy definition.
    type: Method
    syntax:
      parameters:
        - id: policyDefinitionName
          type: string
          description: The policy definition name.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(policyDefinitionName, options,
        options.customHeaders, callback);
    fullName: >-
      PolicyDefinitions.deleteMethod(policyDefinitionName, options,
      options.customHeaders, callback)
    children:
      - 'PolicyDefinitions#deleteMethod~client'
      - 'PolicyDefinitions#deleteMethod~callback'
      - 'PolicyDefinitions#deleteMethod~options'
      - 'PolicyDefinitions#deleteMethod~requestUrl'
      - 'PolicyDefinitions#deleteMethod~requestUrl'
      - 'PolicyDefinitions#deleteMethod~requestUrl'
      - 'PolicyDefinitions#deleteMethod~queryParameters'
      - 'PolicyDefinitions#deleteMethod~requestUrl'
      - 'PolicyDefinitions#deleteMethod~regex'
      - 'PolicyDefinitions#deleteMethod~requestUrl'
      - 'PolicyDefinitions#deleteMethod~httpRequest'
      - 'PolicyDefinitions#deleteMethod~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false

items:
  - uid: Global
    id: Global
    name: Global
    type: Class
    syntax:
      content: Global
    fullName: Global
    children:
      - 'Global#client'
      - 'Global#getSubscriptionPublishingCredentials'
      - 'Global#updateSubscriptionPublishingCredentials'
      - 'Global#getSubscriptionGeoRegions'
      - 'Global#getAllCertificates'
      - 'Global#getAllServerFarms'
      - 'Global#getAllSites'
      - 'Global#getAllHostingEnvironments'
      - 'Global#getAllManagedHostingEnvironments'
      - 'Global#getAllClassicMobileServices'
      - 'Global#listPremierAddOnOffers'
      - 'Global#isHostingEnvironmentNameAvailable'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable'
      - 'Global#checkNameAvailability'
  - uid: 'Global#client'
    id: client
    parent: Global
    name: client
    type: Field
    syntax:
      content: client
    fullName: Global.client
  - uid: 'Global#getSubscriptionPublishingCredentials'
    id: getSubscriptionPublishingCredentials
    parent: Global
    name: >-
      getSubscriptionPublishingCredentials(options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link User} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSubscriptionPublishingCredentials(options,
        options.customHeaders, callback);
    fullName: >-
      Global.getSubscriptionPublishingCredentials(options,
      options.customHeaders, callback)
    children:
      - 'Global#getSubscriptionPublishingCredentials~client'
      - 'Global#getSubscriptionPublishingCredentials~callback'
      - 'Global#getSubscriptionPublishingCredentials~options'
      - 'Global#getSubscriptionPublishingCredentials~requestUrl'
      - 'Global#getSubscriptionPublishingCredentials~requestUrl'
      - 'Global#getSubscriptionPublishingCredentials~queryParameters'
      - 'Global#getSubscriptionPublishingCredentials~requestUrl'
      - 'Global#getSubscriptionPublishingCredentials~regex'
      - 'Global#getSubscriptionPublishingCredentials~requestUrl'
      - 'Global#getSubscriptionPublishingCredentials~httpRequest'
      - 'Global#getSubscriptionPublishingCredentials~headerName'
  - uid: 'Global#updateSubscriptionPublishingCredentials'
    id: updateSubscriptionPublishingCredentials
    parent: Global
    name: >-
      updateSubscriptionPublishingCredentials(requestMessage,
      requestMessage.userName, requestMessage.publishingUserName,
      requestMessage.publishingPassword, requestMessage.scmUri,
      requestMessage.id, requestMessage.name, requestMessage.kind,
      requestMessage.location, requestMessage.type, requestMessage.tags,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: requestMessage
          type: object
          description: "requestMessage with new publishing\rcredentials"
        - id: requestMessage.userName
          type: string
          description: Username (internal)
        - id: requestMessage.publishingUserName
          type: string
          description: "Username used for\rpublishing"
        - id: requestMessage.publishingPassword
          type: string
          description: "Password used for\rpublishing"
        - id: requestMessage.scmUri
          type: string
          description: "Service Control Manager URI,\rincluding username and password"
        - id: requestMessage.id
          type: string
          description: Resource Id
        - id: requestMessage.name
          type: string
          description: Resource Name
        - id: requestMessage.kind
          type: string
          description: Kind of resource
        - id: requestMessage.location
          type: string
          description: Resource Location
        - id: requestMessage.type
          type: string
          description: Resource type
        - id: requestMessage.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link User} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSubscriptionPublishingCredentials(requestMessage,
        requestMessage.userName, requestMessage.publishingUserName,
        requestMessage.publishingPassword, requestMessage.scmUri,
        requestMessage.id, requestMessage.name, requestMessage.kind,
        requestMessage.location, requestMessage.type, requestMessage.tags,
        options, options.customHeaders, callback);
    fullName: >-
      Global.updateSubscriptionPublishingCredentials(requestMessage,
      requestMessage.userName, requestMessage.publishingUserName,
      requestMessage.publishingPassword, requestMessage.scmUri,
      requestMessage.id, requestMessage.name, requestMessage.kind,
      requestMessage.location, requestMessage.type, requestMessage.tags,
      options, options.customHeaders, callback)
    children:
      - 'Global#updateSubscriptionPublishingCredentials~client'
      - 'Global#updateSubscriptionPublishingCredentials~callback'
      - 'Global#updateSubscriptionPublishingCredentials~options'
      - 'Global#updateSubscriptionPublishingCredentials~requestUrl'
      - 'Global#updateSubscriptionPublishingCredentials~requestUrl'
      - 'Global#updateSubscriptionPublishingCredentials~queryParameters'
      - 'Global#updateSubscriptionPublishingCredentials~requestUrl'
      - 'Global#updateSubscriptionPublishingCredentials~regex'
      - 'Global#updateSubscriptionPublishingCredentials~requestUrl'
      - 'Global#updateSubscriptionPublishingCredentials~httpRequest'
      - 'Global#updateSubscriptionPublishingCredentials~headerName'
      - 'Global#updateSubscriptionPublishingCredentials~requestContent'
      - 'Global#updateSubscriptionPublishingCredentials~requestModel'
      - 'Global#updateSubscriptionPublishingCredentials~requestModelMapper'
      - 'Global#updateSubscriptionPublishingCredentials~requestModel'
      - 'Global#updateSubscriptionPublishingCredentials~requestContent'
      - 'Global#updateSubscriptionPublishingCredentials~serializationError'
  - uid: 'Global#getSubscriptionGeoRegions'
    id: getSubscriptionGeoRegions
    parent: Global
    name: >-
      getSubscriptionGeoRegions(options, options.sku, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.sku
          type: string
          description: Filter only to regions that support this sku
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link GeoRegionCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSubscriptionGeoRegions(options, options.sku,
        options.customHeaders, callback);
    fullName: >-
      Global.getSubscriptionGeoRegions(options, options.sku,
      options.customHeaders, callback)
    children:
      - 'Global#getSubscriptionGeoRegions~client'
      - 'Global#getSubscriptionGeoRegions~callback'
      - 'Global#getSubscriptionGeoRegions~options'
      - 'Global#getSubscriptionGeoRegions~sku'
      - 'Global#getSubscriptionGeoRegions~requestUrl'
      - 'Global#getSubscriptionGeoRegions~requestUrl'
      - 'Global#getSubscriptionGeoRegions~queryParameters'
      - 'Global#getSubscriptionGeoRegions~requestUrl'
      - 'Global#getSubscriptionGeoRegions~regex'
      - 'Global#getSubscriptionGeoRegions~requestUrl'
      - 'Global#getSubscriptionGeoRegions~httpRequest'
      - 'Global#getSubscriptionGeoRegions~headerName'
  - uid: 'Global#getAllCertificates'
    id: getAllCertificates
    parent: Global
    name: 'getAllCertificates(options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CertificateCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getAllCertificates(options, options.customHeaders, callback);'
    fullName: 'Global.getAllCertificates(options, options.customHeaders, callback)'
    children:
      - 'Global#getAllCertificates~client'
      - 'Global#getAllCertificates~callback'
      - 'Global#getAllCertificates~options'
      - 'Global#getAllCertificates~requestUrl'
      - 'Global#getAllCertificates~requestUrl'
      - 'Global#getAllCertificates~queryParameters'
      - 'Global#getAllCertificates~requestUrl'
      - 'Global#getAllCertificates~regex'
      - 'Global#getAllCertificates~requestUrl'
      - 'Global#getAllCertificates~httpRequest'
      - 'Global#getAllCertificates~headerName'
  - uid: 'Global#getAllServerFarms'
    id: getAllServerFarms
    parent: Global
    name: >-
      getAllServerFarms(options, options.detailed, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.detailed
          type: boolean
          description: "False to return a subset of App Service\rPlan properties, true to return all of the properties.\rRetrieval of all properties may increase the API latency."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ServerFarmCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getAllServerFarms(options, options.detailed,
        options.customHeaders, callback);
    fullName: >-
      Global.getAllServerFarms(options, options.detailed, options.customHeaders,
      callback)
    children:
      - 'Global#getAllServerFarms~client'
      - 'Global#getAllServerFarms~callback'
      - 'Global#getAllServerFarms~options'
      - 'Global#getAllServerFarms~detailed'
      - 'Global#getAllServerFarms~requestUrl'
      - 'Global#getAllServerFarms~requestUrl'
      - 'Global#getAllServerFarms~queryParameters'
      - 'Global#getAllServerFarms~requestUrl'
      - 'Global#getAllServerFarms~regex'
      - 'Global#getAllServerFarms~requestUrl'
      - 'Global#getAllServerFarms~httpRequest'
      - 'Global#getAllServerFarms~headerName'
  - uid: 'Global#getAllSites'
    id: getAllSites
    parent: Global
    name: 'getAllSites(options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getAllSites(options, options.customHeaders, callback);'
    fullName: 'Global.getAllSites(options, options.customHeaders, callback)'
    children:
      - 'Global#getAllSites~client'
      - 'Global#getAllSites~callback'
      - 'Global#getAllSites~options'
      - 'Global#getAllSites~requestUrl'
      - 'Global#getAllSites~requestUrl'
      - 'Global#getAllSites~queryParameters'
      - 'Global#getAllSites~requestUrl'
      - 'Global#getAllSites~regex'
      - 'Global#getAllSites~requestUrl'
      - 'Global#getAllSites~httpRequest'
      - 'Global#getAllSites~headerName'
  - uid: 'Global#getAllHostingEnvironments'
    id: getAllHostingEnvironments
    parent: Global
    name: 'getAllHostingEnvironments(options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link HostingEnvironmentCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getAllHostingEnvironments(options, options.customHeaders,
        callback);
    fullName: 'Global.getAllHostingEnvironments(options, options.customHeaders, callback)'
    children:
      - 'Global#getAllHostingEnvironments~client'
      - 'Global#getAllHostingEnvironments~callback'
      - 'Global#getAllHostingEnvironments~options'
      - 'Global#getAllHostingEnvironments~requestUrl'
      - 'Global#getAllHostingEnvironments~requestUrl'
      - 'Global#getAllHostingEnvironments~queryParameters'
      - 'Global#getAllHostingEnvironments~requestUrl'
      - 'Global#getAllHostingEnvironments~regex'
      - 'Global#getAllHostingEnvironments~requestUrl'
      - 'Global#getAllHostingEnvironments~httpRequest'
      - 'Global#getAllHostingEnvironments~headerName'
  - uid: 'Global#getAllManagedHostingEnvironments'
    id: getAllManagedHostingEnvironments
    parent: Global
    name: 'getAllManagedHostingEnvironments(options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ManagedHostingEnvironmentCollection} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getAllManagedHostingEnvironments(options,
        options.customHeaders, callback);
    fullName: >-
      Global.getAllManagedHostingEnvironments(options, options.customHeaders,
      callback)
    children:
      - 'Global#getAllManagedHostingEnvironments~client'
      - 'Global#getAllManagedHostingEnvironments~callback'
      - 'Global#getAllManagedHostingEnvironments~options'
      - 'Global#getAllManagedHostingEnvironments~requestUrl'
      - 'Global#getAllManagedHostingEnvironments~requestUrl'
      - 'Global#getAllManagedHostingEnvironments~queryParameters'
      - 'Global#getAllManagedHostingEnvironments~requestUrl'
      - 'Global#getAllManagedHostingEnvironments~regex'
      - 'Global#getAllManagedHostingEnvironments~requestUrl'
      - 'Global#getAllManagedHostingEnvironments~httpRequest'
      - 'Global#getAllManagedHostingEnvironments~headerName'
  - uid: 'Global#getAllClassicMobileServices'
    id: getAllClassicMobileServices
    parent: Global
    name: 'getAllClassicMobileServices(options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ClassicMobileServiceCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getAllClassicMobileServices(options, options.customHeaders,
        callback);
    fullName: >-
      Global.getAllClassicMobileServices(options, options.customHeaders,
      callback)
    children:
      - 'Global#getAllClassicMobileServices~client'
      - 'Global#getAllClassicMobileServices~callback'
      - 'Global#getAllClassicMobileServices~options'
      - 'Global#getAllClassicMobileServices~requestUrl'
      - 'Global#getAllClassicMobileServices~requestUrl'
      - 'Global#getAllClassicMobileServices~queryParameters'
      - 'Global#getAllClassicMobileServices~requestUrl'
      - 'Global#getAllClassicMobileServices~regex'
      - 'Global#getAllClassicMobileServices~requestUrl'
      - 'Global#getAllClassicMobileServices~httpRequest'
      - 'Global#getAllClassicMobileServices~headerName'
  - uid: 'Global#listPremierAddOnOffers'
    id: listPremierAddOnOffers
    parent: Global
    name: 'listPremierAddOnOffers(options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listPremierAddOnOffers(options, options.customHeaders,
        callback);
    fullName: 'Global.listPremierAddOnOffers(options, options.customHeaders, callback)'
    children:
      - 'Global#listPremierAddOnOffers~client'
      - 'Global#listPremierAddOnOffers~callback'
      - 'Global#listPremierAddOnOffers~options'
      - 'Global#listPremierAddOnOffers~requestUrl'
      - 'Global#listPremierAddOnOffers~requestUrl'
      - 'Global#listPremierAddOnOffers~queryParameters'
      - 'Global#listPremierAddOnOffers~requestUrl'
      - 'Global#listPremierAddOnOffers~regex'
      - 'Global#listPremierAddOnOffers~requestUrl'
      - 'Global#listPremierAddOnOffers~httpRequest'
      - 'Global#listPremierAddOnOffers~headerName'
  - uid: 'Global#isHostingEnvironmentNameAvailable'
    id: isHostingEnvironmentNameAvailable
    parent: Global
    name: >-
      isHostingEnvironmentNameAvailable(name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: name
          type: string
          description: Hosting environment name
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function isHostingEnvironmentNameAvailable(name, options,
        options.customHeaders, callback);
    fullName: >-
      Global.isHostingEnvironmentNameAvailable(name, options,
      options.customHeaders, callback)
    children:
      - 'Global#isHostingEnvironmentNameAvailable~client'
      - 'Global#isHostingEnvironmentNameAvailable~callback'
      - 'Global#isHostingEnvironmentNameAvailable~options'
      - 'Global#isHostingEnvironmentNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentNameAvailable~queryParameters'
      - 'Global#isHostingEnvironmentNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentNameAvailable~regex'
      - 'Global#isHostingEnvironmentNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentNameAvailable~httpRequest'
      - 'Global#isHostingEnvironmentNameAvailable~headerName'
  - uid: 'Global#isHostingEnvironmentWithLegacyNameAvailable'
    id: isHostingEnvironmentWithLegacyNameAvailable
    parent: Global
    name: >-
      isHostingEnvironmentWithLegacyNameAvailable(name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: name
          type: string
          description: Hosting environment name
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function isHostingEnvironmentWithLegacyNameAvailable(name, options,
        options.customHeaders, callback);
    fullName: >-
      Global.isHostingEnvironmentWithLegacyNameAvailable(name, options,
      options.customHeaders, callback)
    children:
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~client'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~callback'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~options'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~queryParameters'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~regex'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~requestUrl'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~httpRequest'
      - 'Global#isHostingEnvironmentWithLegacyNameAvailable~headerName'
  - uid: 'Global#checkNameAvailability'
    id: checkNameAvailability
    parent: Global
    name: >-
      checkNameAvailability(request, request.name, request.type, request.isFqdn,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: request
          type: object
          description: Name availability request
        - id: request.name
          type: string
          description: Resource name to verify
        - id: request.type
          type: string
          description: Resource type used for verification
        - id: request.isFqdn
          type: boolean
          description: Is fully qualified domain name
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ResourceNameAvailability} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function checkNameAvailability(request, request.name, request.type,
        request.isFqdn, options, options.customHeaders, callback);
    fullName: >-
      Global.checkNameAvailability(request, request.name, request.type,
      request.isFqdn, options, options.customHeaders, callback)
    children:
      - 'Global#checkNameAvailability~client'
      - 'Global#checkNameAvailability~callback'
      - 'Global#checkNameAvailability~options'
      - 'Global#checkNameAvailability~requestUrl'
      - 'Global#checkNameAvailability~requestUrl'
      - 'Global#checkNameAvailability~queryParameters'
      - 'Global#checkNameAvailability~requestUrl'
      - 'Global#checkNameAvailability~regex'
      - 'Global#checkNameAvailability~requestUrl'
      - 'Global#checkNameAvailability~httpRequest'
      - 'Global#checkNameAvailability~headerName'
      - 'Global#checkNameAvailability~requestContent'
      - 'Global#checkNameAvailability~requestModel'
      - 'Global#checkNameAvailability~requestModelMapper'
      - 'Global#checkNameAvailability~requestModel'
      - 'Global#checkNameAvailability~requestContent'
      - 'Global#checkNameAvailability~serializationError'
references:
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true

items:
  - uid: Sites
    id: Sites
    name: Sites
    type: Class
    syntax:
      content: Sites
    fullName: Sites
    children:
      - 'Sites#client'
      - 'Sites#getSiteVNETConnectionSlot'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot'
      - 'Sites#deleteSiteVNETConnectionSlot'
      - 'Sites#updateSiteVNETConnectionSlot'
      - 'Sites#getSiteVNETConnection'
      - 'Sites#createOrUpdateSiteVNETConnection'
      - 'Sites#deleteSiteVNETConnection'
      - 'Sites#updateSiteVNETConnection'
      - 'Sites#getSiteNetworkFeaturesSlot'
      - 'Sites#getSiteNetworkFeatures'
      - 'Sites#getSiteOperationSlot'
      - 'Sites#getSiteOperation'
      - 'Sites#swapSlotWithProduction'
      - 'Sites#beginSwapSlotWithProduction'
      - 'Sites#swapSlotsSlot'
      - 'Sites#beginSwapSlotsSlot'
      - 'Sites#getSlotsDifferencesFromProduction'
      - 'Sites#getSlotsDifferencesSlot'
      - 'Sites#applySlotConfigToProduction'
      - 'Sites#applySlotConfigSlot'
      - 'Sites#resetProductionSlotConfig'
      - 'Sites#resetSlotConfigSlot'
      - 'Sites#getSlotConfigNames'
      - 'Sites#updateSlotConfigNames'
      - 'Sites#getSiteSlots'
      - 'Sites#getSites'
      - 'Sites#getSite'
      - 'Sites#createOrUpdateSite'
      - 'Sites#beginCreateOrUpdateSite'
      - 'Sites#deleteSite'
      - 'Sites#getSiteSlot'
      - 'Sites#createOrUpdateSiteSlot'
      - 'Sites#beginCreateOrUpdateSiteSlot'
      - 'Sites#deleteSiteSlot'
      - 'Sites#isSiteCloneable'
      - 'Sites#isSiteCloneableSlot'
      - 'Sites#recoverSite'
      - 'Sites#beginRecoverSite'
      - 'Sites#recoverSiteSlot'
      - 'Sites#beginRecoverSiteSlot'
      - 'Sites#getSiteSnapshots'
      - 'Sites#getSiteSnapshotsSlot'
      - 'Sites#getDeletedSites'
      - 'Sites#getDeployments'
      - 'Sites#getDeploymentsSlot'
      - 'Sites#getInstanceDeployments'
      - 'Sites#getInstanceDeploymentsSlot'
      - 'Sites#getInstanceDeployment'
      - 'Sites#createInstanceDeployment'
      - 'Sites#deleteInstanceDeployment'
      - 'Sites#getDeployment'
      - 'Sites#createDeployment'
      - 'Sites#deleteDeployment'
      - 'Sites#getDeploymentSlot'
      - 'Sites#createDeploymentSlot'
      - 'Sites#deleteDeploymentSlot'
      - 'Sites#getInstanceDeploymentSlot'
      - 'Sites#createInstanceDeploymentSlot'
      - 'Sites#deleteInstanceDeploymentSlot'
      - 'Sites#getSiteInstanceIdentifiers'
      - 'Sites#getSiteInstanceIdentifiersSlot'
      - 'Sites#getSiteHostNameBindings'
      - 'Sites#getSiteHostNameBindingsSlot'
      - 'Sites#getSiteHostNameBinding'
      - 'Sites#createOrUpdateSiteHostNameBinding'
      - 'Sites#deleteSiteHostNameBinding'
      - 'Sites#getSiteHostNameBindingSlot'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot'
      - 'Sites#deleteSiteHostNameBindingSlot'
      - 'Sites#getSiteConfig'
      - 'Sites#createOrUpdateSiteConfig'
      - 'Sites#updateSiteConfig'
      - 'Sites#getSiteConfigSlot'
      - 'Sites#createOrUpdateSiteConfigSlot'
      - 'Sites#updateSiteConfigSlot'
      - 'Sites#getSiteSourceControl'
      - 'Sites#createOrUpdateSiteSourceControl'
      - 'Sites#deleteSiteSourceControl'
      - 'Sites#updateSiteSourceControl'
      - 'Sites#getSiteSourceControlSlot'
      - 'Sites#createOrUpdateSiteSourceControlSlot'
      - 'Sites#deleteSiteSourceControlSlot'
      - 'Sites#updateSiteSourceControlSlot'
      - 'Sites#listSiteAppSettingsSlot'
      - 'Sites#listSiteAppSettings'
      - 'Sites#updateSiteAppSettings'
      - 'Sites#updateSiteAppSettingsSlot'
      - 'Sites#listSiteConnectionStrings'
      - 'Sites#listSiteConnectionStringsSlot'
      - 'Sites#updateSiteConnectionStrings'
      - 'Sites#updateSiteConnectionStringsSlot'
      - 'Sites#listSiteAuthSettings'
      - 'Sites#listSiteAuthSettingsSlot'
      - 'Sites#updateSiteAuthSettings'
      - 'Sites#updateSiteAuthSettingsSlot'
      - 'Sites#listSitePublishingCredentials'
      - 'Sites#beginListSitePublishingCredentials'
      - 'Sites#listSitePublishingCredentialsSlot'
      - 'Sites#beginListSitePublishingCredentialsSlot'
      - 'Sites#listSiteMetadata'
      - 'Sites#listSiteMetadataSlot'
      - 'Sites#updateSiteMetadata'
      - 'Sites#updateSiteMetadataSlot'
      - 'Sites#getSiteLogsConfig'
      - 'Sites#updateSiteLogsConfig'
      - 'Sites#getSiteLogsConfigSlot'
      - 'Sites#updateSiteLogsConfigSlot'
      - 'Sites#listSitePremierAddOns'
      - 'Sites#listSitePremierAddOnsSlot'
      - 'Sites#getSitePremierAddOn'
      - 'Sites#addSitePremierAddOn'
      - 'Sites#deleteSitePremierAddOn'
      - 'Sites#getSitePremierAddOnSlot'
      - 'Sites#addSitePremierAddOnSlot'
      - 'Sites#deleteSitePremierAddOnSlot'
      - 'Sites#getSiteBackupConfiguration'
      - 'Sites#getSiteBackupConfigurationSlot'
      - 'Sites#updateSiteBackupConfiguration'
      - 'Sites#updateSiteBackupConfigurationSlot'
      - 'Sites#backupSite'
      - 'Sites#backupSiteSlot'
      - 'Sites#discoverSiteRestore'
      - 'Sites#discoverSiteRestoreSlot'
      - 'Sites#listSiteBackups'
      - 'Sites#listSiteBackupsSlot'
      - 'Sites#getSiteBackupStatus'
      - 'Sites#deleteBackup'
      - 'Sites#getSiteBackupStatusSlot'
      - 'Sites#deleteBackupSlot'
      - 'Sites#getSiteBackupStatusSecretsSlot'
      - 'Sites#getSiteBackupStatusSecrets'
      - 'Sites#restoreSite'
      - 'Sites#beginRestoreSite'
      - 'Sites#restoreSiteSlot'
      - 'Sites#beginRestoreSiteSlot'
      - 'Sites#getSiteUsages'
      - 'Sites#getSiteUsagesSlot'
      - 'Sites#getSiteMetrics'
      - 'Sites#getSiteMetricsSlot'
      - 'Sites#getSiteMetricDefinitionsSlot'
      - 'Sites#getSiteMetricDefinitions'
      - 'Sites#listSitePublishingProfileXml'
      - 'Sites#listSitePublishingProfileXmlSlot'
      - 'Sites#restartSiteSlot'
      - 'Sites#restartSite'
      - 'Sites#startSite'
      - 'Sites#startSiteSlot'
      - 'Sites#stopSite'
      - 'Sites#stopSiteSlot'
      - 'Sites#syncSiteRepository'
      - 'Sites#syncSiteRepositorySlot'
      - 'Sites#generateNewSitePublishingPasswordSlot'
      - 'Sites#generateNewSitePublishingPassword'
      - 'Sites#getSiteRelayServiceConnection'
      - 'Sites#createOrUpdateSiteRelayServiceConnection'
      - 'Sites#deleteSiteRelayServiceConnection'
      - 'Sites#updateSiteRelayServiceConnection'
      - 'Sites#getSiteRelayServiceConnectionSlot'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot'
      - 'Sites#deleteSiteRelayServiceConnectionSlot'
      - 'Sites#updateSiteRelayServiceConnectionSlot'
      - 'Sites#listSiteRelayServiceConnectionsSlot'
      - 'Sites#listSiteRelayServiceConnections'
      - 'Sites#getSiteVnetGatewaySlot'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot'
      - 'Sites#updateSiteVNETConnectionGatewaySlot'
      - 'Sites#getSiteVnetGateway'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway'
      - 'Sites#updateSiteVNETConnectionGateway'
      - 'Sites#getSiteVNETConnections'
      - 'Sites#getSiteVNETConnectionsSlot'
  - uid: 'Sites#client'
    id: client
    parent: Sites
    name: client
    type: Field
    syntax:
      content: client
    fullName: Sites.client
  - uid: 'Sites#getSiteVNETConnectionSlot'
    id: getSiteVNETConnectionSlot
    parent: Sites
    name: >-
      getSiteVNETConnectionSlot(resourceGroupName, name, vnetName, slot,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteVNETConnectionSlot(resourceGroupName, name, vnetName,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteVNETConnectionSlot(resourceGroupName, name, vnetName, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteVNETConnectionSlot~client'
      - 'Sites#getSiteVNETConnectionSlot~callback'
      - 'Sites#getSiteVNETConnectionSlot~options'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~queryParameters'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~regex'
      - 'Sites#getSiteVNETConnectionSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionSlot~httpRequest'
      - 'Sites#getSiteVNETConnectionSlot~headerName'
  - uid: 'Sites#createOrUpdateSiteVNETConnectionSlot'
    id: createOrUpdateSiteVNETConnectionSlot
    parent: Sites
    name: >-
      createOrUpdateSiteVNETConnectionSlot(resourceGroupName, name, vnetName,
      connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: connectionEnvelope
          type: object
          description: "The properties of this Virtual Network\rConnection"
        - id: connectionEnvelope.vnetResourceId
          type: string
          description: The vnet resource id
        - id: connectionEnvelope.certThumbprint
          type: string
          description: "The client certificate\rthumbprint"
        - id: connectionEnvelope.certBlob
          type: string
          description: "A certificate file (.cer)\rblob containing the public key of the private key used to authenticate a\rPoint-To-Site VPN connection."
        - id: connectionEnvelope.routes
          type: array
          description: "The routes that this virtual\rnetwork connection uses."
        - id: connectionEnvelope.resyncRequired
          type: boolean
          description: "Flag to determine if a\rresync is required"
        - id: connectionEnvelope.dnsServers
          type: string
          description: "Dns servers to be used by\rthis VNET. This should be a comma-separated list of IP addresses."
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteVNETConnectionSlot(resourceGroupName, name,
        vnetName, connectionEnvelope, connectionEnvelope.vnetResourceId,
        connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
        connectionEnvelope.routes, connectionEnvelope.resyncRequired,
        connectionEnvelope.dnsServers, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.createOrUpdateSiteVNETConnectionSlot(resourceGroupName, name,
      vnetName, connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~client'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~callback'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~options'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~queryParameters'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~regex'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~httpRequest'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~headerName'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestModelMapper'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnectionSlot~serializationError'
  - uid: 'Sites#deleteSiteVNETConnectionSlot'
    id: deleteSiteVNETConnectionSlot
    parent: Sites
    name: >-
      deleteSiteVNETConnectionSlot(resourceGroupName, name, vnetName, slot,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteVNETConnectionSlot(resourceGroupName, name, vnetName,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteVNETConnectionSlot(resourceGroupName, name, vnetName,
      slot, options, options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteVNETConnectionSlot~client'
      - 'Sites#deleteSiteVNETConnectionSlot~callback'
      - 'Sites#deleteSiteVNETConnectionSlot~options'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~queryParameters'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~regex'
      - 'Sites#deleteSiteVNETConnectionSlot~requestUrl'
      - 'Sites#deleteSiteVNETConnectionSlot~httpRequest'
      - 'Sites#deleteSiteVNETConnectionSlot~headerName'
  - uid: 'Sites#updateSiteVNETConnectionSlot'
    id: updateSiteVNETConnectionSlot
    parent: Sites
    name: >-
      updateSiteVNETConnectionSlot(resourceGroupName, name, vnetName,
      connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: connectionEnvelope
          type: object
          description: "The properties of this Virtual Network\rConnection"
        - id: connectionEnvelope.vnetResourceId
          type: string
          description: The vnet resource id
        - id: connectionEnvelope.certThumbprint
          type: string
          description: "The client certificate\rthumbprint"
        - id: connectionEnvelope.certBlob
          type: string
          description: "A certificate file (.cer)\rblob containing the public key of the private key used to authenticate a\rPoint-To-Site VPN connection."
        - id: connectionEnvelope.routes
          type: array
          description: "The routes that this virtual\rnetwork connection uses."
        - id: connectionEnvelope.resyncRequired
          type: boolean
          description: "Flag to determine if a\rresync is required"
        - id: connectionEnvelope.dnsServers
          type: string
          description: "Dns servers to be used by\rthis VNET. This should be a comma-separated list of IP addresses."
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteVNETConnectionSlot(resourceGroupName, name, vnetName,
        connectionEnvelope, connectionEnvelope.vnetResourceId,
        connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
        connectionEnvelope.routes, connectionEnvelope.resyncRequired,
        connectionEnvelope.dnsServers, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.updateSiteVNETConnectionSlot(resourceGroupName, name, vnetName,
      connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteVNETConnectionSlot~client'
      - 'Sites#updateSiteVNETConnectionSlot~callback'
      - 'Sites#updateSiteVNETConnectionSlot~options'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~queryParameters'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~regex'
      - 'Sites#updateSiteVNETConnectionSlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionSlot~httpRequest'
      - 'Sites#updateSiteVNETConnectionSlot~headerName'
      - 'Sites#updateSiteVNETConnectionSlot~requestContent'
      - 'Sites#updateSiteVNETConnectionSlot~requestModel'
      - 'Sites#updateSiteVNETConnectionSlot~requestModelMapper'
      - 'Sites#updateSiteVNETConnectionSlot~requestModel'
      - 'Sites#updateSiteVNETConnectionSlot~requestContent'
      - 'Sites#updateSiteVNETConnectionSlot~serializationError'
  - uid: 'Sites#getSiteVNETConnection'
    id: getSiteVNETConnection
    parent: Sites
    name: >-
      getSiteVNETConnection(resourceGroupName, name, vnetName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteVNETConnection(resourceGroupName, name, vnetName,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteVNETConnection(resourceGroupName, name, vnetName, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteVNETConnection~client'
      - 'Sites#getSiteVNETConnection~callback'
      - 'Sites#getSiteVNETConnection~options'
      - 'Sites#getSiteVNETConnection~requestUrl'
      - 'Sites#getSiteVNETConnection~requestUrl'
      - 'Sites#getSiteVNETConnection~requestUrl'
      - 'Sites#getSiteVNETConnection~requestUrl'
      - 'Sites#getSiteVNETConnection~requestUrl'
      - 'Sites#getSiteVNETConnection~queryParameters'
      - 'Sites#getSiteVNETConnection~requestUrl'
      - 'Sites#getSiteVNETConnection~regex'
      - 'Sites#getSiteVNETConnection~requestUrl'
      - 'Sites#getSiteVNETConnection~httpRequest'
      - 'Sites#getSiteVNETConnection~headerName'
  - uid: 'Sites#createOrUpdateSiteVNETConnection'
    id: createOrUpdateSiteVNETConnection
    parent: Sites
    name: >-
      createOrUpdateSiteVNETConnection(resourceGroupName, name, vnetName,
      connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: connectionEnvelope
          type: object
          description: "The properties of this Virtual Network\rConnection"
        - id: connectionEnvelope.vnetResourceId
          type: string
          description: The vnet resource id
        - id: connectionEnvelope.certThumbprint
          type: string
          description: "The client certificate\rthumbprint"
        - id: connectionEnvelope.certBlob
          type: string
          description: "A certificate file (.cer)\rblob containing the public key of the private key used to authenticate a\rPoint-To-Site VPN connection."
        - id: connectionEnvelope.routes
          type: array
          description: "The routes that this virtual\rnetwork connection uses."
        - id: connectionEnvelope.resyncRequired
          type: boolean
          description: "Flag to determine if a\rresync is required"
        - id: connectionEnvelope.dnsServers
          type: string
          description: "Dns servers to be used by\rthis VNET. This should be a comma-separated list of IP addresses."
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteVNETConnection(resourceGroupName, name,
        vnetName, connectionEnvelope, connectionEnvelope.vnetResourceId,
        connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
        connectionEnvelope.routes, connectionEnvelope.resyncRequired,
        connectionEnvelope.dnsServers, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteVNETConnection(resourceGroupName, name, vnetName,
      connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteVNETConnection~client'
      - 'Sites#createOrUpdateSiteVNETConnection~callback'
      - 'Sites#createOrUpdateSiteVNETConnection~options'
      - 'Sites#createOrUpdateSiteVNETConnection~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnection~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnection~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnection~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnection~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnection~queryParameters'
      - 'Sites#createOrUpdateSiteVNETConnection~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnection~regex'
      - 'Sites#createOrUpdateSiteVNETConnection~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnection~httpRequest'
      - 'Sites#createOrUpdateSiteVNETConnection~headerName'
      - 'Sites#createOrUpdateSiteVNETConnection~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnection~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnection~requestModelMapper'
      - 'Sites#createOrUpdateSiteVNETConnection~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnection~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnection~serializationError'
  - uid: 'Sites#deleteSiteVNETConnection'
    id: deleteSiteVNETConnection
    parent: Sites
    name: >-
      deleteSiteVNETConnection(resourceGroupName, name, vnetName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteVNETConnection(resourceGroupName, name, vnetName,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteVNETConnection(resourceGroupName, name, vnetName, options,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteVNETConnection~client'
      - 'Sites#deleteSiteVNETConnection~callback'
      - 'Sites#deleteSiteVNETConnection~options'
      - 'Sites#deleteSiteVNETConnection~requestUrl'
      - 'Sites#deleteSiteVNETConnection~requestUrl'
      - 'Sites#deleteSiteVNETConnection~requestUrl'
      - 'Sites#deleteSiteVNETConnection~requestUrl'
      - 'Sites#deleteSiteVNETConnection~requestUrl'
      - 'Sites#deleteSiteVNETConnection~queryParameters'
      - 'Sites#deleteSiteVNETConnection~requestUrl'
      - 'Sites#deleteSiteVNETConnection~regex'
      - 'Sites#deleteSiteVNETConnection~requestUrl'
      - 'Sites#deleteSiteVNETConnection~httpRequest'
      - 'Sites#deleteSiteVNETConnection~headerName'
  - uid: 'Sites#updateSiteVNETConnection'
    id: updateSiteVNETConnection
    parent: Sites
    name: >-
      updateSiteVNETConnection(resourceGroupName, name, vnetName,
      connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: connectionEnvelope
          type: object
          description: "The properties of this Virtual Network\rConnection"
        - id: connectionEnvelope.vnetResourceId
          type: string
          description: The vnet resource id
        - id: connectionEnvelope.certThumbprint
          type: string
          description: "The client certificate\rthumbprint"
        - id: connectionEnvelope.certBlob
          type: string
          description: "A certificate file (.cer)\rblob containing the public key of the private key used to authenticate a\rPoint-To-Site VPN connection."
        - id: connectionEnvelope.routes
          type: array
          description: "The routes that this virtual\rnetwork connection uses."
        - id: connectionEnvelope.resyncRequired
          type: boolean
          description: "Flag to determine if a\rresync is required"
        - id: connectionEnvelope.dnsServers
          type: string
          description: "Dns servers to be used by\rthis VNET. This should be a comma-separated list of IP addresses."
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteVNETConnection(resourceGroupName, name, vnetName,
        connectionEnvelope, connectionEnvelope.vnetResourceId,
        connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
        connectionEnvelope.routes, connectionEnvelope.resyncRequired,
        connectionEnvelope.dnsServers, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteVNETConnection(resourceGroupName, name, vnetName,
      connectionEnvelope, connectionEnvelope.vnetResourceId,
      connectionEnvelope.certThumbprint, connectionEnvelope.certBlob,
      connectionEnvelope.routes, connectionEnvelope.resyncRequired,
      connectionEnvelope.dnsServers, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteVNETConnection~client'
      - 'Sites#updateSiteVNETConnection~callback'
      - 'Sites#updateSiteVNETConnection~options'
      - 'Sites#updateSiteVNETConnection~requestUrl'
      - 'Sites#updateSiteVNETConnection~requestUrl'
      - 'Sites#updateSiteVNETConnection~requestUrl'
      - 'Sites#updateSiteVNETConnection~requestUrl'
      - 'Sites#updateSiteVNETConnection~requestUrl'
      - 'Sites#updateSiteVNETConnection~queryParameters'
      - 'Sites#updateSiteVNETConnection~requestUrl'
      - 'Sites#updateSiteVNETConnection~regex'
      - 'Sites#updateSiteVNETConnection~requestUrl'
      - 'Sites#updateSiteVNETConnection~httpRequest'
      - 'Sites#updateSiteVNETConnection~headerName'
      - 'Sites#updateSiteVNETConnection~requestContent'
      - 'Sites#updateSiteVNETConnection~requestModel'
      - 'Sites#updateSiteVNETConnection~requestModelMapper'
      - 'Sites#updateSiteVNETConnection~requestModel'
      - 'Sites#updateSiteVNETConnection~requestContent'
      - 'Sites#updateSiteVNETConnection~serializationError'
  - uid: 'Sites#getSiteNetworkFeaturesSlot'
    id: getSiteNetworkFeaturesSlot
    parent: Sites
    name: >-
      getSiteNetworkFeaturesSlot(resourceGroupName, name, view, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: view
          type: string
          description: "The type of view. This can either be \"summary\" or\r\"detailed\"."
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link NetworkFeatures} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteNetworkFeaturesSlot(resourceGroupName, name, view, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteNetworkFeaturesSlot(resourceGroupName, name, view, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteNetworkFeaturesSlot~client'
      - 'Sites#getSiteNetworkFeaturesSlot~callback'
      - 'Sites#getSiteNetworkFeaturesSlot~options'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~queryParameters'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~regex'
      - 'Sites#getSiteNetworkFeaturesSlot~requestUrl'
      - 'Sites#getSiteNetworkFeaturesSlot~httpRequest'
      - 'Sites#getSiteNetworkFeaturesSlot~headerName'
  - uid: 'Sites#getSiteNetworkFeatures'
    id: getSiteNetworkFeatures
    parent: Sites
    name: >-
      getSiteNetworkFeatures(resourceGroupName, name, view, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: view
          type: string
          description: "The type of view. This can either be \"summary\" or\r\"detailed\"."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link NetworkFeatures} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteNetworkFeatures(resourceGroupName, name, view, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteNetworkFeatures(resourceGroupName, name, view, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteNetworkFeatures~client'
      - 'Sites#getSiteNetworkFeatures~callback'
      - 'Sites#getSiteNetworkFeatures~options'
      - 'Sites#getSiteNetworkFeatures~requestUrl'
      - 'Sites#getSiteNetworkFeatures~requestUrl'
      - 'Sites#getSiteNetworkFeatures~requestUrl'
      - 'Sites#getSiteNetworkFeatures~requestUrl'
      - 'Sites#getSiteNetworkFeatures~requestUrl'
      - 'Sites#getSiteNetworkFeatures~queryParameters'
      - 'Sites#getSiteNetworkFeatures~requestUrl'
      - 'Sites#getSiteNetworkFeatures~regex'
      - 'Sites#getSiteNetworkFeatures~requestUrl'
      - 'Sites#getSiteNetworkFeatures~httpRequest'
      - 'Sites#getSiteNetworkFeatures~headerName'
  - uid: 'Sites#getSiteOperationSlot'
    id: getSiteOperationSlot
    parent: Sites
    name: >-
      getSiteOperationSlot(resourceGroupName, name, operationId, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: operationId
          type: string
          description: Id of an operation
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteOperationSlot(resourceGroupName, name, operationId,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteOperationSlot(resourceGroupName, name, operationId, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteOperationSlot~client'
      - 'Sites#getSiteOperationSlot~callback'
      - 'Sites#getSiteOperationSlot~options'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~queryParameters'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~regex'
      - 'Sites#getSiteOperationSlot~requestUrl'
      - 'Sites#getSiteOperationSlot~httpRequest'
      - 'Sites#getSiteOperationSlot~headerName'
  - uid: 'Sites#getSiteOperation'
    id: getSiteOperation
    parent: Sites
    name: >-
      getSiteOperation(resourceGroupName, name, operationId, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: operationId
          type: string
          description: Id of an operation
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteOperation(resourceGroupName, name, operationId, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteOperation(resourceGroupName, name, operationId, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteOperation~client'
      - 'Sites#getSiteOperation~callback'
      - 'Sites#getSiteOperation~options'
      - 'Sites#getSiteOperation~requestUrl'
      - 'Sites#getSiteOperation~requestUrl'
      - 'Sites#getSiteOperation~requestUrl'
      - 'Sites#getSiteOperation~requestUrl'
      - 'Sites#getSiteOperation~requestUrl'
      - 'Sites#getSiteOperation~queryParameters'
      - 'Sites#getSiteOperation~requestUrl'
      - 'Sites#getSiteOperation~regex'
      - 'Sites#getSiteOperation~requestUrl'
      - 'Sites#getSiteOperation~httpRequest'
      - 'Sites#getSiteOperation~headerName'
  - uid: 'Sites#swapSlotWithProduction'
    id: swapSlotWithProduction
    parent: Sites
    name: >-
      swapSlotWithProduction(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function swapSlotWithProduction(resourceGroupName, name, slotSwapEntity,
        slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.swapSlotWithProduction(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
      options.customHeaders, callback)
    children:
      - 'Sites#swapSlotWithProduction~client'
      - 'Sites#swapSlotWithProduction~callback'
      - 'Sites#swapSlotWithProduction~options'
  - uid: 'Sites#beginSwapSlotWithProduction'
    id: beginSwapSlotWithProduction
    parent: Sites
    name: >-
      beginSwapSlotWithProduction(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginSwapSlotWithProduction(resourceGroupName, name,
        slotSwapEntity, slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.beginSwapSlotWithProduction(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
      options.customHeaders, callback)
    children:
      - 'Sites#beginSwapSlotWithProduction~client'
      - 'Sites#beginSwapSlotWithProduction~callback'
      - 'Sites#beginSwapSlotWithProduction~options'
      - 'Sites#beginSwapSlotWithProduction~requestUrl'
      - 'Sites#beginSwapSlotWithProduction~requestUrl'
      - 'Sites#beginSwapSlotWithProduction~requestUrl'
      - 'Sites#beginSwapSlotWithProduction~requestUrl'
      - 'Sites#beginSwapSlotWithProduction~queryParameters'
      - 'Sites#beginSwapSlotWithProduction~requestUrl'
      - 'Sites#beginSwapSlotWithProduction~regex'
      - 'Sites#beginSwapSlotWithProduction~requestUrl'
      - 'Sites#beginSwapSlotWithProduction~httpRequest'
      - 'Sites#beginSwapSlotWithProduction~headerName'
      - 'Sites#beginSwapSlotWithProduction~requestContent'
      - 'Sites#beginSwapSlotWithProduction~requestModel'
      - 'Sites#beginSwapSlotWithProduction~requestModelMapper'
      - 'Sites#beginSwapSlotWithProduction~requestModel'
      - 'Sites#beginSwapSlotWithProduction~requestContent'
      - 'Sites#beginSwapSlotWithProduction~serializationError'
  - uid: 'Sites#swapSlotsSlot'
    id: swapSlotsSlot
    parent: Sites
    name: >-
      swapSlotsSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: slot
          type: string
          description: Name of source slot for the swap
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function swapSlotsSlot(resourceGroupName, name, slotSwapEntity,
        slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.swapSlotsSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#swapSlotsSlot~client'
      - 'Sites#swapSlotsSlot~callback'
      - 'Sites#swapSlotsSlot~options'
  - uid: 'Sites#beginSwapSlotsSlot'
    id: beginSwapSlotsSlot
    parent: Sites
    name: >-
      beginSwapSlotsSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: slot
          type: string
          description: Name of source slot for the swap
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginSwapSlotsSlot(resourceGroupName, name, slotSwapEntity,
        slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.beginSwapSlotsSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#beginSwapSlotsSlot~client'
      - 'Sites#beginSwapSlotsSlot~callback'
      - 'Sites#beginSwapSlotsSlot~options'
      - 'Sites#beginSwapSlotsSlot~requestUrl'
      - 'Sites#beginSwapSlotsSlot~requestUrl'
      - 'Sites#beginSwapSlotsSlot~requestUrl'
      - 'Sites#beginSwapSlotsSlot~requestUrl'
      - 'Sites#beginSwapSlotsSlot~requestUrl'
      - 'Sites#beginSwapSlotsSlot~queryParameters'
      - 'Sites#beginSwapSlotsSlot~requestUrl'
      - 'Sites#beginSwapSlotsSlot~regex'
      - 'Sites#beginSwapSlotsSlot~requestUrl'
      - 'Sites#beginSwapSlotsSlot~httpRequest'
      - 'Sites#beginSwapSlotsSlot~headerName'
      - 'Sites#beginSwapSlotsSlot~requestContent'
      - 'Sites#beginSwapSlotsSlot~requestModel'
      - 'Sites#beginSwapSlotsSlot~requestModelMapper'
      - 'Sites#beginSwapSlotsSlot~requestModel'
      - 'Sites#beginSwapSlotsSlot~requestContent'
      - 'Sites#beginSwapSlotsSlot~serializationError'
  - uid: 'Sites#getSlotsDifferencesFromProduction'
    id: getSlotsDifferencesFromProduction
    parent: Sites
    name: >-
      getSlotsDifferencesFromProduction(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SlotDifferenceCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSlotsDifferencesFromProduction(resourceGroupName, name,
        slotSwapEntity, slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSlotsDifferencesFromProduction(resourceGroupName, name,
      slotSwapEntity, slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSlotsDifferencesFromProduction~client'
      - 'Sites#getSlotsDifferencesFromProduction~callback'
      - 'Sites#getSlotsDifferencesFromProduction~options'
      - 'Sites#getSlotsDifferencesFromProduction~requestUrl'
      - 'Sites#getSlotsDifferencesFromProduction~requestUrl'
      - 'Sites#getSlotsDifferencesFromProduction~requestUrl'
      - 'Sites#getSlotsDifferencesFromProduction~requestUrl'
      - 'Sites#getSlotsDifferencesFromProduction~queryParameters'
      - 'Sites#getSlotsDifferencesFromProduction~requestUrl'
      - 'Sites#getSlotsDifferencesFromProduction~regex'
      - 'Sites#getSlotsDifferencesFromProduction~requestUrl'
      - 'Sites#getSlotsDifferencesFromProduction~httpRequest'
      - 'Sites#getSlotsDifferencesFromProduction~headerName'
      - 'Sites#getSlotsDifferencesFromProduction~requestContent'
      - 'Sites#getSlotsDifferencesFromProduction~requestModel'
      - 'Sites#getSlotsDifferencesFromProduction~requestModelMapper'
      - 'Sites#getSlotsDifferencesFromProduction~requestModel'
      - 'Sites#getSlotsDifferencesFromProduction~requestContent'
      - 'Sites#getSlotsDifferencesFromProduction~serializationError'
  - uid: 'Sites#getSlotsDifferencesSlot'
    id: getSlotsDifferencesSlot
    parent: Sites
    name: >-
      getSlotsDifferencesSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: slot
          type: string
          description: Name of the source slot
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SlotDifferenceCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSlotsDifferencesSlot(resourceGroupName, name,
        slotSwapEntity, slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSlotsDifferencesSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSlotsDifferencesSlot~client'
      - 'Sites#getSlotsDifferencesSlot~callback'
      - 'Sites#getSlotsDifferencesSlot~options'
      - 'Sites#getSlotsDifferencesSlot~requestUrl'
      - 'Sites#getSlotsDifferencesSlot~requestUrl'
      - 'Sites#getSlotsDifferencesSlot~requestUrl'
      - 'Sites#getSlotsDifferencesSlot~requestUrl'
      - 'Sites#getSlotsDifferencesSlot~requestUrl'
      - 'Sites#getSlotsDifferencesSlot~queryParameters'
      - 'Sites#getSlotsDifferencesSlot~requestUrl'
      - 'Sites#getSlotsDifferencesSlot~regex'
      - 'Sites#getSlotsDifferencesSlot~requestUrl'
      - 'Sites#getSlotsDifferencesSlot~httpRequest'
      - 'Sites#getSlotsDifferencesSlot~headerName'
      - 'Sites#getSlotsDifferencesSlot~requestContent'
      - 'Sites#getSlotsDifferencesSlot~requestModel'
      - 'Sites#getSlotsDifferencesSlot~requestModelMapper'
      - 'Sites#getSlotsDifferencesSlot~requestModel'
      - 'Sites#getSlotsDifferencesSlot~requestContent'
      - 'Sites#getSlotsDifferencesSlot~serializationError'
  - uid: 'Sites#applySlotConfigToProduction'
    id: applySlotConfigToProduction
    parent: Sites
    name: >-
      applySlotConfigToProduction(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname. Settings from that slot will be applied on the source slot"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function applySlotConfigToProduction(resourceGroupName, name,
        slotSwapEntity, slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.applySlotConfigToProduction(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, options,
      options.customHeaders, callback)
    children:
      - 'Sites#applySlotConfigToProduction~client'
      - 'Sites#applySlotConfigToProduction~callback'
      - 'Sites#applySlotConfigToProduction~options'
      - 'Sites#applySlotConfigToProduction~requestUrl'
      - 'Sites#applySlotConfigToProduction~requestUrl'
      - 'Sites#applySlotConfigToProduction~requestUrl'
      - 'Sites#applySlotConfigToProduction~requestUrl'
      - 'Sites#applySlotConfigToProduction~queryParameters'
      - 'Sites#applySlotConfigToProduction~requestUrl'
      - 'Sites#applySlotConfigToProduction~regex'
      - 'Sites#applySlotConfigToProduction~requestUrl'
      - 'Sites#applySlotConfigToProduction~httpRequest'
      - 'Sites#applySlotConfigToProduction~headerName'
      - 'Sites#applySlotConfigToProduction~requestContent'
      - 'Sites#applySlotConfigToProduction~requestModel'
      - 'Sites#applySlotConfigToProduction~requestModelMapper'
      - 'Sites#applySlotConfigToProduction~requestModel'
      - 'Sites#applySlotConfigToProduction~requestContent'
      - 'Sites#applySlotConfigToProduction~serializationError'
  - uid: 'Sites#applySlotConfigSlot'
    id: applySlotConfigSlot
    parent: Sites
    name: >-
      applySlotConfigSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotSwapEntity
          type: object
          description: "Request body that contains the target slot\rname. Settings from that slot will be applied on the source slot"
        - id: slotSwapEntity.targetSlot
          type: string
          description: "Set the destination deployment\rslot during swap operation"
        - id: slotSwapEntity.preserveVnet
          type: boolean
          description: "Get or set the flag\rindicating it should preserve VNet to the slot during swap"
        - id: slot
          type: string
          description: "Name of the source slot. Settings from the target slot\rwill be applied onto this slot"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function applySlotConfigSlot(resourceGroupName, name, slotSwapEntity,
        slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.applySlotConfigSlot(resourceGroupName, name, slotSwapEntity,
      slotSwapEntity.targetSlot, slotSwapEntity.preserveVnet, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#applySlotConfigSlot~client'
      - 'Sites#applySlotConfigSlot~callback'
      - 'Sites#applySlotConfigSlot~options'
      - 'Sites#applySlotConfigSlot~requestUrl'
      - 'Sites#applySlotConfigSlot~requestUrl'
      - 'Sites#applySlotConfigSlot~requestUrl'
      - 'Sites#applySlotConfigSlot~requestUrl'
      - 'Sites#applySlotConfigSlot~requestUrl'
      - 'Sites#applySlotConfigSlot~queryParameters'
      - 'Sites#applySlotConfigSlot~requestUrl'
      - 'Sites#applySlotConfigSlot~regex'
      - 'Sites#applySlotConfigSlot~requestUrl'
      - 'Sites#applySlotConfigSlot~httpRequest'
      - 'Sites#applySlotConfigSlot~headerName'
      - 'Sites#applySlotConfigSlot~requestContent'
      - 'Sites#applySlotConfigSlot~requestModel'
      - 'Sites#applySlotConfigSlot~requestModelMapper'
      - 'Sites#applySlotConfigSlot~requestModel'
      - 'Sites#applySlotConfigSlot~requestContent'
      - 'Sites#applySlotConfigSlot~serializationError'
  - uid: 'Sites#resetProductionSlotConfig'
    id: resetProductionSlotConfig
    parent: Sites
    name: >-
      resetProductionSlotConfig(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function resetProductionSlotConfig(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.resetProductionSlotConfig(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#resetProductionSlotConfig~client'
      - 'Sites#resetProductionSlotConfig~callback'
      - 'Sites#resetProductionSlotConfig~options'
      - 'Sites#resetProductionSlotConfig~requestUrl'
      - 'Sites#resetProductionSlotConfig~requestUrl'
      - 'Sites#resetProductionSlotConfig~requestUrl'
      - 'Sites#resetProductionSlotConfig~requestUrl'
      - 'Sites#resetProductionSlotConfig~queryParameters'
      - 'Sites#resetProductionSlotConfig~requestUrl'
      - 'Sites#resetProductionSlotConfig~regex'
      - 'Sites#resetProductionSlotConfig~requestUrl'
      - 'Sites#resetProductionSlotConfig~httpRequest'
      - 'Sites#resetProductionSlotConfig~headerName'
  - uid: 'Sites#resetSlotConfigSlot'
    id: resetSlotConfigSlot
    parent: Sites
    name: >-
      resetSlotConfigSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function resetSlotConfigSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.resetSlotConfigSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#resetSlotConfigSlot~client'
      - 'Sites#resetSlotConfigSlot~callback'
      - 'Sites#resetSlotConfigSlot~options'
      - 'Sites#resetSlotConfigSlot~requestUrl'
      - 'Sites#resetSlotConfigSlot~requestUrl'
      - 'Sites#resetSlotConfigSlot~requestUrl'
      - 'Sites#resetSlotConfigSlot~requestUrl'
      - 'Sites#resetSlotConfigSlot~requestUrl'
      - 'Sites#resetSlotConfigSlot~queryParameters'
      - 'Sites#resetSlotConfigSlot~requestUrl'
      - 'Sites#resetSlotConfigSlot~regex'
      - 'Sites#resetSlotConfigSlot~requestUrl'
      - 'Sites#resetSlotConfigSlot~httpRequest'
      - 'Sites#resetSlotConfigSlot~headerName'
  - uid: 'Sites#getSlotConfigNames'
    id: getSlotConfigNames
    parent: Sites
    name: >-
      getSlotConfigNames(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SlotConfigNamesResource} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSlotConfigNames(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSlotConfigNames(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSlotConfigNames~client'
      - 'Sites#getSlotConfigNames~callback'
      - 'Sites#getSlotConfigNames~options'
      - 'Sites#getSlotConfigNames~requestUrl'
      - 'Sites#getSlotConfigNames~requestUrl'
      - 'Sites#getSlotConfigNames~requestUrl'
      - 'Sites#getSlotConfigNames~requestUrl'
      - 'Sites#getSlotConfigNames~queryParameters'
      - 'Sites#getSlotConfigNames~requestUrl'
      - 'Sites#getSlotConfigNames~regex'
      - 'Sites#getSlotConfigNames~requestUrl'
      - 'Sites#getSlotConfigNames~httpRequest'
      - 'Sites#getSlotConfigNames~headerName'
  - uid: 'Sites#updateSlotConfigNames'
    id: updateSlotConfigNames
    parent: Sites
    name: >-
      updateSlotConfigNames(resourceGroupName, name, slotConfigNames,
      slotConfigNames.connectionStringNames, slotConfigNames.appSettingNames,
      slotConfigNames.id, slotConfigNames.name, slotConfigNames.kind,
      slotConfigNames.location, slotConfigNames.type, slotConfigNames.tags,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slotConfigNames
          type: object
          description: "Request body containing the names of\rapplication settings and connection strings"
        - id: slotConfigNames.connectionStringNames
          type: array
          description: "List of connection\rstring names"
        - id: slotConfigNames.appSettingNames
          type: array
          description: "List of application\rsettings names"
        - id: slotConfigNames.id
          type: string
          description: Resource Id
        - id: slotConfigNames.name
          type: string
          description: Resource Name
        - id: slotConfigNames.kind
          type: string
          description: Kind of resource
        - id: slotConfigNames.location
          type: string
          description: Resource Location
        - id: slotConfigNames.type
          type: string
          description: Resource type
        - id: slotConfigNames.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SlotConfigNamesResource} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSlotConfigNames(resourceGroupName, name, slotConfigNames,
        slotConfigNames.connectionStringNames, slotConfigNames.appSettingNames,
        slotConfigNames.id, slotConfigNames.name, slotConfigNames.kind,
        slotConfigNames.location, slotConfigNames.type, slotConfigNames.tags,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSlotConfigNames(resourceGroupName, name, slotConfigNames,
      slotConfigNames.connectionStringNames, slotConfigNames.appSettingNames,
      slotConfigNames.id, slotConfigNames.name, slotConfigNames.kind,
      slotConfigNames.location, slotConfigNames.type, slotConfigNames.tags,
      options, options.customHeaders, callback)
    children:
      - 'Sites#updateSlotConfigNames~client'
      - 'Sites#updateSlotConfigNames~callback'
      - 'Sites#updateSlotConfigNames~options'
      - 'Sites#updateSlotConfigNames~requestUrl'
      - 'Sites#updateSlotConfigNames~requestUrl'
      - 'Sites#updateSlotConfigNames~requestUrl'
      - 'Sites#updateSlotConfigNames~requestUrl'
      - 'Sites#updateSlotConfigNames~queryParameters'
      - 'Sites#updateSlotConfigNames~requestUrl'
      - 'Sites#updateSlotConfigNames~regex'
      - 'Sites#updateSlotConfigNames~requestUrl'
      - 'Sites#updateSlotConfigNames~httpRequest'
      - 'Sites#updateSlotConfigNames~headerName'
      - 'Sites#updateSlotConfigNames~requestContent'
      - 'Sites#updateSlotConfigNames~requestModel'
      - 'Sites#updateSlotConfigNames~requestModelMapper'
      - 'Sites#updateSlotConfigNames~requestModel'
      - 'Sites#updateSlotConfigNames~requestContent'
      - 'Sites#updateSlotConfigNames~serializationError'
  - uid: 'Sites#getSiteSlots'
    id: getSiteSlots
    parent: Sites
    name: >-
      getSiteSlots(resourceGroupName, name, options,
      options.propertiesToInclude, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.propertiesToInclude
          type: string
          description: "List of app properties to\rinclude in the response"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteSlots(resourceGroupName, name, options,
        options.propertiesToInclude, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteSlots(resourceGroupName, name, options,
      options.propertiesToInclude, options.customHeaders, callback)
    children:
      - 'Sites#getSiteSlots~client'
      - 'Sites#getSiteSlots~callback'
      - 'Sites#getSiteSlots~options'
      - 'Sites#getSiteSlots~propertiesToInclude'
      - 'Sites#getSiteSlots~requestUrl'
      - 'Sites#getSiteSlots~requestUrl'
      - 'Sites#getSiteSlots~requestUrl'
      - 'Sites#getSiteSlots~requestUrl'
      - 'Sites#getSiteSlots~queryParameters'
      - 'Sites#getSiteSlots~requestUrl'
      - 'Sites#getSiteSlots~regex'
      - 'Sites#getSiteSlots~requestUrl'
      - 'Sites#getSiteSlots~httpRequest'
      - 'Sites#getSiteSlots~headerName'
  - uid: 'Sites#getSites'
    id: getSites
    parent: Sites
    name: >-
      getSites(resourceGroupName, options, options.propertiesToInclude,
      options.includeSiteTypes, options.includeSlots, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.propertiesToInclude
          type: string
          description: "Additional web app properties\rincluded in the response"
        - id: options.includeSiteTypes
          type: string
          description: "Types of apps included in the\rresponse"
        - id: options.includeSlots
          type: boolean
          description: "Whether or not to include\rdeployments slots in results"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSites(resourceGroupName, options,
        options.propertiesToInclude, options.includeSiteTypes,
        options.includeSlots, options.customHeaders, callback);
    fullName: >-
      Sites.getSites(resourceGroupName, options, options.propertiesToInclude,
      options.includeSiteTypes, options.includeSlots, options.customHeaders,
      callback)
    children:
      - 'Sites#getSites~client'
      - 'Sites#getSites~callback'
      - 'Sites#getSites~options'
      - 'Sites#getSites~propertiesToInclude'
      - 'Sites#getSites~includeSiteTypes'
      - 'Sites#getSites~includeSlots'
      - 'Sites#getSites~requestUrl'
      - 'Sites#getSites~requestUrl'
      - 'Sites#getSites~requestUrl'
      - 'Sites#getSites~queryParameters'
      - 'Sites#getSites~requestUrl'
      - 'Sites#getSites~regex'
      - 'Sites#getSites~requestUrl'
      - 'Sites#getSites~httpRequest'
      - 'Sites#getSites~headerName'
  - uid: 'Sites#getSite'
    id: getSite
    parent: Sites
    name: >-
      getSite(resourceGroupName, name, options, options.propertiesToInclude,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.propertiesToInclude
          type: string
          description: "Additional web app properties\rincluded in the response"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSite(resourceGroupName, name, options,
        options.propertiesToInclude, options.customHeaders, callback);
    fullName: >-
      Sites.getSite(resourceGroupName, name, options,
      options.propertiesToInclude, options.customHeaders, callback)
    children:
      - 'Sites#getSite~client'
      - 'Sites#getSite~callback'
      - 'Sites#getSite~options'
      - 'Sites#getSite~propertiesToInclude'
      - 'Sites#getSite~requestUrl'
      - 'Sites#getSite~requestUrl'
      - 'Sites#getSite~requestUrl'
      - 'Sites#getSite~requestUrl'
      - 'Sites#getSite~queryParameters'
      - 'Sites#getSite~requestUrl'
      - 'Sites#getSite~regex'
      - 'Sites#getSite~requestUrl'
      - 'Sites#getSite~httpRequest'
      - 'Sites#getSite~headerName'
  - uid: 'Sites#createOrUpdateSite'
    id: createOrUpdateSite
    parent: Sites
    name: >-
      createOrUpdateSite(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group
        - id: name
          type: string
          description: Name of the web app
        - id: siteEnvelope
          type: object
          description: Details of web app if it exists already
        - id: siteEnvelope.siteName
          type: string
          description: Name of web app
        - id: siteEnvelope.enabled
          type: boolean
          description: "True if the site is enabled;\rotherwise, false. Setting this  value to false disables the site (takes\rthe site off line)."
        - id: siteEnvelope.hostNameSslStates
          type: array
          description: "Hostname SSL states are\rused to manage the SSL bindings for site's hostnames."
        - id: siteEnvelope.serverFarmId
          type: string
        - id: siteEnvelope.siteConfig
          type: object
          description: Configuration of web app
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteEnvelope.siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type: string
          description: "Net Framework\rVersion"
        - id: siteEnvelope.siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteEnvelope.siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type: boolean
          description: "Enable\rrequest tracing"
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type: date
          description: Request tracing expiration time
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote\rDebugging Enabled"
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type: string
          description: "Remote\rDebugging Version"
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type: boolean
          description: "HTTP logging\rEnabled"
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs\rDirectory size limit"
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: Detailed error logging enabled
        - id: siteEnvelope.siteConfig.publishingUsername
          type: string
          description: "Publishing\ruser name"
        - id: siteEnvelope.siteConfig.publishingPassword
          type: string
          description: "Publishing\rpassword"
        - id: siteEnvelope.siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteEnvelope.siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteEnvelope.siteConfig.connectionStrings
          type: array
          description: "Connection\rstrings"
        - id: siteEnvelope.siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteEnvelope.siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteEnvelope.siteConfig.scmType
          type: string
          description: SCM type
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit\rworker process"
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type: boolean
          description: "Web socket\renabled."
        - id: siteEnvelope.siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteEnvelope.siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteEnvelope.siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type: string
          description: "Java\rcontainer version"
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type: string
          description: "Managed\rpipeline mode. Possible values include: 'Integrated', 'Classic'"
        - id: siteEnvelope.siteConfig.virtualApplications
          type: array
          description: "Virtual\rapplications"
        - id: siteEnvelope.siteConfig.loadBalancing
          type: string
          description: "Site load\rbalancing. Possible values include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteEnvelope.siteConfig.experiments
          type: object
          description: "This is work around\rfor polymophic types"
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteEnvelope.siteConfig.limits
          type: object
          description: Site limits
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum\rallowed CPU usage percentage"
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum\rallowed memory usage in MB"
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum\rallowed disk size usage in MB"
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteEnvelope.siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers -\rConditions that describe when to execute the auto-heal actions"
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type: object
          description: Requests - Defines a rule based on total requests
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: StatusCodes - Defines a rule based on status codes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: "SlowRequests\r- Defines a rule based on request execution time"
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type: object
          description: "Actions -\rActions to be executed when a rule is triggered"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType - predefined action to be taken. Possible values include:\r'Recycle', 'LogEvent', 'CustomAction'"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type: object
          description: "CustomAction\r- custom action to be taken"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteEnvelope.siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteEnvelope.siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteEnvelope.siteConfig.cors
          type: object
          description: "Cross-Origin Resource\rSharing (CORS) settings."
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets\rthe list of origins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteEnvelope.siteConfig.apiDefinition
          type: object
          description: "Information about\rthe formal API definition for the web app."
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type: string
          description: "The URL of the\rAPI definition."
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type: string
          description: "Auto swap slot\rname"
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type: boolean
          description: "Local mysql\renabled"
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type: array
          description: "Ip Security\rrestrictions"
        - id: siteEnvelope.siteConfig.id
          type: string
          description: Resource Id
        - id: siteEnvelope.siteConfig.name
          type: string
          description: Resource Name
        - id: siteEnvelope.siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.siteConfig.location
          type: string
          description: Resource Location
        - id: siteEnvelope.siteConfig.type
          type: string
          description: Resource type
        - id: siteEnvelope.siteConfig.tags
          type: object
          description: Resource tags
        - id: siteEnvelope.scmSiteAlsoStopped
          type: boolean
          description: "If set indicates whether\rto stop SCM (KUDU) site when the web app is stopped. Default is false."
        - id: siteEnvelope.hostingEnvironmentProfile
          type: object
          description: "Specification for\rthe hosting environment (App Service Environment) to use for the web app"
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type: string
          description: "Resource id of\rthe hostingEnvironment (App Service Environment)"
        - id: siteEnvelope.hostingEnvironmentProfile.name
          type: string
          description: "Name of the\rhostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.hostingEnvironmentProfile.type
          type: string
          description: "Resource type\rof the hostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.microService
          type: string
        - id: siteEnvelope.gatewaySiteName
          type: string
          description: "Name of gateway app\rassociated with web app"
        - id: siteEnvelope.clientAffinityEnabled
          type: boolean
          description: "Specifies if the\rclient affinity is enabled when load balancing http request for multiple\rinstances of the web app"
        - id: siteEnvelope.clientCertEnabled
          type: boolean
          description: "Specifies if the client\rcertificate is enabled for the web app"
        - id: siteEnvelope.hostNamesDisabled
          type: boolean
          description: "Specifies if the public\rhostnames are disabled the web app.\rIf set to true the app is only accessible via API Management\rprocess"
        - id: siteEnvelope.containerSize
          type: number
          description: Size of a function container
        - id: siteEnvelope.maxNumberOfWorkers
          type: number
          description: "Maximum number of workers\rThis only applies to function container"
        - id: siteEnvelope.cloningInfo
          type: object
          description: "This is only valid for web app\rcreation. If specified, web app is cloned from\ra source web app"
        - id: siteEnvelope.cloningInfo.correlationId
          type: string
          description: "Correlation Id of\rcloning operation. This id ties multiple cloning operations\rtogether to use the same snapshot"
        - id: siteEnvelope.cloningInfo.overwrite
          type: boolean
          description: "Overwrite destination\rweb app"
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type: boolean
          description: "If true,\rclone custom hostnames from source web app"
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type: boolean
          description: "Clone source\rcontrol from source web app"
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type: string
          description: "ARM resource id\rof the source web app. Web app resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}\rfor production slots and\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}\rfor other slots"
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type: string
          description: "Hosting\renvironment"
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type: object
          description: "Application\rsettings overrides for cloned web app. If specified these settings will\roverride the settings cloned\rfrom source web app. If not specified, application settings\rfrom source web app are retained."
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type: boolean
          description: "If\rspecified configure load balancing for source and clone site"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type: string
          description: "ARM\rresource id of the traffic manager profile to use if it exists. Traffic\rmanager resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type: string
          description: "Name\rof traffic manager profile to create. This is only needed if traffic\rmanager profile does not already exist"
        - id: siteEnvelope.id
          type: string
          description: Resource Id
        - id: siteEnvelope.name
          type: string
          description: Resource Name
        - id: siteEnvelope.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.location
          type: string
          description: Resource Location
        - id: siteEnvelope.type
          type: string
          description: Resource type
        - id: siteEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.skipDnsRegistration
          type: string
          description: "If true web app hostname is\rnot registered with DNS on creation. This parameter is\ronly used for app creation"
        - id: options.skipCustomDomainVerification
          type: string
          description: "If true, custom (non\r*.azurewebsites.net) domains associated with web app are not verified."
        - id: options.forceDnsRegistration
          type: string
          description: "If true, web app hostname is\rforce registered with DNS"
        - id: options.ttlInSeconds
          type: string
          description: "Time to live in seconds for web\rapp's default domain name"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSite(resourceGroupName, name, siteEnvelope,
        siteEnvelope.siteName, siteEnvelope.enabled,
        siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
        siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
        siteEnvelope.siteConfig.defaultDocuments,
        siteEnvelope.siteConfig.netFrameworkVersion,
        siteEnvelope.siteConfig.phpVersion,
        siteEnvelope.siteConfig.pythonVersion,
        siteEnvelope.siteConfig.requestTracingEnabled,
        siteEnvelope.siteConfig.requestTracingExpirationTime,
        siteEnvelope.siteConfig.remoteDebuggingEnabled,
        siteEnvelope.siteConfig.remoteDebuggingVersion,
        siteEnvelope.siteConfig.httpLoggingEnabled,
        siteEnvelope.siteConfig.logsDirectorySizeLimit,
        siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
        siteEnvelope.siteConfig.publishingUsername,
        siteEnvelope.siteConfig.publishingPassword,
        siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
        siteEnvelope.siteConfig.connectionStrings,
        siteEnvelope.siteConfig.handlerMappings,
        siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
        siteEnvelope.siteConfig.use32BitWorkerProcess,
        siteEnvelope.siteConfig.webSocketsEnabled,
        siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
        siteEnvelope.siteConfig.javaContainer,
        siteEnvelope.siteConfig.javaContainerVersion,
        siteEnvelope.siteConfig.managedPipelineMode,
        siteEnvelope.siteConfig.virtualApplications,
        siteEnvelope.siteConfig.loadBalancing,
        siteEnvelope.siteConfig.experiments,
        siteEnvelope.siteConfig.experiments.rampUpRules,
        siteEnvelope.siteConfig.limits,
        siteEnvelope.siteConfig.limits.maxPercentageCpu,
        siteEnvelope.siteConfig.limits.maxMemoryInMb,
        siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
        siteEnvelope.siteConfig.autoHealEnabled,
        siteEnvelope.siteConfig.autoHealRules,
        siteEnvelope.siteConfig.autoHealRules.triggers,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.actions,
        siteEnvelope.siteConfig.autoHealRules.actions.actionType,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
        siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteEnvelope.siteConfig.tracingOptions,
        siteEnvelope.siteConfig.vnetName, siteEnvelope.siteConfig.cors,
        siteEnvelope.siteConfig.cors.allowedOrigins,
        siteEnvelope.siteConfig.apiDefinition,
        siteEnvelope.siteConfig.apiDefinition.url,
        siteEnvelope.siteConfig.autoSwapSlotName,
        siteEnvelope.siteConfig.localMySqlEnabled,
        siteEnvelope.siteConfig.ipSecurityRestrictions,
        siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
        siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
        siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
        siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
        siteEnvelope.hostingEnvironmentProfile.id,
        siteEnvelope.hostingEnvironmentProfile.name,
        siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
        siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
        siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
        siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
        siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
        siteEnvelope.cloningInfo.overwrite,
        siteEnvelope.cloningInfo.cloneCustomHostNames,
        siteEnvelope.cloningInfo.cloneSourceControl,
        siteEnvelope.cloningInfo.sourceWebAppId,
        siteEnvelope.cloningInfo.hostingEnvironment,
        siteEnvelope.cloningInfo.appSettingsOverrides,
        siteEnvelope.cloningInfo.configureLoadBalancing,
        siteEnvelope.cloningInfo.trafficManagerProfileId,
        siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
        siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
        siteEnvelope.type, siteEnvelope.tags, options,
        options.skipDnsRegistration, options.skipCustomDomainVerification,
        options.forceDnsRegistration, options.ttlInSeconds,
        options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSite(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    children:
      - 'Sites#createOrUpdateSite~client'
      - 'Sites#createOrUpdateSite~callback'
      - 'Sites#createOrUpdateSite~options'
  - uid: 'Sites#beginCreateOrUpdateSite'
    id: beginCreateOrUpdateSite
    parent: Sites
    name: >-
      beginCreateOrUpdateSite(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group
        - id: name
          type: string
          description: Name of the web app
        - id: siteEnvelope
          type: object
          description: Details of web app if it exists already
        - id: siteEnvelope.siteName
          type: string
          description: Name of web app
        - id: siteEnvelope.enabled
          type: boolean
          description: "True if the site is enabled;\rotherwise, false. Setting this  value to false disables the site (takes\rthe site off line)."
        - id: siteEnvelope.hostNameSslStates
          type: array
          description: "Hostname SSL states are\rused to manage the SSL bindings for site's hostnames."
        - id: siteEnvelope.serverFarmId
          type: string
        - id: siteEnvelope.siteConfig
          type: object
          description: Configuration of web app
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteEnvelope.siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type: string
          description: "Net Framework\rVersion"
        - id: siteEnvelope.siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteEnvelope.siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type: boolean
          description: "Enable\rrequest tracing"
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type: date
          description: Request tracing expiration time
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote\rDebugging Enabled"
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type: string
          description: "Remote\rDebugging Version"
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type: boolean
          description: "HTTP logging\rEnabled"
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs\rDirectory size limit"
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: Detailed error logging enabled
        - id: siteEnvelope.siteConfig.publishingUsername
          type: string
          description: "Publishing\ruser name"
        - id: siteEnvelope.siteConfig.publishingPassword
          type: string
          description: "Publishing\rpassword"
        - id: siteEnvelope.siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteEnvelope.siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteEnvelope.siteConfig.connectionStrings
          type: array
          description: "Connection\rstrings"
        - id: siteEnvelope.siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteEnvelope.siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteEnvelope.siteConfig.scmType
          type: string
          description: SCM type
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit\rworker process"
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type: boolean
          description: "Web socket\renabled."
        - id: siteEnvelope.siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteEnvelope.siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteEnvelope.siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type: string
          description: "Java\rcontainer version"
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type: string
          description: "Managed\rpipeline mode. Possible values include: 'Integrated', 'Classic'"
        - id: siteEnvelope.siteConfig.virtualApplications
          type: array
          description: "Virtual\rapplications"
        - id: siteEnvelope.siteConfig.loadBalancing
          type: string
          description: "Site load\rbalancing. Possible values include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteEnvelope.siteConfig.experiments
          type: object
          description: "This is work around\rfor polymophic types"
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteEnvelope.siteConfig.limits
          type: object
          description: Site limits
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum\rallowed CPU usage percentage"
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum\rallowed memory usage in MB"
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum\rallowed disk size usage in MB"
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteEnvelope.siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers -\rConditions that describe when to execute the auto-heal actions"
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type: object
          description: Requests - Defines a rule based on total requests
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: StatusCodes - Defines a rule based on status codes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: "SlowRequests\r- Defines a rule based on request execution time"
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type: object
          description: "Actions -\rActions to be executed when a rule is triggered"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType - predefined action to be taken. Possible values include:\r'Recycle', 'LogEvent', 'CustomAction'"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type: object
          description: "CustomAction\r- custom action to be taken"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteEnvelope.siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteEnvelope.siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteEnvelope.siteConfig.cors
          type: object
          description: "Cross-Origin Resource\rSharing (CORS) settings."
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets\rthe list of origins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteEnvelope.siteConfig.apiDefinition
          type: object
          description: "Information about\rthe formal API definition for the web app."
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type: string
          description: "The URL of the\rAPI definition."
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type: string
          description: "Auto swap slot\rname"
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type: boolean
          description: "Local mysql\renabled"
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type: array
          description: "Ip Security\rrestrictions"
        - id: siteEnvelope.siteConfig.id
          type: string
          description: Resource Id
        - id: siteEnvelope.siteConfig.name
          type: string
          description: Resource Name
        - id: siteEnvelope.siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.siteConfig.location
          type: string
          description: Resource Location
        - id: siteEnvelope.siteConfig.type
          type: string
          description: Resource type
        - id: siteEnvelope.siteConfig.tags
          type: object
          description: Resource tags
        - id: siteEnvelope.scmSiteAlsoStopped
          type: boolean
          description: "If set indicates whether\rto stop SCM (KUDU) site when the web app is stopped. Default is false."
        - id: siteEnvelope.hostingEnvironmentProfile
          type: object
          description: "Specification for\rthe hosting environment (App Service Environment) to use for the web app"
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type: string
          description: "Resource id of\rthe hostingEnvironment (App Service Environment)"
        - id: siteEnvelope.hostingEnvironmentProfile.name
          type: string
          description: "Name of the\rhostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.hostingEnvironmentProfile.type
          type: string
          description: "Resource type\rof the hostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.microService
          type: string
        - id: siteEnvelope.gatewaySiteName
          type: string
          description: "Name of gateway app\rassociated with web app"
        - id: siteEnvelope.clientAffinityEnabled
          type: boolean
          description: "Specifies if the\rclient affinity is enabled when load balancing http request for multiple\rinstances of the web app"
        - id: siteEnvelope.clientCertEnabled
          type: boolean
          description: "Specifies if the client\rcertificate is enabled for the web app"
        - id: siteEnvelope.hostNamesDisabled
          type: boolean
          description: "Specifies if the public\rhostnames are disabled the web app.\rIf set to true the app is only accessible via API Management\rprocess"
        - id: siteEnvelope.containerSize
          type: number
          description: Size of a function container
        - id: siteEnvelope.maxNumberOfWorkers
          type: number
          description: "Maximum number of workers\rThis only applies to function container"
        - id: siteEnvelope.cloningInfo
          type: object
          description: "This is only valid for web app\rcreation. If specified, web app is cloned from\ra source web app"
        - id: siteEnvelope.cloningInfo.correlationId
          type: string
          description: "Correlation Id of\rcloning operation. This id ties multiple cloning operations\rtogether to use the same snapshot"
        - id: siteEnvelope.cloningInfo.overwrite
          type: boolean
          description: "Overwrite destination\rweb app"
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type: boolean
          description: "If true,\rclone custom hostnames from source web app"
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type: boolean
          description: "Clone source\rcontrol from source web app"
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type: string
          description: "ARM resource id\rof the source web app. Web app resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}\rfor production slots and\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}\rfor other slots"
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type: string
          description: "Hosting\renvironment"
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type: object
          description: "Application\rsettings overrides for cloned web app. If specified these settings will\roverride the settings cloned\rfrom source web app. If not specified, application settings\rfrom source web app are retained."
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type: boolean
          description: "If\rspecified configure load balancing for source and clone site"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type: string
          description: "ARM\rresource id of the traffic manager profile to use if it exists. Traffic\rmanager resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type: string
          description: "Name\rof traffic manager profile to create. This is only needed if traffic\rmanager profile does not already exist"
        - id: siteEnvelope.id
          type: string
          description: Resource Id
        - id: siteEnvelope.name
          type: string
          description: Resource Name
        - id: siteEnvelope.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.location
          type: string
          description: Resource Location
        - id: siteEnvelope.type
          type: string
          description: Resource type
        - id: siteEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.skipDnsRegistration
          type: string
          description: "If true web app hostname is\rnot registered with DNS on creation. This parameter is\ronly used for app creation"
        - id: options.skipCustomDomainVerification
          type: string
          description: "If true, custom (non\r*.azurewebsites.net) domains associated with web app are not verified."
        - id: options.forceDnsRegistration
          type: string
          description: "If true, web app hostname is\rforce registered with DNS"
        - id: options.ttlInSeconds
          type: string
          description: "Time to live in seconds for web\rapp's default domain name"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdateSite(resourceGroupName, name, siteEnvelope,
        siteEnvelope.siteName, siteEnvelope.enabled,
        siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
        siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
        siteEnvelope.siteConfig.defaultDocuments,
        siteEnvelope.siteConfig.netFrameworkVersion,
        siteEnvelope.siteConfig.phpVersion,
        siteEnvelope.siteConfig.pythonVersion,
        siteEnvelope.siteConfig.requestTracingEnabled,
        siteEnvelope.siteConfig.requestTracingExpirationTime,
        siteEnvelope.siteConfig.remoteDebuggingEnabled,
        siteEnvelope.siteConfig.remoteDebuggingVersion,
        siteEnvelope.siteConfig.httpLoggingEnabled,
        siteEnvelope.siteConfig.logsDirectorySizeLimit,
        siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
        siteEnvelope.siteConfig.publishingUsername,
        siteEnvelope.siteConfig.publishingPassword,
        siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
        siteEnvelope.siteConfig.connectionStrings,
        siteEnvelope.siteConfig.handlerMappings,
        siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
        siteEnvelope.siteConfig.use32BitWorkerProcess,
        siteEnvelope.siteConfig.webSocketsEnabled,
        siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
        siteEnvelope.siteConfig.javaContainer,
        siteEnvelope.siteConfig.javaContainerVersion,
        siteEnvelope.siteConfig.managedPipelineMode,
        siteEnvelope.siteConfig.virtualApplications,
        siteEnvelope.siteConfig.loadBalancing,
        siteEnvelope.siteConfig.experiments,
        siteEnvelope.siteConfig.experiments.rampUpRules,
        siteEnvelope.siteConfig.limits,
        siteEnvelope.siteConfig.limits.maxPercentageCpu,
        siteEnvelope.siteConfig.limits.maxMemoryInMb,
        siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
        siteEnvelope.siteConfig.autoHealEnabled,
        siteEnvelope.siteConfig.autoHealRules,
        siteEnvelope.siteConfig.autoHealRules.triggers,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.actions,
        siteEnvelope.siteConfig.autoHealRules.actions.actionType,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
        siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteEnvelope.siteConfig.tracingOptions,
        siteEnvelope.siteConfig.vnetName, siteEnvelope.siteConfig.cors,
        siteEnvelope.siteConfig.cors.allowedOrigins,
        siteEnvelope.siteConfig.apiDefinition,
        siteEnvelope.siteConfig.apiDefinition.url,
        siteEnvelope.siteConfig.autoSwapSlotName,
        siteEnvelope.siteConfig.localMySqlEnabled,
        siteEnvelope.siteConfig.ipSecurityRestrictions,
        siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
        siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
        siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
        siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
        siteEnvelope.hostingEnvironmentProfile.id,
        siteEnvelope.hostingEnvironmentProfile.name,
        siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
        siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
        siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
        siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
        siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
        siteEnvelope.cloningInfo.overwrite,
        siteEnvelope.cloningInfo.cloneCustomHostNames,
        siteEnvelope.cloningInfo.cloneSourceControl,
        siteEnvelope.cloningInfo.sourceWebAppId,
        siteEnvelope.cloningInfo.hostingEnvironment,
        siteEnvelope.cloningInfo.appSettingsOverrides,
        siteEnvelope.cloningInfo.configureLoadBalancing,
        siteEnvelope.cloningInfo.trafficManagerProfileId,
        siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
        siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
        siteEnvelope.type, siteEnvelope.tags, options,
        options.skipDnsRegistration, options.skipCustomDomainVerification,
        options.forceDnsRegistration, options.ttlInSeconds,
        options.customHeaders, callback);
    fullName: >-
      Sites.beginCreateOrUpdateSite(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    children:
      - 'Sites#beginCreateOrUpdateSite~client'
      - 'Sites#beginCreateOrUpdateSite~callback'
      - 'Sites#beginCreateOrUpdateSite~options'
      - 'Sites#beginCreateOrUpdateSite~skipDnsRegistration'
      - 'Sites#beginCreateOrUpdateSite~skipCustomDomainVerification'
      - 'Sites#beginCreateOrUpdateSite~forceDnsRegistration'
      - 'Sites#beginCreateOrUpdateSite~ttlInSeconds'
      - 'Sites#beginCreateOrUpdateSite~requestUrl'
      - 'Sites#beginCreateOrUpdateSite~requestUrl'
      - 'Sites#beginCreateOrUpdateSite~requestUrl'
      - 'Sites#beginCreateOrUpdateSite~requestUrl'
      - 'Sites#beginCreateOrUpdateSite~queryParameters'
      - 'Sites#beginCreateOrUpdateSite~requestUrl'
      - 'Sites#beginCreateOrUpdateSite~regex'
      - 'Sites#beginCreateOrUpdateSite~requestUrl'
      - 'Sites#beginCreateOrUpdateSite~httpRequest'
      - 'Sites#beginCreateOrUpdateSite~headerName'
      - 'Sites#beginCreateOrUpdateSite~requestContent'
      - 'Sites#beginCreateOrUpdateSite~requestModel'
      - 'Sites#beginCreateOrUpdateSite~requestModelMapper'
      - 'Sites#beginCreateOrUpdateSite~requestModel'
      - 'Sites#beginCreateOrUpdateSite~requestContent'
      - 'Sites#beginCreateOrUpdateSite~serializationError'
  - uid: 'Sites#deleteSite'
    id: deleteSite
    parent: Sites
    name: >-
      deleteSite(resourceGroupName, name, options, options.deleteMetrics,
      options.deleteEmptyServerFarm, options.skipDnsRegistration,
      options.deleteAllSlots, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.deleteMetrics
          type: string
          description: "If true, web app metrics are also\rdeleted"
        - id: options.deleteEmptyServerFarm
          type: string
          description: "If true and App Service\rPlan is empty after web app deletion, App Service Plan is also deleted"
        - id: options.skipDnsRegistration
          type: string
          description: "If true, DNS registration is\rskipped"
        - id: options.deleteAllSlots
          type: string
          description: "If true, all slots associated with\rweb app are also deleted"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSite(resourceGroupName, name, options,
        options.deleteMetrics, options.deleteEmptyServerFarm,
        options.skipDnsRegistration, options.deleteAllSlots,
        options.customHeaders, callback);
    fullName: >-
      Sites.deleteSite(resourceGroupName, name, options, options.deleteMetrics,
      options.deleteEmptyServerFarm, options.skipDnsRegistration,
      options.deleteAllSlots, options.customHeaders, callback)
    children:
      - 'Sites#deleteSite~client'
      - 'Sites#deleteSite~callback'
      - 'Sites#deleteSite~options'
      - 'Sites#deleteSite~deleteMetrics'
      - 'Sites#deleteSite~deleteEmptyServerFarm'
      - 'Sites#deleteSite~skipDnsRegistration'
      - 'Sites#deleteSite~deleteAllSlots'
      - 'Sites#deleteSite~requestUrl'
      - 'Sites#deleteSite~requestUrl'
      - 'Sites#deleteSite~requestUrl'
      - 'Sites#deleteSite~requestUrl'
      - 'Sites#deleteSite~queryParameters'
      - 'Sites#deleteSite~requestUrl'
      - 'Sites#deleteSite~regex'
      - 'Sites#deleteSite~requestUrl'
      - 'Sites#deleteSite~httpRequest'
      - 'Sites#deleteSite~headerName'
  - uid: 'Sites#getSiteSlot'
    id: getSiteSlot
    parent: Sites
    name: >-
      getSiteSlot(resourceGroupName, name, slot, options,
      options.propertiesToInclude, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.propertiesToInclude
          type: string
          description: "Additional web app properties\rincluded in the response"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteSlot(resourceGroupName, name, slot, options,
        options.propertiesToInclude, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteSlot(resourceGroupName, name, slot, options,
      options.propertiesToInclude, options.customHeaders, callback)
    children:
      - 'Sites#getSiteSlot~client'
      - 'Sites#getSiteSlot~callback'
      - 'Sites#getSiteSlot~options'
      - 'Sites#getSiteSlot~propertiesToInclude'
      - 'Sites#getSiteSlot~requestUrl'
      - 'Sites#getSiteSlot~requestUrl'
      - 'Sites#getSiteSlot~requestUrl'
      - 'Sites#getSiteSlot~requestUrl'
      - 'Sites#getSiteSlot~requestUrl'
      - 'Sites#getSiteSlot~queryParameters'
      - 'Sites#getSiteSlot~requestUrl'
      - 'Sites#getSiteSlot~regex'
      - 'Sites#getSiteSlot~requestUrl'
      - 'Sites#getSiteSlot~httpRequest'
      - 'Sites#getSiteSlot~headerName'
  - uid: 'Sites#createOrUpdateSiteSlot'
    id: createOrUpdateSiteSlot
    parent: Sites
    name: >-
      createOrUpdateSiteSlot(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, slot, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group
        - id: name
          type: string
          description: Name of the web app
        - id: siteEnvelope
          type: object
          description: Details of web app if it exists already
        - id: siteEnvelope.siteName
          type: string
          description: Name of web app
        - id: siteEnvelope.enabled
          type: boolean
          description: "True if the site is enabled;\rotherwise, false. Setting this  value to false disables the site (takes\rthe site off line)."
        - id: siteEnvelope.hostNameSslStates
          type: array
          description: "Hostname SSL states are\rused to manage the SSL bindings for site's hostnames."
        - id: siteEnvelope.serverFarmId
          type: string
        - id: siteEnvelope.siteConfig
          type: object
          description: Configuration of web app
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteEnvelope.siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type: string
          description: "Net Framework\rVersion"
        - id: siteEnvelope.siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteEnvelope.siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type: boolean
          description: "Enable\rrequest tracing"
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type: date
          description: Request tracing expiration time
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote\rDebugging Enabled"
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type: string
          description: "Remote\rDebugging Version"
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type: boolean
          description: "HTTP logging\rEnabled"
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs\rDirectory size limit"
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: Detailed error logging enabled
        - id: siteEnvelope.siteConfig.publishingUsername
          type: string
          description: "Publishing\ruser name"
        - id: siteEnvelope.siteConfig.publishingPassword
          type: string
          description: "Publishing\rpassword"
        - id: siteEnvelope.siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteEnvelope.siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteEnvelope.siteConfig.connectionStrings
          type: array
          description: "Connection\rstrings"
        - id: siteEnvelope.siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteEnvelope.siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteEnvelope.siteConfig.scmType
          type: string
          description: SCM type
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit\rworker process"
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type: boolean
          description: "Web socket\renabled."
        - id: siteEnvelope.siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteEnvelope.siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteEnvelope.siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type: string
          description: "Java\rcontainer version"
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type: string
          description: "Managed\rpipeline mode. Possible values include: 'Integrated', 'Classic'"
        - id: siteEnvelope.siteConfig.virtualApplications
          type: array
          description: "Virtual\rapplications"
        - id: siteEnvelope.siteConfig.loadBalancing
          type: string
          description: "Site load\rbalancing. Possible values include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteEnvelope.siteConfig.experiments
          type: object
          description: "This is work around\rfor polymophic types"
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteEnvelope.siteConfig.limits
          type: object
          description: Site limits
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum\rallowed CPU usage percentage"
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum\rallowed memory usage in MB"
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum\rallowed disk size usage in MB"
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteEnvelope.siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers -\rConditions that describe when to execute the auto-heal actions"
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type: object
          description: Requests - Defines a rule based on total requests
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: StatusCodes - Defines a rule based on status codes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: "SlowRequests\r- Defines a rule based on request execution time"
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type: object
          description: "Actions -\rActions to be executed when a rule is triggered"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType - predefined action to be taken. Possible values include:\r'Recycle', 'LogEvent', 'CustomAction'"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type: object
          description: "CustomAction\r- custom action to be taken"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteEnvelope.siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteEnvelope.siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteEnvelope.siteConfig.cors
          type: object
          description: "Cross-Origin Resource\rSharing (CORS) settings."
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets\rthe list of origins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteEnvelope.siteConfig.apiDefinition
          type: object
          description: "Information about\rthe formal API definition for the web app."
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type: string
          description: "The URL of the\rAPI definition."
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type: string
          description: "Auto swap slot\rname"
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type: boolean
          description: "Local mysql\renabled"
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type: array
          description: "Ip Security\rrestrictions"
        - id: siteEnvelope.siteConfig.id
          type: string
          description: Resource Id
        - id: siteEnvelope.siteConfig.name
          type: string
          description: Resource Name
        - id: siteEnvelope.siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.siteConfig.location
          type: string
          description: Resource Location
        - id: siteEnvelope.siteConfig.type
          type: string
          description: Resource type
        - id: siteEnvelope.siteConfig.tags
          type: object
          description: Resource tags
        - id: siteEnvelope.scmSiteAlsoStopped
          type: boolean
          description: "If set indicates whether\rto stop SCM (KUDU) site when the web app is stopped. Default is false."
        - id: siteEnvelope.hostingEnvironmentProfile
          type: object
          description: "Specification for\rthe hosting environment (App Service Environment) to use for the web app"
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type: string
          description: "Resource id of\rthe hostingEnvironment (App Service Environment)"
        - id: siteEnvelope.hostingEnvironmentProfile.name
          type: string
          description: "Name of the\rhostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.hostingEnvironmentProfile.type
          type: string
          description: "Resource type\rof the hostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.microService
          type: string
        - id: siteEnvelope.gatewaySiteName
          type: string
          description: "Name of gateway app\rassociated with web app"
        - id: siteEnvelope.clientAffinityEnabled
          type: boolean
          description: "Specifies if the\rclient affinity is enabled when load balancing http request for multiple\rinstances of the web app"
        - id: siteEnvelope.clientCertEnabled
          type: boolean
          description: "Specifies if the client\rcertificate is enabled for the web app"
        - id: siteEnvelope.hostNamesDisabled
          type: boolean
          description: "Specifies if the public\rhostnames are disabled the web app.\rIf set to true the app is only accessible via API Management\rprocess"
        - id: siteEnvelope.containerSize
          type: number
          description: Size of a function container
        - id: siteEnvelope.maxNumberOfWorkers
          type: number
          description: "Maximum number of workers\rThis only applies to function container"
        - id: siteEnvelope.cloningInfo
          type: object
          description: "This is only valid for web app\rcreation. If specified, web app is cloned from\ra source web app"
        - id: siteEnvelope.cloningInfo.correlationId
          type: string
          description: "Correlation Id of\rcloning operation. This id ties multiple cloning operations\rtogether to use the same snapshot"
        - id: siteEnvelope.cloningInfo.overwrite
          type: boolean
          description: "Overwrite destination\rweb app"
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type: boolean
          description: "If true,\rclone custom hostnames from source web app"
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type: boolean
          description: "Clone source\rcontrol from source web app"
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type: string
          description: "ARM resource id\rof the source web app. Web app resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}\rfor production slots and\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}\rfor other slots"
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type: string
          description: "Hosting\renvironment"
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type: object
          description: "Application\rsettings overrides for cloned web app. If specified these settings will\roverride the settings cloned\rfrom source web app. If not specified, application settings\rfrom source web app are retained."
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type: boolean
          description: "If\rspecified configure load balancing for source and clone site"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type: string
          description: "ARM\rresource id of the traffic manager profile to use if it exists. Traffic\rmanager resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type: string
          description: "Name\rof traffic manager profile to create. This is only needed if traffic\rmanager profile does not already exist"
        - id: siteEnvelope.id
          type: string
          description: Resource Id
        - id: siteEnvelope.name
          type: string
          description: Resource Name
        - id: siteEnvelope.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.location
          type: string
          description: Resource Location
        - id: siteEnvelope.type
          type: string
          description: Resource type
        - id: siteEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.skipDnsRegistration
          type: string
          description: "If true web app hostname is\rnot registered with DNS on creation. This parameter is\ronly used for app creation"
        - id: options.skipCustomDomainVerification
          type: string
          description: "If true, custom (non\r*.azurewebsites.net) domains associated with web app are not verified."
        - id: options.forceDnsRegistration
          type: string
          description: "If true, web app hostname is\rforce registered with DNS"
        - id: options.ttlInSeconds
          type: string
          description: "Time to live in seconds for web\rapp's default domain name"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteSlot(resourceGroupName, name, siteEnvelope,
        siteEnvelope.siteName, siteEnvelope.enabled,
        siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
        siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
        siteEnvelope.siteConfig.defaultDocuments,
        siteEnvelope.siteConfig.netFrameworkVersion,
        siteEnvelope.siteConfig.phpVersion,
        siteEnvelope.siteConfig.pythonVersion,
        siteEnvelope.siteConfig.requestTracingEnabled,
        siteEnvelope.siteConfig.requestTracingExpirationTime,
        siteEnvelope.siteConfig.remoteDebuggingEnabled,
        siteEnvelope.siteConfig.remoteDebuggingVersion,
        siteEnvelope.siteConfig.httpLoggingEnabled,
        siteEnvelope.siteConfig.logsDirectorySizeLimit,
        siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
        siteEnvelope.siteConfig.publishingUsername,
        siteEnvelope.siteConfig.publishingPassword,
        siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
        siteEnvelope.siteConfig.connectionStrings,
        siteEnvelope.siteConfig.handlerMappings,
        siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
        siteEnvelope.siteConfig.use32BitWorkerProcess,
        siteEnvelope.siteConfig.webSocketsEnabled,
        siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
        siteEnvelope.siteConfig.javaContainer,
        siteEnvelope.siteConfig.javaContainerVersion,
        siteEnvelope.siteConfig.managedPipelineMode,
        siteEnvelope.siteConfig.virtualApplications,
        siteEnvelope.siteConfig.loadBalancing,
        siteEnvelope.siteConfig.experiments,
        siteEnvelope.siteConfig.experiments.rampUpRules,
        siteEnvelope.siteConfig.limits,
        siteEnvelope.siteConfig.limits.maxPercentageCpu,
        siteEnvelope.siteConfig.limits.maxMemoryInMb,
        siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
        siteEnvelope.siteConfig.autoHealEnabled,
        siteEnvelope.siteConfig.autoHealRules,
        siteEnvelope.siteConfig.autoHealRules.triggers,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.actions,
        siteEnvelope.siteConfig.autoHealRules.actions.actionType,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
        siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteEnvelope.siteConfig.tracingOptions,
        siteEnvelope.siteConfig.vnetName, siteEnvelope.siteConfig.cors,
        siteEnvelope.siteConfig.cors.allowedOrigins,
        siteEnvelope.siteConfig.apiDefinition,
        siteEnvelope.siteConfig.apiDefinition.url,
        siteEnvelope.siteConfig.autoSwapSlotName,
        siteEnvelope.siteConfig.localMySqlEnabled,
        siteEnvelope.siteConfig.ipSecurityRestrictions,
        siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
        siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
        siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
        siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
        siteEnvelope.hostingEnvironmentProfile.id,
        siteEnvelope.hostingEnvironmentProfile.name,
        siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
        siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
        siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
        siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
        siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
        siteEnvelope.cloningInfo.overwrite,
        siteEnvelope.cloningInfo.cloneCustomHostNames,
        siteEnvelope.cloningInfo.cloneSourceControl,
        siteEnvelope.cloningInfo.sourceWebAppId,
        siteEnvelope.cloningInfo.hostingEnvironment,
        siteEnvelope.cloningInfo.appSettingsOverrides,
        siteEnvelope.cloningInfo.configureLoadBalancing,
        siteEnvelope.cloningInfo.trafficManagerProfileId,
        siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
        siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
        siteEnvelope.type, siteEnvelope.tags, slot, options,
        options.skipDnsRegistration, options.skipCustomDomainVerification,
        options.forceDnsRegistration, options.ttlInSeconds,
        options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteSlot(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, slot, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    children:
      - 'Sites#createOrUpdateSiteSlot~client'
      - 'Sites#createOrUpdateSiteSlot~callback'
      - 'Sites#createOrUpdateSiteSlot~options'
  - uid: 'Sites#beginCreateOrUpdateSiteSlot'
    id: beginCreateOrUpdateSiteSlot
    parent: Sites
    name: >-
      beginCreateOrUpdateSiteSlot(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, slot, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group
        - id: name
          type: string
          description: Name of the web app
        - id: siteEnvelope
          type: object
          description: Details of web app if it exists already
        - id: siteEnvelope.siteName
          type: string
          description: Name of web app
        - id: siteEnvelope.enabled
          type: boolean
          description: "True if the site is enabled;\rotherwise, false. Setting this  value to false disables the site (takes\rthe site off line)."
        - id: siteEnvelope.hostNameSslStates
          type: array
          description: "Hostname SSL states are\rused to manage the SSL bindings for site's hostnames."
        - id: siteEnvelope.serverFarmId
          type: string
        - id: siteEnvelope.siteConfig
          type: object
          description: Configuration of web app
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteEnvelope.siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type: string
          description: "Net Framework\rVersion"
        - id: siteEnvelope.siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteEnvelope.siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type: boolean
          description: "Enable\rrequest tracing"
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type: date
          description: Request tracing expiration time
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote\rDebugging Enabled"
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type: string
          description: "Remote\rDebugging Version"
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type: boolean
          description: "HTTP logging\rEnabled"
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs\rDirectory size limit"
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: Detailed error logging enabled
        - id: siteEnvelope.siteConfig.publishingUsername
          type: string
          description: "Publishing\ruser name"
        - id: siteEnvelope.siteConfig.publishingPassword
          type: string
          description: "Publishing\rpassword"
        - id: siteEnvelope.siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteEnvelope.siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteEnvelope.siteConfig.connectionStrings
          type: array
          description: "Connection\rstrings"
        - id: siteEnvelope.siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteEnvelope.siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteEnvelope.siteConfig.scmType
          type: string
          description: SCM type
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit\rworker process"
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type: boolean
          description: "Web socket\renabled."
        - id: siteEnvelope.siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteEnvelope.siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteEnvelope.siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type: string
          description: "Java\rcontainer version"
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type: string
          description: "Managed\rpipeline mode. Possible values include: 'Integrated', 'Classic'"
        - id: siteEnvelope.siteConfig.virtualApplications
          type: array
          description: "Virtual\rapplications"
        - id: siteEnvelope.siteConfig.loadBalancing
          type: string
          description: "Site load\rbalancing. Possible values include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteEnvelope.siteConfig.experiments
          type: object
          description: "This is work around\rfor polymophic types"
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteEnvelope.siteConfig.limits
          type: object
          description: Site limits
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum\rallowed CPU usage percentage"
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum\rallowed memory usage in MB"
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum\rallowed disk size usage in MB"
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteEnvelope.siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers -\rConditions that describe when to execute the auto-heal actions"
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type: object
          description: Requests - Defines a rule based on total requests
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: StatusCodes - Defines a rule based on status codes
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: "SlowRequests\r- Defines a rule based on request execution time"
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type: object
          description: "Actions -\rActions to be executed when a rule is triggered"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType - predefined action to be taken. Possible values include:\r'Recycle', 'LogEvent', 'CustomAction'"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type: object
          description: "CustomAction\r- custom action to be taken"
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteEnvelope.siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteEnvelope.siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteEnvelope.siteConfig.cors
          type: object
          description: "Cross-Origin Resource\rSharing (CORS) settings."
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets\rthe list of origins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteEnvelope.siteConfig.apiDefinition
          type: object
          description: "Information about\rthe formal API definition for the web app."
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type: string
          description: "The URL of the\rAPI definition."
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type: string
          description: "Auto swap slot\rname"
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type: boolean
          description: "Local mysql\renabled"
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type: array
          description: "Ip Security\rrestrictions"
        - id: siteEnvelope.siteConfig.id
          type: string
          description: Resource Id
        - id: siteEnvelope.siteConfig.name
          type: string
          description: Resource Name
        - id: siteEnvelope.siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.siteConfig.location
          type: string
          description: Resource Location
        - id: siteEnvelope.siteConfig.type
          type: string
          description: Resource type
        - id: siteEnvelope.siteConfig.tags
          type: object
          description: Resource tags
        - id: siteEnvelope.scmSiteAlsoStopped
          type: boolean
          description: "If set indicates whether\rto stop SCM (KUDU) site when the web app is stopped. Default is false."
        - id: siteEnvelope.hostingEnvironmentProfile
          type: object
          description: "Specification for\rthe hosting environment (App Service Environment) to use for the web app"
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type: string
          description: "Resource id of\rthe hostingEnvironment (App Service Environment)"
        - id: siteEnvelope.hostingEnvironmentProfile.name
          type: string
          description: "Name of the\rhostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.hostingEnvironmentProfile.type
          type: string
          description: "Resource type\rof the hostingEnvironment (App Service Environment) (read only)"
        - id: siteEnvelope.microService
          type: string
        - id: siteEnvelope.gatewaySiteName
          type: string
          description: "Name of gateway app\rassociated with web app"
        - id: siteEnvelope.clientAffinityEnabled
          type: boolean
          description: "Specifies if the\rclient affinity is enabled when load balancing http request for multiple\rinstances of the web app"
        - id: siteEnvelope.clientCertEnabled
          type: boolean
          description: "Specifies if the client\rcertificate is enabled for the web app"
        - id: siteEnvelope.hostNamesDisabled
          type: boolean
          description: "Specifies if the public\rhostnames are disabled the web app.\rIf set to true the app is only accessible via API Management\rprocess"
        - id: siteEnvelope.containerSize
          type: number
          description: Size of a function container
        - id: siteEnvelope.maxNumberOfWorkers
          type: number
          description: "Maximum number of workers\rThis only applies to function container"
        - id: siteEnvelope.cloningInfo
          type: object
          description: "This is only valid for web app\rcreation. If specified, web app is cloned from\ra source web app"
        - id: siteEnvelope.cloningInfo.correlationId
          type: string
          description: "Correlation Id of\rcloning operation. This id ties multiple cloning operations\rtogether to use the same snapshot"
        - id: siteEnvelope.cloningInfo.overwrite
          type: boolean
          description: "Overwrite destination\rweb app"
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type: boolean
          description: "If true,\rclone custom hostnames from source web app"
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type: boolean
          description: "Clone source\rcontrol from source web app"
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type: string
          description: "ARM resource id\rof the source web app. Web app resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}\rfor production slots and\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}\rfor other slots"
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type: string
          description: "Hosting\renvironment"
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type: object
          description: "Application\rsettings overrides for cloned web app. If specified these settings will\roverride the settings cloned\rfrom source web app. If not specified, application settings\rfrom source web app are retained."
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type: boolean
          description: "If\rspecified configure load balancing for source and clone site"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type: string
          description: "ARM\rresource id of the traffic manager profile to use if it exists. Traffic\rmanager resource id is of the form\r/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}"
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type: string
          description: "Name\rof traffic manager profile to create. This is only needed if traffic\rmanager profile does not already exist"
        - id: siteEnvelope.id
          type: string
          description: Resource Id
        - id: siteEnvelope.name
          type: string
          description: Resource Name
        - id: siteEnvelope.kind
          type: string
          description: Kind of resource
        - id: siteEnvelope.location
          type: string
          description: Resource Location
        - id: siteEnvelope.type
          type: string
          description: Resource type
        - id: siteEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.skipDnsRegistration
          type: string
          description: "If true web app hostname is\rnot registered with DNS on creation. This parameter is\ronly used for app creation"
        - id: options.skipCustomDomainVerification
          type: string
          description: "If true, custom (non\r*.azurewebsites.net) domains associated with web app are not verified."
        - id: options.forceDnsRegistration
          type: string
          description: "If true, web app hostname is\rforce registered with DNS"
        - id: options.ttlInSeconds
          type: string
          description: "Time to live in seconds for web\rapp's default domain name"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdateSiteSlot(resourceGroupName, name,
        siteEnvelope, siteEnvelope.siteName, siteEnvelope.enabled,
        siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
        siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
        siteEnvelope.siteConfig.defaultDocuments,
        siteEnvelope.siteConfig.netFrameworkVersion,
        siteEnvelope.siteConfig.phpVersion,
        siteEnvelope.siteConfig.pythonVersion,
        siteEnvelope.siteConfig.requestTracingEnabled,
        siteEnvelope.siteConfig.requestTracingExpirationTime,
        siteEnvelope.siteConfig.remoteDebuggingEnabled,
        siteEnvelope.siteConfig.remoteDebuggingVersion,
        siteEnvelope.siteConfig.httpLoggingEnabled,
        siteEnvelope.siteConfig.logsDirectorySizeLimit,
        siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
        siteEnvelope.siteConfig.publishingUsername,
        siteEnvelope.siteConfig.publishingPassword,
        siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
        siteEnvelope.siteConfig.connectionStrings,
        siteEnvelope.siteConfig.handlerMappings,
        siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
        siteEnvelope.siteConfig.use32BitWorkerProcess,
        siteEnvelope.siteConfig.webSocketsEnabled,
        siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
        siteEnvelope.siteConfig.javaContainer,
        siteEnvelope.siteConfig.javaContainerVersion,
        siteEnvelope.siteConfig.managedPipelineMode,
        siteEnvelope.siteConfig.virtualApplications,
        siteEnvelope.siteConfig.loadBalancing,
        siteEnvelope.siteConfig.experiments,
        siteEnvelope.siteConfig.experiments.rampUpRules,
        siteEnvelope.siteConfig.limits,
        siteEnvelope.siteConfig.limits.maxPercentageCpu,
        siteEnvelope.siteConfig.limits.maxMemoryInMb,
        siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
        siteEnvelope.siteConfig.autoHealEnabled,
        siteEnvelope.siteConfig.autoHealRules,
        siteEnvelope.siteConfig.autoHealRules.triggers,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
        siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteEnvelope.siteConfig.autoHealRules.actions,
        siteEnvelope.siteConfig.autoHealRules.actions.actionType,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
        siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
        siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteEnvelope.siteConfig.tracingOptions,
        siteEnvelope.siteConfig.vnetName, siteEnvelope.siteConfig.cors,
        siteEnvelope.siteConfig.cors.allowedOrigins,
        siteEnvelope.siteConfig.apiDefinition,
        siteEnvelope.siteConfig.apiDefinition.url,
        siteEnvelope.siteConfig.autoSwapSlotName,
        siteEnvelope.siteConfig.localMySqlEnabled,
        siteEnvelope.siteConfig.ipSecurityRestrictions,
        siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
        siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
        siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
        siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
        siteEnvelope.hostingEnvironmentProfile.id,
        siteEnvelope.hostingEnvironmentProfile.name,
        siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
        siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
        siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
        siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
        siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
        siteEnvelope.cloningInfo.overwrite,
        siteEnvelope.cloningInfo.cloneCustomHostNames,
        siteEnvelope.cloningInfo.cloneSourceControl,
        siteEnvelope.cloningInfo.sourceWebAppId,
        siteEnvelope.cloningInfo.hostingEnvironment,
        siteEnvelope.cloningInfo.appSettingsOverrides,
        siteEnvelope.cloningInfo.configureLoadBalancing,
        siteEnvelope.cloningInfo.trafficManagerProfileId,
        siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
        siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
        siteEnvelope.type, siteEnvelope.tags, slot, options,
        options.skipDnsRegistration, options.skipCustomDomainVerification,
        options.forceDnsRegistration, options.ttlInSeconds,
        options.customHeaders, callback);
    fullName: >-
      Sites.beginCreateOrUpdateSiteSlot(resourceGroupName, name, siteEnvelope,
      siteEnvelope.siteName, siteEnvelope.enabled,
      siteEnvelope.hostNameSslStates, siteEnvelope.serverFarmId,
      siteEnvelope.siteConfig, siteEnvelope.siteConfig.numberOfWorkers,
      siteEnvelope.siteConfig.defaultDocuments,
      siteEnvelope.siteConfig.netFrameworkVersion,
      siteEnvelope.siteConfig.phpVersion, siteEnvelope.siteConfig.pythonVersion,
      siteEnvelope.siteConfig.requestTracingEnabled,
      siteEnvelope.siteConfig.requestTracingExpirationTime,
      siteEnvelope.siteConfig.remoteDebuggingEnabled,
      siteEnvelope.siteConfig.remoteDebuggingVersion,
      siteEnvelope.siteConfig.httpLoggingEnabled,
      siteEnvelope.siteConfig.logsDirectorySizeLimit,
      siteEnvelope.siteConfig.detailedErrorLoggingEnabled,
      siteEnvelope.siteConfig.publishingUsername,
      siteEnvelope.siteConfig.publishingPassword,
      siteEnvelope.siteConfig.appSettings, siteEnvelope.siteConfig.metadata,
      siteEnvelope.siteConfig.connectionStrings,
      siteEnvelope.siteConfig.handlerMappings,
      siteEnvelope.siteConfig.documentRoot, siteEnvelope.siteConfig.scmType,
      siteEnvelope.siteConfig.use32BitWorkerProcess,
      siteEnvelope.siteConfig.webSocketsEnabled,
      siteEnvelope.siteConfig.alwaysOn, siteEnvelope.siteConfig.javaVersion,
      siteEnvelope.siteConfig.javaContainer,
      siteEnvelope.siteConfig.javaContainerVersion,
      siteEnvelope.siteConfig.managedPipelineMode,
      siteEnvelope.siteConfig.virtualApplications,
      siteEnvelope.siteConfig.loadBalancing,
      siteEnvelope.siteConfig.experiments,
      siteEnvelope.siteConfig.experiments.rampUpRules,
      siteEnvelope.siteConfig.limits,
      siteEnvelope.siteConfig.limits.maxPercentageCpu,
      siteEnvelope.siteConfig.limits.maxMemoryInMb,
      siteEnvelope.siteConfig.limits.maxDiskSizeInMb,
      siteEnvelope.siteConfig.autoHealEnabled,
      siteEnvelope.siteConfig.autoHealRules,
      siteEnvelope.siteConfig.autoHealRules.triggers,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count,
      siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteEnvelope.siteConfig.autoHealRules.actions,
      siteEnvelope.siteConfig.autoHealRules.actions.actionType,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe,
      siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters,
      siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteEnvelope.siteConfig.tracingOptions, siteEnvelope.siteConfig.vnetName,
      siteEnvelope.siteConfig.cors, siteEnvelope.siteConfig.cors.allowedOrigins,
      siteEnvelope.siteConfig.apiDefinition,
      siteEnvelope.siteConfig.apiDefinition.url,
      siteEnvelope.siteConfig.autoSwapSlotName,
      siteEnvelope.siteConfig.localMySqlEnabled,
      siteEnvelope.siteConfig.ipSecurityRestrictions,
      siteEnvelope.siteConfig.id, siteEnvelope.siteConfig.name,
      siteEnvelope.siteConfig.kind, siteEnvelope.siteConfig.location,
      siteEnvelope.siteConfig.type, siteEnvelope.siteConfig.tags,
      siteEnvelope.scmSiteAlsoStopped, siteEnvelope.hostingEnvironmentProfile,
      siteEnvelope.hostingEnvironmentProfile.id,
      siteEnvelope.hostingEnvironmentProfile.name,
      siteEnvelope.hostingEnvironmentProfile.type, siteEnvelope.microService,
      siteEnvelope.gatewaySiteName, siteEnvelope.clientAffinityEnabled,
      siteEnvelope.clientCertEnabled, siteEnvelope.hostNamesDisabled,
      siteEnvelope.containerSize, siteEnvelope.maxNumberOfWorkers,
      siteEnvelope.cloningInfo, siteEnvelope.cloningInfo.correlationId,
      siteEnvelope.cloningInfo.overwrite,
      siteEnvelope.cloningInfo.cloneCustomHostNames,
      siteEnvelope.cloningInfo.cloneSourceControl,
      siteEnvelope.cloningInfo.sourceWebAppId,
      siteEnvelope.cloningInfo.hostingEnvironment,
      siteEnvelope.cloningInfo.appSettingsOverrides,
      siteEnvelope.cloningInfo.configureLoadBalancing,
      siteEnvelope.cloningInfo.trafficManagerProfileId,
      siteEnvelope.cloningInfo.trafficManagerProfileName, siteEnvelope.id,
      siteEnvelope.name, siteEnvelope.kind, siteEnvelope.location,
      siteEnvelope.type, siteEnvelope.tags, slot, options,
      options.skipDnsRegistration, options.skipCustomDomainVerification,
      options.forceDnsRegistration, options.ttlInSeconds, options.customHeaders,
      callback)
    children:
      - 'Sites#beginCreateOrUpdateSiteSlot~client'
      - 'Sites#beginCreateOrUpdateSiteSlot~callback'
      - 'Sites#beginCreateOrUpdateSiteSlot~options'
      - 'Sites#beginCreateOrUpdateSiteSlot~skipDnsRegistration'
      - 'Sites#beginCreateOrUpdateSiteSlot~skipCustomDomainVerification'
      - 'Sites#beginCreateOrUpdateSiteSlot~forceDnsRegistration'
      - 'Sites#beginCreateOrUpdateSiteSlot~ttlInSeconds'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestUrl'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestUrl'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestUrl'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestUrl'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestUrl'
      - 'Sites#beginCreateOrUpdateSiteSlot~queryParameters'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestUrl'
      - 'Sites#beginCreateOrUpdateSiteSlot~regex'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestUrl'
      - 'Sites#beginCreateOrUpdateSiteSlot~httpRequest'
      - 'Sites#beginCreateOrUpdateSiteSlot~headerName'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestContent'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestModel'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestModelMapper'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestModel'
      - 'Sites#beginCreateOrUpdateSiteSlot~requestContent'
      - 'Sites#beginCreateOrUpdateSiteSlot~serializationError'
  - uid: 'Sites#deleteSiteSlot'
    id: deleteSiteSlot
    parent: Sites
    name: >-
      deleteSiteSlot(resourceGroupName, name, slot, options,
      options.deleteMetrics, options.deleteEmptyServerFarm,
      options.skipDnsRegistration, options.deleteAllSlots,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.deleteMetrics
          type: string
          description: "If true, web app metrics are also\rdeleted"
        - id: options.deleteEmptyServerFarm
          type: string
          description: "If true and App Service\rPlan is empty after web app deletion, App Service Plan is also deleted"
        - id: options.skipDnsRegistration
          type: string
          description: "If true, DNS registration is\rskipped"
        - id: options.deleteAllSlots
          type: string
          description: "If true, all slots associated with\rweb app are also deleted"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteSlot(resourceGroupName, name, slot, options,
        options.deleteMetrics, options.deleteEmptyServerFarm,
        options.skipDnsRegistration, options.deleteAllSlots,
        options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteSlot(resourceGroupName, name, slot, options,
      options.deleteMetrics, options.deleteEmptyServerFarm,
      options.skipDnsRegistration, options.deleteAllSlots,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteSlot~client'
      - 'Sites#deleteSiteSlot~callback'
      - 'Sites#deleteSiteSlot~options'
      - 'Sites#deleteSiteSlot~deleteMetrics'
      - 'Sites#deleteSiteSlot~deleteEmptyServerFarm'
      - 'Sites#deleteSiteSlot~skipDnsRegistration'
      - 'Sites#deleteSiteSlot~deleteAllSlots'
      - 'Sites#deleteSiteSlot~requestUrl'
      - 'Sites#deleteSiteSlot~requestUrl'
      - 'Sites#deleteSiteSlot~requestUrl'
      - 'Sites#deleteSiteSlot~requestUrl'
      - 'Sites#deleteSiteSlot~requestUrl'
      - 'Sites#deleteSiteSlot~queryParameters'
      - 'Sites#deleteSiteSlot~requestUrl'
      - 'Sites#deleteSiteSlot~regex'
      - 'Sites#deleteSiteSlot~requestUrl'
      - 'Sites#deleteSiteSlot~httpRequest'
      - 'Sites#deleteSiteSlot~headerName'
  - uid: 'Sites#isSiteCloneable'
    id: isSiteCloneable
    parent: Sites
    name: >-
      isSiteCloneable(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group
        - id: name
          type: string
          description: Name of the web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteCloneability} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function isSiteCloneable(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.isSiteCloneable(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#isSiteCloneable~client'
      - 'Sites#isSiteCloneable~callback'
      - 'Sites#isSiteCloneable~options'
      - 'Sites#isSiteCloneable~requestUrl'
      - 'Sites#isSiteCloneable~requestUrl'
      - 'Sites#isSiteCloneable~requestUrl'
      - 'Sites#isSiteCloneable~requestUrl'
      - 'Sites#isSiteCloneable~queryParameters'
      - 'Sites#isSiteCloneable~requestUrl'
      - 'Sites#isSiteCloneable~regex'
      - 'Sites#isSiteCloneable~requestUrl'
      - 'Sites#isSiteCloneable~httpRequest'
      - 'Sites#isSiteCloneable~headerName'
  - uid: 'Sites#isSiteCloneableSlot'
    id: isSiteCloneableSlot
    parent: Sites
    name: >-
      isSiteCloneableSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group
        - id: name
          type: string
          description: Name of the web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteCloneability} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function isSiteCloneableSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.isSiteCloneableSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#isSiteCloneableSlot~client'
      - 'Sites#isSiteCloneableSlot~callback'
      - 'Sites#isSiteCloneableSlot~options'
      - 'Sites#isSiteCloneableSlot~requestUrl'
      - 'Sites#isSiteCloneableSlot~requestUrl'
      - 'Sites#isSiteCloneableSlot~requestUrl'
      - 'Sites#isSiteCloneableSlot~requestUrl'
      - 'Sites#isSiteCloneableSlot~requestUrl'
      - 'Sites#isSiteCloneableSlot~queryParameters'
      - 'Sites#isSiteCloneableSlot~requestUrl'
      - 'Sites#isSiteCloneableSlot~regex'
      - 'Sites#isSiteCloneableSlot~requestUrl'
      - 'Sites#isSiteCloneableSlot~httpRequest'
      - 'Sites#isSiteCloneableSlot~headerName'
  - uid: 'Sites#recoverSite'
    id: recoverSite
    parent: Sites
    name: >-
      recoverSite(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: recoveryEntity
          type: object
          description: "Snapshot data used for web app recovery.\rSnapshot information can be obtained by calling GetDeletedSites or\rGetSiteSnapshots API."
        - id: recoveryEntity.snapshotTime
          type: date
          description: "Point in time in which the site\rrecover should be attempted."
        - id: recoveryEntity.recoverConfig
          type: boolean
          description: "If true, then the website's\rconfiguration will be reverted to its state at SnapshotTime"
        - id: recoveryEntity.siteName
          type: string
          description: "[Optional] Destination web app\rname into which web app should be recovered. This is case when new web app\rshould be created instead."
        - id: recoveryEntity.slotName
          type: string
          description: "[Optional] Destination web app\rslot name into which web app should be recovered"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function recoverSite(resourceGroupName, name, recoveryEntity,
        recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
        recoveryEntity.siteName, recoveryEntity.slotName, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.recoverSite(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, options,
      options.customHeaders, callback)
    children:
      - 'Sites#recoverSite~client'
      - 'Sites#recoverSite~callback'
      - 'Sites#recoverSite~options'
  - uid: 'Sites#beginRecoverSite'
    id: beginRecoverSite
    parent: Sites
    name: >-
      beginRecoverSite(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: recoveryEntity
          type: object
          description: "Snapshot data used for web app recovery.\rSnapshot information can be obtained by calling GetDeletedSites or\rGetSiteSnapshots API."
        - id: recoveryEntity.snapshotTime
          type: date
          description: "Point in time in which the site\rrecover should be attempted."
        - id: recoveryEntity.recoverConfig
          type: boolean
          description: "If true, then the website's\rconfiguration will be reverted to its state at SnapshotTime"
        - id: recoveryEntity.siteName
          type: string
          description: "[Optional] Destination web app\rname into which web app should be recovered. This is case when new web app\rshould be created instead."
        - id: recoveryEntity.slotName
          type: string
          description: "[Optional] Destination web app\rslot name into which web app should be recovered"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginRecoverSite(resourceGroupName, name, recoveryEntity,
        recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
        recoveryEntity.siteName, recoveryEntity.slotName, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.beginRecoverSite(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, options,
      options.customHeaders, callback)
    children:
      - 'Sites#beginRecoverSite~client'
      - 'Sites#beginRecoverSite~callback'
      - 'Sites#beginRecoverSite~options'
      - 'Sites#beginRecoverSite~requestUrl'
      - 'Sites#beginRecoverSite~requestUrl'
      - 'Sites#beginRecoverSite~requestUrl'
      - 'Sites#beginRecoverSite~requestUrl'
      - 'Sites#beginRecoverSite~queryParameters'
      - 'Sites#beginRecoverSite~requestUrl'
      - 'Sites#beginRecoverSite~regex'
      - 'Sites#beginRecoverSite~requestUrl'
      - 'Sites#beginRecoverSite~httpRequest'
      - 'Sites#beginRecoverSite~headerName'
      - 'Sites#beginRecoverSite~requestContent'
      - 'Sites#beginRecoverSite~requestModel'
      - 'Sites#beginRecoverSite~requestModelMapper'
      - 'Sites#beginRecoverSite~requestModel'
      - 'Sites#beginRecoverSite~requestContent'
      - 'Sites#beginRecoverSite~serializationError'
  - uid: 'Sites#recoverSiteSlot'
    id: recoverSiteSlot
    parent: Sites
    name: >-
      recoverSiteSlot(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: recoveryEntity
          type: object
          description: "Snapshot data used for web app recovery.\rSnapshot information can be obtained by calling GetDeletedSites or\rGetSiteSnapshots API."
        - id: recoveryEntity.snapshotTime
          type: date
          description: "Point in time in which the site\rrecover should be attempted."
        - id: recoveryEntity.recoverConfig
          type: boolean
          description: "If true, then the website's\rconfiguration will be reverted to its state at SnapshotTime"
        - id: recoveryEntity.siteName
          type: string
          description: "[Optional] Destination web app\rname into which web app should be recovered. This is case when new web app\rshould be created instead."
        - id: recoveryEntity.slotName
          type: string
          description: "[Optional] Destination web app\rslot name into which web app should be recovered"
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function recoverSiteSlot(resourceGroupName, name, recoveryEntity,
        recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
        recoveryEntity.siteName, recoveryEntity.slotName, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.recoverSiteSlot(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#recoverSiteSlot~client'
      - 'Sites#recoverSiteSlot~callback'
      - 'Sites#recoverSiteSlot~options'
  - uid: 'Sites#beginRecoverSiteSlot'
    id: beginRecoverSiteSlot
    parent: Sites
    name: >-
      beginRecoverSiteSlot(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: recoveryEntity
          type: object
          description: "Snapshot data used for web app recovery.\rSnapshot information can be obtained by calling GetDeletedSites or\rGetSiteSnapshots API."
        - id: recoveryEntity.snapshotTime
          type: date
          description: "Point in time in which the site\rrecover should be attempted."
        - id: recoveryEntity.recoverConfig
          type: boolean
          description: "If true, then the website's\rconfiguration will be reverted to its state at SnapshotTime"
        - id: recoveryEntity.siteName
          type: string
          description: "[Optional] Destination web app\rname into which web app should be recovered. This is case when new web app\rshould be created instead."
        - id: recoveryEntity.slotName
          type: string
          description: "[Optional] Destination web app\rslot name into which web app should be recovered"
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Site} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginRecoverSiteSlot(resourceGroupName, name, recoveryEntity,
        recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
        recoveryEntity.siteName, recoveryEntity.slotName, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.beginRecoverSiteSlot(resourceGroupName, name, recoveryEntity,
      recoveryEntity.snapshotTime, recoveryEntity.recoverConfig,
      recoveryEntity.siteName, recoveryEntity.slotName, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#beginRecoverSiteSlot~client'
      - 'Sites#beginRecoverSiteSlot~callback'
      - 'Sites#beginRecoverSiteSlot~options'
      - 'Sites#beginRecoverSiteSlot~requestUrl'
      - 'Sites#beginRecoverSiteSlot~requestUrl'
      - 'Sites#beginRecoverSiteSlot~requestUrl'
      - 'Sites#beginRecoverSiteSlot~requestUrl'
      - 'Sites#beginRecoverSiteSlot~requestUrl'
      - 'Sites#beginRecoverSiteSlot~queryParameters'
      - 'Sites#beginRecoverSiteSlot~requestUrl'
      - 'Sites#beginRecoverSiteSlot~regex'
      - 'Sites#beginRecoverSiteSlot~requestUrl'
      - 'Sites#beginRecoverSiteSlot~httpRequest'
      - 'Sites#beginRecoverSiteSlot~headerName'
      - 'Sites#beginRecoverSiteSlot~requestContent'
      - 'Sites#beginRecoverSiteSlot~requestModel'
      - 'Sites#beginRecoverSiteSlot~requestModelMapper'
      - 'Sites#beginRecoverSiteSlot~requestModel'
      - 'Sites#beginRecoverSiteSlot~requestContent'
      - 'Sites#beginRecoverSiteSlot~serializationError'
  - uid: 'Sites#getSiteSnapshots'
    id: getSiteSnapshots
    parent: Sites
    name: >-
      getSiteSnapshots(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Webspace
        - id: name
          type: string
          description: Website Name
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteSnapshots(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteSnapshots(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteSnapshots~client'
      - 'Sites#getSiteSnapshots~callback'
      - 'Sites#getSiteSnapshots~options'
      - 'Sites#getSiteSnapshots~requestUrl'
      - 'Sites#getSiteSnapshots~requestUrl'
      - 'Sites#getSiteSnapshots~requestUrl'
      - 'Sites#getSiteSnapshots~requestUrl'
      - 'Sites#getSiteSnapshots~queryParameters'
      - 'Sites#getSiteSnapshots~requestUrl'
      - 'Sites#getSiteSnapshots~regex'
      - 'Sites#getSiteSnapshots~requestUrl'
      - 'Sites#getSiteSnapshots~httpRequest'
      - 'Sites#getSiteSnapshots~headerName'
  - uid: 'Sites#getSiteSnapshotsSlot'
    id: getSiteSnapshotsSlot
    parent: Sites
    name: >-
      getSiteSnapshotsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Webspace
        - id: name
          type: string
          description: Website Name
        - id: slot
          type: string
          description: Website Slot
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteSnapshotsSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteSnapshotsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteSnapshotsSlot~client'
      - 'Sites#getSiteSnapshotsSlot~callback'
      - 'Sites#getSiteSnapshotsSlot~options'
      - 'Sites#getSiteSnapshotsSlot~requestUrl'
      - 'Sites#getSiteSnapshotsSlot~requestUrl'
      - 'Sites#getSiteSnapshotsSlot~requestUrl'
      - 'Sites#getSiteSnapshotsSlot~requestUrl'
      - 'Sites#getSiteSnapshotsSlot~requestUrl'
      - 'Sites#getSiteSnapshotsSlot~queryParameters'
      - 'Sites#getSiteSnapshotsSlot~requestUrl'
      - 'Sites#getSiteSnapshotsSlot~regex'
      - 'Sites#getSiteSnapshotsSlot~requestUrl'
      - 'Sites#getSiteSnapshotsSlot~httpRequest'
      - 'Sites#getSiteSnapshotsSlot~headerName'
  - uid: 'Sites#getDeletedSites'
    id: getDeletedSites
    parent: Sites
    name: >-
      getDeletedSites(resourceGroupName, options, options.propertiesToInclude,
      options.includeSiteTypes, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.propertiesToInclude
          type: string
          description: "Additional web app properties\rincluded in the response"
        - id: options.includeSiteTypes
          type: string
          description: "Types of apps included in the\rresponse"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeletedSiteCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeletedSites(resourceGroupName, options,
        options.propertiesToInclude, options.includeSiteTypes,
        options.customHeaders, callback);
    fullName: >-
      Sites.getDeletedSites(resourceGroupName, options,
      options.propertiesToInclude, options.includeSiteTypes,
      options.customHeaders, callback)
    children:
      - 'Sites#getDeletedSites~client'
      - 'Sites#getDeletedSites~callback'
      - 'Sites#getDeletedSites~options'
      - 'Sites#getDeletedSites~propertiesToInclude'
      - 'Sites#getDeletedSites~includeSiteTypes'
      - 'Sites#getDeletedSites~requestUrl'
      - 'Sites#getDeletedSites~requestUrl'
      - 'Sites#getDeletedSites~requestUrl'
      - 'Sites#getDeletedSites~queryParameters'
      - 'Sites#getDeletedSites~requestUrl'
      - 'Sites#getDeletedSites~regex'
      - 'Sites#getDeletedSites~requestUrl'
      - 'Sites#getDeletedSites~httpRequest'
      - 'Sites#getDeletedSites~headerName'
  - uid: 'Sites#getDeployments'
    id: getDeployments
    parent: Sites
    name: >-
      getDeployments(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployments(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getDeployments(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getDeployments~client'
      - 'Sites#getDeployments~callback'
      - 'Sites#getDeployments~options'
      - 'Sites#getDeployments~requestUrl'
      - 'Sites#getDeployments~requestUrl'
      - 'Sites#getDeployments~requestUrl'
      - 'Sites#getDeployments~requestUrl'
      - 'Sites#getDeployments~queryParameters'
      - 'Sites#getDeployments~requestUrl'
      - 'Sites#getDeployments~regex'
      - 'Sites#getDeployments~requestUrl'
      - 'Sites#getDeployments~httpRequest'
      - 'Sites#getDeployments~headerName'
  - uid: 'Sites#getDeploymentsSlot'
    id: getDeploymentsSlot
    parent: Sites
    name: >-
      getDeploymentsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeploymentsSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getDeploymentsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getDeploymentsSlot~client'
      - 'Sites#getDeploymentsSlot~callback'
      - 'Sites#getDeploymentsSlot~options'
      - 'Sites#getDeploymentsSlot~requestUrl'
      - 'Sites#getDeploymentsSlot~requestUrl'
      - 'Sites#getDeploymentsSlot~requestUrl'
      - 'Sites#getDeploymentsSlot~requestUrl'
      - 'Sites#getDeploymentsSlot~requestUrl'
      - 'Sites#getDeploymentsSlot~queryParameters'
      - 'Sites#getDeploymentsSlot~requestUrl'
      - 'Sites#getDeploymentsSlot~regex'
      - 'Sites#getDeploymentsSlot~requestUrl'
      - 'Sites#getDeploymentsSlot~httpRequest'
      - 'Sites#getDeploymentsSlot~headerName'
  - uid: 'Sites#getInstanceDeployments'
    id: getInstanceDeployments
    parent: Sites
    name: >-
      getInstanceDeployments(resourceGroupName, name, instanceId, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getInstanceDeployments(resourceGroupName, name, instanceId,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getInstanceDeployments(resourceGroupName, name, instanceId, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getInstanceDeployments~client'
      - 'Sites#getInstanceDeployments~callback'
      - 'Sites#getInstanceDeployments~options'
      - 'Sites#getInstanceDeployments~requestUrl'
      - 'Sites#getInstanceDeployments~requestUrl'
      - 'Sites#getInstanceDeployments~requestUrl'
      - 'Sites#getInstanceDeployments~requestUrl'
      - 'Sites#getInstanceDeployments~requestUrl'
      - 'Sites#getInstanceDeployments~queryParameters'
      - 'Sites#getInstanceDeployments~requestUrl'
      - 'Sites#getInstanceDeployments~regex'
      - 'Sites#getInstanceDeployments~requestUrl'
      - 'Sites#getInstanceDeployments~httpRequest'
      - 'Sites#getInstanceDeployments~headerName'
  - uid: 'Sites#getInstanceDeploymentsSlot'
    id: getInstanceDeploymentsSlot
    parent: Sites
    name: >-
      getInstanceDeploymentsSlot(resourceGroupName, name, slot, instanceId,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getInstanceDeploymentsSlot(resourceGroupName, name, slot,
        instanceId, options, options.customHeaders, callback);
    fullName: >-
      Sites.getInstanceDeploymentsSlot(resourceGroupName, name, slot,
      instanceId, options, options.customHeaders, callback)
    children:
      - 'Sites#getInstanceDeploymentsSlot~client'
      - 'Sites#getInstanceDeploymentsSlot~callback'
      - 'Sites#getInstanceDeploymentsSlot~options'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~queryParameters'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~regex'
      - 'Sites#getInstanceDeploymentsSlot~requestUrl'
      - 'Sites#getInstanceDeploymentsSlot~httpRequest'
      - 'Sites#getInstanceDeploymentsSlot~headerName'
  - uid: 'Sites#getInstanceDeployment'
    id: getInstanceDeployment
    parent: Sites
    name: >-
      getInstanceDeployment(resourceGroupName, name, id, instanceId, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getInstanceDeployment(resourceGroupName, name, id, instanceId,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getInstanceDeployment(resourceGroupName, name, id, instanceId,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getInstanceDeployment~client'
      - 'Sites#getInstanceDeployment~callback'
      - 'Sites#getInstanceDeployment~options'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~queryParameters'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~regex'
      - 'Sites#getInstanceDeployment~requestUrl'
      - 'Sites#getInstanceDeployment~httpRequest'
      - 'Sites#getInstanceDeployment~headerName'
  - uid: 'Sites#createInstanceDeployment'
    id: createInstanceDeployment
    parent: Sites
    name: >-
      createInstanceDeployment(resourceGroupName, name, id, instanceId,
      deployment, deployment.deploymentId, deployment.status,
      deployment.message, deployment.author, deployment.deployer,
      deployment.authorEmail, deployment.startTime, deployment.endTime,
      deployment.active, deployment.details, deployment.id, deployment.name,
      deployment.kind, deployment.location, deployment.type, deployment.tags,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: deployment
          type: object
          description: Details of deployment
        - id: deployment.deploymentId
          type: string
          description: Id
        - id: deployment.status
          type: number
          description: Status
        - id: deployment.message
          type: string
          description: Message
        - id: deployment.author
          type: string
          description: Author
        - id: deployment.deployer
          type: string
          description: Deployer
        - id: deployment.authorEmail
          type: string
          description: AuthorEmail
        - id: deployment.startTime
          type: date
          description: StartTime
        - id: deployment.endTime
          type: date
          description: EndTime
        - id: deployment.active
          type: boolean
          description: Active
        - id: deployment.details
          type: string
          description: Detail
        - id: deployment.id
          type: string
          description: Resource Id
        - id: deployment.name
          type: string
          description: Resource Name
        - id: deployment.kind
          type: string
          description: Kind of resource
        - id: deployment.location
          type: string
          description: Resource Location
        - id: deployment.type
          type: string
          description: Resource type
        - id: deployment.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createInstanceDeployment(resourceGroupName, name, id,
        instanceId, deployment, deployment.deploymentId, deployment.status,
        deployment.message, deployment.author, deployment.deployer,
        deployment.authorEmail, deployment.startTime, deployment.endTime,
        deployment.active, deployment.details, deployment.id, deployment.name,
        deployment.kind, deployment.location, deployment.type, deployment.tags,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.createInstanceDeployment(resourceGroupName, name, id, instanceId,
      deployment, deployment.deploymentId, deployment.status,
      deployment.message, deployment.author, deployment.deployer,
      deployment.authorEmail, deployment.startTime, deployment.endTime,
      deployment.active, deployment.details, deployment.id, deployment.name,
      deployment.kind, deployment.location, deployment.type, deployment.tags,
      options, options.customHeaders, callback)
    children:
      - 'Sites#createInstanceDeployment~client'
      - 'Sites#createInstanceDeployment~callback'
      - 'Sites#createInstanceDeployment~options'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~queryParameters'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~regex'
      - 'Sites#createInstanceDeployment~requestUrl'
      - 'Sites#createInstanceDeployment~httpRequest'
      - 'Sites#createInstanceDeployment~headerName'
      - 'Sites#createInstanceDeployment~requestContent'
      - 'Sites#createInstanceDeployment~requestModel'
      - 'Sites#createInstanceDeployment~requestModelMapper'
      - 'Sites#createInstanceDeployment~requestModel'
      - 'Sites#createInstanceDeployment~requestContent'
      - 'Sites#createInstanceDeployment~serializationError'
  - uid: 'Sites#deleteInstanceDeployment'
    id: deleteInstanceDeployment
    parent: Sites
    name: >-
      deleteInstanceDeployment(resourceGroupName, name, id, instanceId, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteInstanceDeployment(resourceGroupName, name, id,
        instanceId, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteInstanceDeployment(resourceGroupName, name, id, instanceId,
      options, options.customHeaders, callback)
    children:
      - 'Sites#deleteInstanceDeployment~client'
      - 'Sites#deleteInstanceDeployment~callback'
      - 'Sites#deleteInstanceDeployment~options'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~queryParameters'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~regex'
      - 'Sites#deleteInstanceDeployment~requestUrl'
      - 'Sites#deleteInstanceDeployment~httpRequest'
      - 'Sites#deleteInstanceDeployment~headerName'
  - uid: 'Sites#getDeployment'
    id: getDeployment
    parent: Sites
    name: >-
      getDeployment(resourceGroupName, name, id, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeployment(resourceGroupName, name, id, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getDeployment(resourceGroupName, name, id, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getDeployment~client'
      - 'Sites#getDeployment~callback'
      - 'Sites#getDeployment~options'
      - 'Sites#getDeployment~requestUrl'
      - 'Sites#getDeployment~requestUrl'
      - 'Sites#getDeployment~requestUrl'
      - 'Sites#getDeployment~requestUrl'
      - 'Sites#getDeployment~requestUrl'
      - 'Sites#getDeployment~queryParameters'
      - 'Sites#getDeployment~requestUrl'
      - 'Sites#getDeployment~regex'
      - 'Sites#getDeployment~requestUrl'
      - 'Sites#getDeployment~httpRequest'
      - 'Sites#getDeployment~headerName'
  - uid: 'Sites#createDeployment'
    id: createDeployment
    parent: Sites
    name: >-
      createDeployment(resourceGroupName, name, id, deployment,
      deployment.deploymentId, deployment.status, deployment.message,
      deployment.author, deployment.deployer, deployment.authorEmail,
      deployment.startTime, deployment.endTime, deployment.active,
      deployment.details, deployment.id, deployment.name, deployment.kind,
      deployment.location, deployment.type, deployment.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: deployment
          type: object
          description: Details of deployment
        - id: deployment.deploymentId
          type: string
          description: Id
        - id: deployment.status
          type: number
          description: Status
        - id: deployment.message
          type: string
          description: Message
        - id: deployment.author
          type: string
          description: Author
        - id: deployment.deployer
          type: string
          description: Deployer
        - id: deployment.authorEmail
          type: string
          description: AuthorEmail
        - id: deployment.startTime
          type: date
          description: StartTime
        - id: deployment.endTime
          type: date
          description: EndTime
        - id: deployment.active
          type: boolean
          description: Active
        - id: deployment.details
          type: string
          description: Detail
        - id: deployment.id
          type: string
          description: Resource Id
        - id: deployment.name
          type: string
          description: Resource Name
        - id: deployment.kind
          type: string
          description: Kind of resource
        - id: deployment.location
          type: string
          description: Resource Location
        - id: deployment.type
          type: string
          description: Resource type
        - id: deployment.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createDeployment(resourceGroupName, name, id, deployment,
        deployment.deploymentId, deployment.status, deployment.message,
        deployment.author, deployment.deployer, deployment.authorEmail,
        deployment.startTime, deployment.endTime, deployment.active,
        deployment.details, deployment.id, deployment.name, deployment.kind,
        deployment.location, deployment.type, deployment.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.createDeployment(resourceGroupName, name, id, deployment,
      deployment.deploymentId, deployment.status, deployment.message,
      deployment.author, deployment.deployer, deployment.authorEmail,
      deployment.startTime, deployment.endTime, deployment.active,
      deployment.details, deployment.id, deployment.name, deployment.kind,
      deployment.location, deployment.type, deployment.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#createDeployment~client'
      - 'Sites#createDeployment~callback'
      - 'Sites#createDeployment~options'
      - 'Sites#createDeployment~requestUrl'
      - 'Sites#createDeployment~requestUrl'
      - 'Sites#createDeployment~requestUrl'
      - 'Sites#createDeployment~requestUrl'
      - 'Sites#createDeployment~requestUrl'
      - 'Sites#createDeployment~queryParameters'
      - 'Sites#createDeployment~requestUrl'
      - 'Sites#createDeployment~regex'
      - 'Sites#createDeployment~requestUrl'
      - 'Sites#createDeployment~httpRequest'
      - 'Sites#createDeployment~headerName'
      - 'Sites#createDeployment~requestContent'
      - 'Sites#createDeployment~requestModel'
      - 'Sites#createDeployment~requestModelMapper'
      - 'Sites#createDeployment~requestModel'
      - 'Sites#createDeployment~requestContent'
      - 'Sites#createDeployment~serializationError'
  - uid: 'Sites#deleteDeployment'
    id: deleteDeployment
    parent: Sites
    name: >-
      deleteDeployment(resourceGroupName, name, id, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteDeployment(resourceGroupName, name, id, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.deleteDeployment(resourceGroupName, name, id, options,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteDeployment~client'
      - 'Sites#deleteDeployment~callback'
      - 'Sites#deleteDeployment~options'
      - 'Sites#deleteDeployment~requestUrl'
      - 'Sites#deleteDeployment~requestUrl'
      - 'Sites#deleteDeployment~requestUrl'
      - 'Sites#deleteDeployment~requestUrl'
      - 'Sites#deleteDeployment~requestUrl'
      - 'Sites#deleteDeployment~queryParameters'
      - 'Sites#deleteDeployment~requestUrl'
      - 'Sites#deleteDeployment~regex'
      - 'Sites#deleteDeployment~requestUrl'
      - 'Sites#deleteDeployment~httpRequest'
      - 'Sites#deleteDeployment~headerName'
  - uid: 'Sites#getDeploymentSlot'
    id: getDeploymentSlot
    parent: Sites
    name: >-
      getDeploymentSlot(resourceGroupName, name, id, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getDeploymentSlot(resourceGroupName, name, id, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getDeploymentSlot(resourceGroupName, name, id, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getDeploymentSlot~client'
      - 'Sites#getDeploymentSlot~callback'
      - 'Sites#getDeploymentSlot~options'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~queryParameters'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~regex'
      - 'Sites#getDeploymentSlot~requestUrl'
      - 'Sites#getDeploymentSlot~httpRequest'
      - 'Sites#getDeploymentSlot~headerName'
  - uid: 'Sites#createDeploymentSlot'
    id: createDeploymentSlot
    parent: Sites
    name: >-
      createDeploymentSlot(resourceGroupName, name, id, slot, deployment,
      deployment.deploymentId, deployment.status, deployment.message,
      deployment.author, deployment.deployer, deployment.authorEmail,
      deployment.startTime, deployment.endTime, deployment.active,
      deployment.details, deployment.id, deployment.name, deployment.kind,
      deployment.location, deployment.type, deployment.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: deployment
          type: object
          description: Details of deployment
        - id: deployment.deploymentId
          type: string
          description: Id
        - id: deployment.status
          type: number
          description: Status
        - id: deployment.message
          type: string
          description: Message
        - id: deployment.author
          type: string
          description: Author
        - id: deployment.deployer
          type: string
          description: Deployer
        - id: deployment.authorEmail
          type: string
          description: AuthorEmail
        - id: deployment.startTime
          type: date
          description: StartTime
        - id: deployment.endTime
          type: date
          description: EndTime
        - id: deployment.active
          type: boolean
          description: Active
        - id: deployment.details
          type: string
          description: Detail
        - id: deployment.id
          type: string
          description: Resource Id
        - id: deployment.name
          type: string
          description: Resource Name
        - id: deployment.kind
          type: string
          description: Kind of resource
        - id: deployment.location
          type: string
          description: Resource Location
        - id: deployment.type
          type: string
          description: Resource type
        - id: deployment.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createDeploymentSlot(resourceGroupName, name, id, slot,
        deployment, deployment.deploymentId, deployment.status,
        deployment.message, deployment.author, deployment.deployer,
        deployment.authorEmail, deployment.startTime, deployment.endTime,
        deployment.active, deployment.details, deployment.id, deployment.name,
        deployment.kind, deployment.location, deployment.type, deployment.tags,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.createDeploymentSlot(resourceGroupName, name, id, slot, deployment,
      deployment.deploymentId, deployment.status, deployment.message,
      deployment.author, deployment.deployer, deployment.authorEmail,
      deployment.startTime, deployment.endTime, deployment.active,
      deployment.details, deployment.id, deployment.name, deployment.kind,
      deployment.location, deployment.type, deployment.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#createDeploymentSlot~client'
      - 'Sites#createDeploymentSlot~callback'
      - 'Sites#createDeploymentSlot~options'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~queryParameters'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~regex'
      - 'Sites#createDeploymentSlot~requestUrl'
      - 'Sites#createDeploymentSlot~httpRequest'
      - 'Sites#createDeploymentSlot~headerName'
      - 'Sites#createDeploymentSlot~requestContent'
      - 'Sites#createDeploymentSlot~requestModel'
      - 'Sites#createDeploymentSlot~requestModelMapper'
      - 'Sites#createDeploymentSlot~requestModel'
      - 'Sites#createDeploymentSlot~requestContent'
      - 'Sites#createDeploymentSlot~serializationError'
  - uid: 'Sites#deleteDeploymentSlot'
    id: deleteDeploymentSlot
    parent: Sites
    name: >-
      deleteDeploymentSlot(resourceGroupName, name, id, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteDeploymentSlot(resourceGroupName, name, id, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteDeploymentSlot(resourceGroupName, name, id, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteDeploymentSlot~client'
      - 'Sites#deleteDeploymentSlot~callback'
      - 'Sites#deleteDeploymentSlot~options'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~queryParameters'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~regex'
      - 'Sites#deleteDeploymentSlot~requestUrl'
      - 'Sites#deleteDeploymentSlot~httpRequest'
      - 'Sites#deleteDeploymentSlot~headerName'
  - uid: 'Sites#getInstanceDeploymentSlot'
    id: getInstanceDeploymentSlot
    parent: Sites
    name: >-
      getInstanceDeploymentSlot(resourceGroupName, name, id, slot, instanceId,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getInstanceDeploymentSlot(resourceGroupName, name, id, slot,
        instanceId, options, options.customHeaders, callback);
    fullName: >-
      Sites.getInstanceDeploymentSlot(resourceGroupName, name, id, slot,
      instanceId, options, options.customHeaders, callback)
    children:
      - 'Sites#getInstanceDeploymentSlot~client'
      - 'Sites#getInstanceDeploymentSlot~callback'
      - 'Sites#getInstanceDeploymentSlot~options'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~queryParameters'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~regex'
      - 'Sites#getInstanceDeploymentSlot~requestUrl'
      - 'Sites#getInstanceDeploymentSlot~httpRequest'
      - 'Sites#getInstanceDeploymentSlot~headerName'
  - uid: 'Sites#createInstanceDeploymentSlot'
    id: createInstanceDeploymentSlot
    parent: Sites
    name: >-
      createInstanceDeploymentSlot(resourceGroupName, name, id, slot,
      instanceId, deployment, deployment.deploymentId, deployment.status,
      deployment.message, deployment.author, deployment.deployer,
      deployment.authorEmail, deployment.startTime, deployment.endTime,
      deployment.active, deployment.details, deployment.id, deployment.name,
      deployment.kind, deployment.location, deployment.type, deployment.tags,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: deployment
          type: object
          description: Details of deployment
        - id: deployment.deploymentId
          type: string
          description: Id
        - id: deployment.status
          type: number
          description: Status
        - id: deployment.message
          type: string
          description: Message
        - id: deployment.author
          type: string
          description: Author
        - id: deployment.deployer
          type: string
          description: Deployer
        - id: deployment.authorEmail
          type: string
          description: AuthorEmail
        - id: deployment.startTime
          type: date
          description: StartTime
        - id: deployment.endTime
          type: date
          description: EndTime
        - id: deployment.active
          type: boolean
          description: Active
        - id: deployment.details
          type: string
          description: Detail
        - id: deployment.id
          type: string
          description: Resource Id
        - id: deployment.name
          type: string
          description: Resource Name
        - id: deployment.kind
          type: string
          description: Kind of resource
        - id: deployment.location
          type: string
          description: Resource Location
        - id: deployment.type
          type: string
          description: Resource type
        - id: deployment.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Deployment} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createInstanceDeploymentSlot(resourceGroupName, name, id, slot,
        instanceId, deployment, deployment.deploymentId, deployment.status,
        deployment.message, deployment.author, deployment.deployer,
        deployment.authorEmail, deployment.startTime, deployment.endTime,
        deployment.active, deployment.details, deployment.id, deployment.name,
        deployment.kind, deployment.location, deployment.type, deployment.tags,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.createInstanceDeploymentSlot(resourceGroupName, name, id, slot,
      instanceId, deployment, deployment.deploymentId, deployment.status,
      deployment.message, deployment.author, deployment.deployer,
      deployment.authorEmail, deployment.startTime, deployment.endTime,
      deployment.active, deployment.details, deployment.id, deployment.name,
      deployment.kind, deployment.location, deployment.type, deployment.tags,
      options, options.customHeaders, callback)
    children:
      - 'Sites#createInstanceDeploymentSlot~client'
      - 'Sites#createInstanceDeploymentSlot~callback'
      - 'Sites#createInstanceDeploymentSlot~options'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~queryParameters'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~regex'
      - 'Sites#createInstanceDeploymentSlot~requestUrl'
      - 'Sites#createInstanceDeploymentSlot~httpRequest'
      - 'Sites#createInstanceDeploymentSlot~headerName'
      - 'Sites#createInstanceDeploymentSlot~requestContent'
      - 'Sites#createInstanceDeploymentSlot~requestModel'
      - 'Sites#createInstanceDeploymentSlot~requestModelMapper'
      - 'Sites#createInstanceDeploymentSlot~requestModel'
      - 'Sites#createInstanceDeploymentSlot~requestContent'
      - 'Sites#createInstanceDeploymentSlot~serializationError'
  - uid: 'Sites#deleteInstanceDeploymentSlot'
    id: deleteInstanceDeploymentSlot
    parent: Sites
    name: >-
      deleteInstanceDeploymentSlot(resourceGroupName, name, id, slot,
      instanceId, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: id
          type: string
          description: Id of the deployment
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: instanceId
          type: string
          description: Id of web app instance
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteInstanceDeploymentSlot(resourceGroupName, name, id, slot,
        instanceId, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteInstanceDeploymentSlot(resourceGroupName, name, id, slot,
      instanceId, options, options.customHeaders, callback)
    children:
      - 'Sites#deleteInstanceDeploymentSlot~client'
      - 'Sites#deleteInstanceDeploymentSlot~callback'
      - 'Sites#deleteInstanceDeploymentSlot~options'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~queryParameters'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~regex'
      - 'Sites#deleteInstanceDeploymentSlot~requestUrl'
      - 'Sites#deleteInstanceDeploymentSlot~httpRequest'
      - 'Sites#deleteInstanceDeploymentSlot~headerName'
  - uid: 'Sites#getSiteInstanceIdentifiers'
    id: getSiteInstanceIdentifiers
    parent: Sites
    name: >-
      getSiteInstanceIdentifiers(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteInstanceCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteInstanceIdentifiers(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteInstanceIdentifiers(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteInstanceIdentifiers~client'
      - 'Sites#getSiteInstanceIdentifiers~callback'
      - 'Sites#getSiteInstanceIdentifiers~options'
      - 'Sites#getSiteInstanceIdentifiers~requestUrl'
      - 'Sites#getSiteInstanceIdentifiers~requestUrl'
      - 'Sites#getSiteInstanceIdentifiers~requestUrl'
      - 'Sites#getSiteInstanceIdentifiers~requestUrl'
      - 'Sites#getSiteInstanceIdentifiers~queryParameters'
      - 'Sites#getSiteInstanceIdentifiers~requestUrl'
      - 'Sites#getSiteInstanceIdentifiers~regex'
      - 'Sites#getSiteInstanceIdentifiers~requestUrl'
      - 'Sites#getSiteInstanceIdentifiers~httpRequest'
      - 'Sites#getSiteInstanceIdentifiers~headerName'
  - uid: 'Sites#getSiteInstanceIdentifiersSlot'
    id: getSiteInstanceIdentifiersSlot
    parent: Sites
    name: >-
      getSiteInstanceIdentifiersSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteInstanceCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteInstanceIdentifiersSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteInstanceIdentifiersSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteInstanceIdentifiersSlot~client'
      - 'Sites#getSiteInstanceIdentifiersSlot~callback'
      - 'Sites#getSiteInstanceIdentifiersSlot~options'
      - 'Sites#getSiteInstanceIdentifiersSlot~requestUrl'
      - 'Sites#getSiteInstanceIdentifiersSlot~requestUrl'
      - 'Sites#getSiteInstanceIdentifiersSlot~requestUrl'
      - 'Sites#getSiteInstanceIdentifiersSlot~requestUrl'
      - 'Sites#getSiteInstanceIdentifiersSlot~requestUrl'
      - 'Sites#getSiteInstanceIdentifiersSlot~queryParameters'
      - 'Sites#getSiteInstanceIdentifiersSlot~requestUrl'
      - 'Sites#getSiteInstanceIdentifiersSlot~regex'
      - 'Sites#getSiteInstanceIdentifiersSlot~requestUrl'
      - 'Sites#getSiteInstanceIdentifiersSlot~httpRequest'
      - 'Sites#getSiteInstanceIdentifiersSlot~headerName'
  - uid: 'Sites#getSiteHostNameBindings'
    id: getSiteHostNameBindings
    parent: Sites
    name: >-
      getSiteHostNameBindings(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link HostNameBindingCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteHostNameBindings(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteHostNameBindings(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteHostNameBindings~client'
      - 'Sites#getSiteHostNameBindings~callback'
      - 'Sites#getSiteHostNameBindings~options'
      - 'Sites#getSiteHostNameBindings~requestUrl'
      - 'Sites#getSiteHostNameBindings~requestUrl'
      - 'Sites#getSiteHostNameBindings~requestUrl'
      - 'Sites#getSiteHostNameBindings~requestUrl'
      - 'Sites#getSiteHostNameBindings~queryParameters'
      - 'Sites#getSiteHostNameBindings~requestUrl'
      - 'Sites#getSiteHostNameBindings~regex'
      - 'Sites#getSiteHostNameBindings~requestUrl'
      - 'Sites#getSiteHostNameBindings~httpRequest'
      - 'Sites#getSiteHostNameBindings~headerName'
  - uid: 'Sites#getSiteHostNameBindingsSlot'
    id: getSiteHostNameBindingsSlot
    parent: Sites
    name: >-
      getSiteHostNameBindingsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link HostNameBindingCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteHostNameBindingsSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteHostNameBindingsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteHostNameBindingsSlot~client'
      - 'Sites#getSiteHostNameBindingsSlot~callback'
      - 'Sites#getSiteHostNameBindingsSlot~options'
      - 'Sites#getSiteHostNameBindingsSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingsSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingsSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingsSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingsSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingsSlot~queryParameters'
      - 'Sites#getSiteHostNameBindingsSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingsSlot~regex'
      - 'Sites#getSiteHostNameBindingsSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingsSlot~httpRequest'
      - 'Sites#getSiteHostNameBindingsSlot~headerName'
  - uid: 'Sites#getSiteHostNameBinding'
    id: getSiteHostNameBinding
    parent: Sites
    name: >-
      getSiteHostNameBinding(resourceGroupName, name, hostName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: hostName
          type: string
          description: Name of host
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link HostNameBinding} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteHostNameBinding(resourceGroupName, name, hostName,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteHostNameBinding(resourceGroupName, name, hostName, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteHostNameBinding~client'
      - 'Sites#getSiteHostNameBinding~callback'
      - 'Sites#getSiteHostNameBinding~options'
      - 'Sites#getSiteHostNameBinding~requestUrl'
      - 'Sites#getSiteHostNameBinding~requestUrl'
      - 'Sites#getSiteHostNameBinding~requestUrl'
      - 'Sites#getSiteHostNameBinding~requestUrl'
      - 'Sites#getSiteHostNameBinding~requestUrl'
      - 'Sites#getSiteHostNameBinding~queryParameters'
      - 'Sites#getSiteHostNameBinding~requestUrl'
      - 'Sites#getSiteHostNameBinding~regex'
      - 'Sites#getSiteHostNameBinding~requestUrl'
      - 'Sites#getSiteHostNameBinding~httpRequest'
      - 'Sites#getSiteHostNameBinding~headerName'
  - uid: 'Sites#createOrUpdateSiteHostNameBinding'
    id: createOrUpdateSiteHostNameBinding
    parent: Sites
    name: >-
      createOrUpdateSiteHostNameBinding(resourceGroupName, name, hostName,
      hostNameBinding, hostNameBinding.hostNameBindingName,
      hostNameBinding.siteName, hostNameBinding.domainId,
      hostNameBinding.azureResourceName, hostNameBinding.azureResourceType,
      hostNameBinding.customHostNameDnsRecordType, hostNameBinding.hostNameType,
      hostNameBinding.id, hostNameBinding.name, hostNameBinding.kind,
      hostNameBinding.location, hostNameBinding.type, hostNameBinding.tags,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: hostName
          type: string
          description: Name of host
        - id: hostNameBinding
          type: object
          description: Host name binding information
        - id: hostNameBinding.hostNameBindingName
          type: string
          description: Hostname
        - id: hostNameBinding.siteName
          type: string
          description: Web app name
        - id: hostNameBinding.domainId
          type: string
          description: "Fully qualified ARM domain\rresource URI"
        - id: hostNameBinding.azureResourceName
          type: string
          description: Azure resource name
        - id: hostNameBinding.azureResourceType
          type: string
          description: "Azure resource type.\rPossible values include: 'Website', 'TrafficManager'"
        - id: hostNameBinding.customHostNameDnsRecordType
          type: string
          description: "Custom DNS\rrecord type. Possible values include: 'CName', 'A'"
        - id: hostNameBinding.hostNameType
          type: string
          description: "Host name type. Possible\rvalues include: 'Verified', 'Managed'"
        - id: hostNameBinding.id
          type: string
          description: Resource Id
        - id: hostNameBinding.name
          type: string
          description: Resource Name
        - id: hostNameBinding.kind
          type: string
          description: Kind of resource
        - id: hostNameBinding.location
          type: string
          description: Resource Location
        - id: hostNameBinding.type
          type: string
          description: Resource type
        - id: hostNameBinding.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link HostNameBinding} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteHostNameBinding(resourceGroupName, name,
        hostName, hostNameBinding, hostNameBinding.hostNameBindingName,
        hostNameBinding.siteName, hostNameBinding.domainId,
        hostNameBinding.azureResourceName, hostNameBinding.azureResourceType,
        hostNameBinding.customHostNameDnsRecordType,
        hostNameBinding.hostNameType, hostNameBinding.id, hostNameBinding.name,
        hostNameBinding.kind, hostNameBinding.location, hostNameBinding.type,
        hostNameBinding.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteHostNameBinding(resourceGroupName, name, hostName,
      hostNameBinding, hostNameBinding.hostNameBindingName,
      hostNameBinding.siteName, hostNameBinding.domainId,
      hostNameBinding.azureResourceName, hostNameBinding.azureResourceType,
      hostNameBinding.customHostNameDnsRecordType, hostNameBinding.hostNameType,
      hostNameBinding.id, hostNameBinding.name, hostNameBinding.kind,
      hostNameBinding.location, hostNameBinding.type, hostNameBinding.tags,
      options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteHostNameBinding~client'
      - 'Sites#createOrUpdateSiteHostNameBinding~callback'
      - 'Sites#createOrUpdateSiteHostNameBinding~options'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBinding~queryParameters'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBinding~regex'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBinding~httpRequest'
      - 'Sites#createOrUpdateSiteHostNameBinding~headerName'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestContent'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestModel'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestModelMapper'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestModel'
      - 'Sites#createOrUpdateSiteHostNameBinding~requestContent'
      - 'Sites#createOrUpdateSiteHostNameBinding~serializationError'
  - uid: 'Sites#deleteSiteHostNameBinding'
    id: deleteSiteHostNameBinding
    parent: Sites
    name: >-
      deleteSiteHostNameBinding(resourceGroupName, name, hostName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: hostName
          type: string
          description: Name of host
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteHostNameBinding(resourceGroupName, name, hostName,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteHostNameBinding(resourceGroupName, name, hostName,
      options, options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteHostNameBinding~client'
      - 'Sites#deleteSiteHostNameBinding~callback'
      - 'Sites#deleteSiteHostNameBinding~options'
      - 'Sites#deleteSiteHostNameBinding~requestUrl'
      - 'Sites#deleteSiteHostNameBinding~requestUrl'
      - 'Sites#deleteSiteHostNameBinding~requestUrl'
      - 'Sites#deleteSiteHostNameBinding~requestUrl'
      - 'Sites#deleteSiteHostNameBinding~requestUrl'
      - 'Sites#deleteSiteHostNameBinding~queryParameters'
      - 'Sites#deleteSiteHostNameBinding~requestUrl'
      - 'Sites#deleteSiteHostNameBinding~regex'
      - 'Sites#deleteSiteHostNameBinding~requestUrl'
      - 'Sites#deleteSiteHostNameBinding~httpRequest'
      - 'Sites#deleteSiteHostNameBinding~headerName'
  - uid: 'Sites#getSiteHostNameBindingSlot'
    id: getSiteHostNameBindingSlot
    parent: Sites
    name: >-
      getSiteHostNameBindingSlot(resourceGroupName, name, slot, hostName,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: hostName
          type: string
          description: Name of host
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link HostNameBinding} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteHostNameBindingSlot(resourceGroupName, name, slot,
        hostName, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteHostNameBindingSlot(resourceGroupName, name, slot, hostName,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteHostNameBindingSlot~client'
      - 'Sites#getSiteHostNameBindingSlot~callback'
      - 'Sites#getSiteHostNameBindingSlot~options'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~queryParameters'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~regex'
      - 'Sites#getSiteHostNameBindingSlot~requestUrl'
      - 'Sites#getSiteHostNameBindingSlot~httpRequest'
      - 'Sites#getSiteHostNameBindingSlot~headerName'
  - uid: 'Sites#createOrUpdateSiteHostNameBindingSlot'
    id: createOrUpdateSiteHostNameBindingSlot
    parent: Sites
    name: >-
      createOrUpdateSiteHostNameBindingSlot(resourceGroupName, name, hostName,
      hostNameBinding, hostNameBinding.hostNameBindingName,
      hostNameBinding.siteName, hostNameBinding.domainId,
      hostNameBinding.azureResourceName, hostNameBinding.azureResourceType,
      hostNameBinding.customHostNameDnsRecordType, hostNameBinding.hostNameType,
      hostNameBinding.id, hostNameBinding.name, hostNameBinding.kind,
      hostNameBinding.location, hostNameBinding.type, hostNameBinding.tags,
      slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: hostName
          type: string
          description: Name of host
        - id: hostNameBinding
          type: object
          description: Host name binding information
        - id: hostNameBinding.hostNameBindingName
          type: string
          description: Hostname
        - id: hostNameBinding.siteName
          type: string
          description: Web app name
        - id: hostNameBinding.domainId
          type: string
          description: "Fully qualified ARM domain\rresource URI"
        - id: hostNameBinding.azureResourceName
          type: string
          description: Azure resource name
        - id: hostNameBinding.azureResourceType
          type: string
          description: "Azure resource type.\rPossible values include: 'Website', 'TrafficManager'"
        - id: hostNameBinding.customHostNameDnsRecordType
          type: string
          description: "Custom DNS\rrecord type. Possible values include: 'CName', 'A'"
        - id: hostNameBinding.hostNameType
          type: string
          description: "Host name type. Possible\rvalues include: 'Verified', 'Managed'"
        - id: hostNameBinding.id
          type: string
          description: Resource Id
        - id: hostNameBinding.name
          type: string
          description: Resource Name
        - id: hostNameBinding.kind
          type: string
          description: Kind of resource
        - id: hostNameBinding.location
          type: string
          description: Resource Location
        - id: hostNameBinding.type
          type: string
          description: Resource type
        - id: hostNameBinding.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link HostNameBinding} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteHostNameBindingSlot(resourceGroupName, name,
        hostName, hostNameBinding, hostNameBinding.hostNameBindingName,
        hostNameBinding.siteName, hostNameBinding.domainId,
        hostNameBinding.azureResourceName, hostNameBinding.azureResourceType,
        hostNameBinding.customHostNameDnsRecordType,
        hostNameBinding.hostNameType, hostNameBinding.id, hostNameBinding.name,
        hostNameBinding.kind, hostNameBinding.location, hostNameBinding.type,
        hostNameBinding.tags, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteHostNameBindingSlot(resourceGroupName, name,
      hostName, hostNameBinding, hostNameBinding.hostNameBindingName,
      hostNameBinding.siteName, hostNameBinding.domainId,
      hostNameBinding.azureResourceName, hostNameBinding.azureResourceType,
      hostNameBinding.customHostNameDnsRecordType, hostNameBinding.hostNameType,
      hostNameBinding.id, hostNameBinding.name, hostNameBinding.kind,
      hostNameBinding.location, hostNameBinding.type, hostNameBinding.tags,
      slot, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~client'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~callback'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~options'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~queryParameters'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~regex'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestUrl'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~httpRequest'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~headerName'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestContent'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestModel'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestModelMapper'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestModel'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~requestContent'
      - 'Sites#createOrUpdateSiteHostNameBindingSlot~serializationError'
  - uid: 'Sites#deleteSiteHostNameBindingSlot'
    id: deleteSiteHostNameBindingSlot
    parent: Sites
    name: >-
      deleteSiteHostNameBindingSlot(resourceGroupName, name, slot, hostName,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: hostName
          type: string
          description: Name of host
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteHostNameBindingSlot(resourceGroupName, name, slot,
        hostName, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteHostNameBindingSlot(resourceGroupName, name, slot,
      hostName, options, options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteHostNameBindingSlot~client'
      - 'Sites#deleteSiteHostNameBindingSlot~callback'
      - 'Sites#deleteSiteHostNameBindingSlot~options'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~queryParameters'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~regex'
      - 'Sites#deleteSiteHostNameBindingSlot~requestUrl'
      - 'Sites#deleteSiteHostNameBindingSlot~httpRequest'
      - 'Sites#deleteSiteHostNameBindingSlot~headerName'
  - uid: 'Sites#getSiteConfig'
    id: getSiteConfig
    parent: Sites
    name: >-
      getSiteConfig(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteConfig(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteConfig(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteConfig~client'
      - 'Sites#getSiteConfig~callback'
      - 'Sites#getSiteConfig~options'
      - 'Sites#getSiteConfig~requestUrl'
      - 'Sites#getSiteConfig~requestUrl'
      - 'Sites#getSiteConfig~requestUrl'
      - 'Sites#getSiteConfig~requestUrl'
      - 'Sites#getSiteConfig~queryParameters'
      - 'Sites#getSiteConfig~requestUrl'
      - 'Sites#getSiteConfig~regex'
      - 'Sites#getSiteConfig~requestUrl'
      - 'Sites#getSiteConfig~httpRequest'
      - 'Sites#getSiteConfig~headerName'
  - uid: 'Sites#createOrUpdateSiteConfig'
    id: createOrUpdateSiteConfig
    parent: Sites
    name: >-
      createOrUpdateSiteConfig(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteConfig
          type: object
          description: "Request body that contains the configuraiton\rsetting for the web app"
        - id: siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteConfig.netFrameworkVersion
          type: string
          description: Net Framework Version
        - id: siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteConfig.requestTracingEnabled
          type: boolean
          description: Enable request tracing
        - id: siteConfig.requestTracingExpirationTime
          type: date
          description: "Request tracing\rexpiration time"
        - id: siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote Debugging\rEnabled"
        - id: siteConfig.remoteDebuggingVersion
          type: string
          description: Remote Debugging Version
        - id: siteConfig.httpLoggingEnabled
          type: boolean
          description: HTTP logging Enabled
        - id: siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs Directory\rsize limit"
        - id: siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: "Detailed error\rlogging enabled"
        - id: siteConfig.publishingUsername
          type: string
          description: Publishing user name
        - id: siteConfig.publishingPassword
          type: string
          description: Publishing password
        - id: siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteConfig.connectionStrings
          type: array
          description: Connection strings
        - id: siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteConfig.scmType
          type: string
          description: SCM type
        - id: siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit worker\rprocess"
        - id: siteConfig.webSocketsEnabled
          type: boolean
          description: Web socket enabled.
        - id: siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteConfig.javaContainerVersion
          type: string
          description: Java container version
        - id: siteConfig.managedPipelineMode
          type: string
          description: "Managed pipeline mode.\rPossible values include: 'Integrated', 'Classic'"
        - id: siteConfig.virtualApplications
          type: array
          description: Virtual applications
        - id: siteConfig.loadBalancing
          type: string
          description: "Site load balancing. Possible\rvalues include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteConfig.experiments
          type: object
          description: "This is work around for polymophic\rtypes"
        - id: siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteConfig.limits
          type: object
          description: Site limits
        - id: siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum allowed CPU\rusage percentage"
        - id: siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum allowed memory\rusage in MB"
        - id: siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum allowed disk\rsize usage in MB"
        - id: siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers - Conditions\rthat describe when to execute the auto-heal actions"
        - id: siteConfig.autoHealRules.triggers.requests
          type: object
          description: "Requests -\rDefines a rule based on total requests"
        - id: siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: "StatusCodes\r- Defines a rule based on status codes"
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: SlowRequests - Defines a rule based on request execution time
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.actions
          type: object
          description: "Actions - Actions to be\rexecuted when a rule is triggered"
        - id: siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType -\rpredefined action to be taken. Possible values include: 'Recycle',\r'LogEvent', 'CustomAction'"
        - id: siteConfig.autoHealRules.actions.customAction
          type: object
          description: CustomAction - custom action to be taken
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteConfig.cors
          type: object
          description: "Cross-Origin Resource Sharing (CORS)\rsettings."
        - id: siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets the list of\rorigins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteConfig.apiDefinition
          type: object
          description: "Information about the formal API\rdefinition for the web app."
        - id: siteConfig.apiDefinition.url
          type: string
          description: "The URL of the API\rdefinition."
        - id: siteConfig.autoSwapSlotName
          type: string
          description: Auto swap slot name
        - id: siteConfig.localMySqlEnabled
          type: boolean
          description: Local mysql enabled
        - id: siteConfig.ipSecurityRestrictions
          type: array
          description: Ip Security restrictions
        - id: siteConfig.id
          type: string
          description: Resource Id
        - id: siteConfig.name
          type: string
          description: Resource Name
        - id: siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteConfig.location
          type: string
          description: Resource Location
        - id: siteConfig.type
          type: string
          description: Resource type
        - id: siteConfig.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteConfig(resourceGroupName, name, siteConfig,
        siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
        siteConfig.netFrameworkVersion, siteConfig.phpVersion,
        siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
        siteConfig.requestTracingExpirationTime,
        siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
        siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
        siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
        siteConfig.publishingPassword, siteConfig.appSettings,
        siteConfig.metadata, siteConfig.connectionStrings,
        siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
        siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
        siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
        siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
        siteConfig.virtualApplications, siteConfig.loadBalancing,
        siteConfig.experiments, siteConfig.experiments.rampUpRules,
        siteConfig.limits, siteConfig.limits.maxPercentageCpu,
        siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
        siteConfig.autoHealEnabled, siteConfig.autoHealRules,
        siteConfig.autoHealRules.triggers,
        siteConfig.autoHealRules.triggers.requests,
        siteConfig.autoHealRules.triggers.requests.count,
        siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteConfig.autoHealRules.triggers.statusCodes,
        siteConfig.autoHealRules.triggers.slowRequests,
        siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteConfig.autoHealRules.triggers.slowRequests.count,
        siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteConfig.autoHealRules.actions,
        siteConfig.autoHealRules.actions.actionType,
        siteConfig.autoHealRules.actions.customAction,
        siteConfig.autoHealRules.actions.customAction.exe,
        siteConfig.autoHealRules.actions.customAction.parameters,
        siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
        siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
        siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
        siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
        siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
        siteConfig.type, siteConfig.tags, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.createOrUpdateSiteConfig(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, options, options.customHeaders,
      callback)
    children:
      - 'Sites#createOrUpdateSiteConfig~client'
      - 'Sites#createOrUpdateSiteConfig~callback'
      - 'Sites#createOrUpdateSiteConfig~options'
      - 'Sites#createOrUpdateSiteConfig~requestUrl'
      - 'Sites#createOrUpdateSiteConfig~requestUrl'
      - 'Sites#createOrUpdateSiteConfig~requestUrl'
      - 'Sites#createOrUpdateSiteConfig~requestUrl'
      - 'Sites#createOrUpdateSiteConfig~queryParameters'
      - 'Sites#createOrUpdateSiteConfig~requestUrl'
      - 'Sites#createOrUpdateSiteConfig~regex'
      - 'Sites#createOrUpdateSiteConfig~requestUrl'
      - 'Sites#createOrUpdateSiteConfig~httpRequest'
      - 'Sites#createOrUpdateSiteConfig~headerName'
      - 'Sites#createOrUpdateSiteConfig~requestContent'
      - 'Sites#createOrUpdateSiteConfig~requestModel'
      - 'Sites#createOrUpdateSiteConfig~requestModelMapper'
      - 'Sites#createOrUpdateSiteConfig~requestModel'
      - 'Sites#createOrUpdateSiteConfig~requestContent'
      - 'Sites#createOrUpdateSiteConfig~serializationError'
  - uid: 'Sites#updateSiteConfig'
    id: updateSiteConfig
    parent: Sites
    name: >-
      updateSiteConfig(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteConfig
          type: object
          description: "Request body that contains the configuraiton\rsetting for the web app"
        - id: siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteConfig.netFrameworkVersion
          type: string
          description: Net Framework Version
        - id: siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteConfig.requestTracingEnabled
          type: boolean
          description: Enable request tracing
        - id: siteConfig.requestTracingExpirationTime
          type: date
          description: "Request tracing\rexpiration time"
        - id: siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote Debugging\rEnabled"
        - id: siteConfig.remoteDebuggingVersion
          type: string
          description: Remote Debugging Version
        - id: siteConfig.httpLoggingEnabled
          type: boolean
          description: HTTP logging Enabled
        - id: siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs Directory\rsize limit"
        - id: siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: "Detailed error\rlogging enabled"
        - id: siteConfig.publishingUsername
          type: string
          description: Publishing user name
        - id: siteConfig.publishingPassword
          type: string
          description: Publishing password
        - id: siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteConfig.connectionStrings
          type: array
          description: Connection strings
        - id: siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteConfig.scmType
          type: string
          description: SCM type
        - id: siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit worker\rprocess"
        - id: siteConfig.webSocketsEnabled
          type: boolean
          description: Web socket enabled.
        - id: siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteConfig.javaContainerVersion
          type: string
          description: Java container version
        - id: siteConfig.managedPipelineMode
          type: string
          description: "Managed pipeline mode.\rPossible values include: 'Integrated', 'Classic'"
        - id: siteConfig.virtualApplications
          type: array
          description: Virtual applications
        - id: siteConfig.loadBalancing
          type: string
          description: "Site load balancing. Possible\rvalues include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteConfig.experiments
          type: object
          description: "This is work around for polymophic\rtypes"
        - id: siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteConfig.limits
          type: object
          description: Site limits
        - id: siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum allowed CPU\rusage percentage"
        - id: siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum allowed memory\rusage in MB"
        - id: siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum allowed disk\rsize usage in MB"
        - id: siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers - Conditions\rthat describe when to execute the auto-heal actions"
        - id: siteConfig.autoHealRules.triggers.requests
          type: object
          description: "Requests -\rDefines a rule based on total requests"
        - id: siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: "StatusCodes\r- Defines a rule based on status codes"
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: SlowRequests - Defines a rule based on request execution time
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.actions
          type: object
          description: "Actions - Actions to be\rexecuted when a rule is triggered"
        - id: siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType -\rpredefined action to be taken. Possible values include: 'Recycle',\r'LogEvent', 'CustomAction'"
        - id: siteConfig.autoHealRules.actions.customAction
          type: object
          description: CustomAction - custom action to be taken
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteConfig.cors
          type: object
          description: "Cross-Origin Resource Sharing (CORS)\rsettings."
        - id: siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets the list of\rorigins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteConfig.apiDefinition
          type: object
          description: "Information about the formal API\rdefinition for the web app."
        - id: siteConfig.apiDefinition.url
          type: string
          description: "The URL of the API\rdefinition."
        - id: siteConfig.autoSwapSlotName
          type: string
          description: Auto swap slot name
        - id: siteConfig.localMySqlEnabled
          type: boolean
          description: Local mysql enabled
        - id: siteConfig.ipSecurityRestrictions
          type: array
          description: Ip Security restrictions
        - id: siteConfig.id
          type: string
          description: Resource Id
        - id: siteConfig.name
          type: string
          description: Resource Name
        - id: siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteConfig.location
          type: string
          description: Resource Location
        - id: siteConfig.type
          type: string
          description: Resource type
        - id: siteConfig.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteConfig(resourceGroupName, name, siteConfig,
        siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
        siteConfig.netFrameworkVersion, siteConfig.phpVersion,
        siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
        siteConfig.requestTracingExpirationTime,
        siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
        siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
        siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
        siteConfig.publishingPassword, siteConfig.appSettings,
        siteConfig.metadata, siteConfig.connectionStrings,
        siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
        siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
        siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
        siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
        siteConfig.virtualApplications, siteConfig.loadBalancing,
        siteConfig.experiments, siteConfig.experiments.rampUpRules,
        siteConfig.limits, siteConfig.limits.maxPercentageCpu,
        siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
        siteConfig.autoHealEnabled, siteConfig.autoHealRules,
        siteConfig.autoHealRules.triggers,
        siteConfig.autoHealRules.triggers.requests,
        siteConfig.autoHealRules.triggers.requests.count,
        siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteConfig.autoHealRules.triggers.statusCodes,
        siteConfig.autoHealRules.triggers.slowRequests,
        siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteConfig.autoHealRules.triggers.slowRequests.count,
        siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteConfig.autoHealRules.actions,
        siteConfig.autoHealRules.actions.actionType,
        siteConfig.autoHealRules.actions.customAction,
        siteConfig.autoHealRules.actions.customAction.exe,
        siteConfig.autoHealRules.actions.customAction.parameters,
        siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
        siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
        siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
        siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
        siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
        siteConfig.type, siteConfig.tags, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.updateSiteConfig(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, options, options.customHeaders,
      callback)
    children:
      - 'Sites#updateSiteConfig~client'
      - 'Sites#updateSiteConfig~callback'
      - 'Sites#updateSiteConfig~options'
      - 'Sites#updateSiteConfig~requestUrl'
      - 'Sites#updateSiteConfig~requestUrl'
      - 'Sites#updateSiteConfig~requestUrl'
      - 'Sites#updateSiteConfig~requestUrl'
      - 'Sites#updateSiteConfig~queryParameters'
      - 'Sites#updateSiteConfig~requestUrl'
      - 'Sites#updateSiteConfig~regex'
      - 'Sites#updateSiteConfig~requestUrl'
      - 'Sites#updateSiteConfig~httpRequest'
      - 'Sites#updateSiteConfig~headerName'
      - 'Sites#updateSiteConfig~requestContent'
      - 'Sites#updateSiteConfig~requestModel'
      - 'Sites#updateSiteConfig~requestModelMapper'
      - 'Sites#updateSiteConfig~requestModel'
      - 'Sites#updateSiteConfig~requestContent'
      - 'Sites#updateSiteConfig~serializationError'
  - uid: 'Sites#getSiteConfigSlot'
    id: getSiteConfigSlot
    parent: Sites
    name: >-
      getSiteConfigSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteConfigSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteConfigSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteConfigSlot~client'
      - 'Sites#getSiteConfigSlot~callback'
      - 'Sites#getSiteConfigSlot~options'
      - 'Sites#getSiteConfigSlot~requestUrl'
      - 'Sites#getSiteConfigSlot~requestUrl'
      - 'Sites#getSiteConfigSlot~requestUrl'
      - 'Sites#getSiteConfigSlot~requestUrl'
      - 'Sites#getSiteConfigSlot~requestUrl'
      - 'Sites#getSiteConfigSlot~queryParameters'
      - 'Sites#getSiteConfigSlot~requestUrl'
      - 'Sites#getSiteConfigSlot~regex'
      - 'Sites#getSiteConfigSlot~requestUrl'
      - 'Sites#getSiteConfigSlot~httpRequest'
      - 'Sites#getSiteConfigSlot~headerName'
  - uid: 'Sites#createOrUpdateSiteConfigSlot'
    id: createOrUpdateSiteConfigSlot
    parent: Sites
    name: >-
      createOrUpdateSiteConfigSlot(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, slot, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteConfig
          type: object
          description: "Request body that contains the configuraiton\rsetting for the web app"
        - id: siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteConfig.netFrameworkVersion
          type: string
          description: Net Framework Version
        - id: siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteConfig.requestTracingEnabled
          type: boolean
          description: Enable request tracing
        - id: siteConfig.requestTracingExpirationTime
          type: date
          description: "Request tracing\rexpiration time"
        - id: siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote Debugging\rEnabled"
        - id: siteConfig.remoteDebuggingVersion
          type: string
          description: Remote Debugging Version
        - id: siteConfig.httpLoggingEnabled
          type: boolean
          description: HTTP logging Enabled
        - id: siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs Directory\rsize limit"
        - id: siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: "Detailed error\rlogging enabled"
        - id: siteConfig.publishingUsername
          type: string
          description: Publishing user name
        - id: siteConfig.publishingPassword
          type: string
          description: Publishing password
        - id: siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteConfig.connectionStrings
          type: array
          description: Connection strings
        - id: siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteConfig.scmType
          type: string
          description: SCM type
        - id: siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit worker\rprocess"
        - id: siteConfig.webSocketsEnabled
          type: boolean
          description: Web socket enabled.
        - id: siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteConfig.javaContainerVersion
          type: string
          description: Java container version
        - id: siteConfig.managedPipelineMode
          type: string
          description: "Managed pipeline mode.\rPossible values include: 'Integrated', 'Classic'"
        - id: siteConfig.virtualApplications
          type: array
          description: Virtual applications
        - id: siteConfig.loadBalancing
          type: string
          description: "Site load balancing. Possible\rvalues include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteConfig.experiments
          type: object
          description: "This is work around for polymophic\rtypes"
        - id: siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteConfig.limits
          type: object
          description: Site limits
        - id: siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum allowed CPU\rusage percentage"
        - id: siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum allowed memory\rusage in MB"
        - id: siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum allowed disk\rsize usage in MB"
        - id: siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers - Conditions\rthat describe when to execute the auto-heal actions"
        - id: siteConfig.autoHealRules.triggers.requests
          type: object
          description: "Requests -\rDefines a rule based on total requests"
        - id: siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: "StatusCodes\r- Defines a rule based on status codes"
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: SlowRequests - Defines a rule based on request execution time
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.actions
          type: object
          description: "Actions - Actions to be\rexecuted when a rule is triggered"
        - id: siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType -\rpredefined action to be taken. Possible values include: 'Recycle',\r'LogEvent', 'CustomAction'"
        - id: siteConfig.autoHealRules.actions.customAction
          type: object
          description: CustomAction - custom action to be taken
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteConfig.cors
          type: object
          description: "Cross-Origin Resource Sharing (CORS)\rsettings."
        - id: siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets the list of\rorigins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteConfig.apiDefinition
          type: object
          description: "Information about the formal API\rdefinition for the web app."
        - id: siteConfig.apiDefinition.url
          type: string
          description: "The URL of the API\rdefinition."
        - id: siteConfig.autoSwapSlotName
          type: string
          description: Auto swap slot name
        - id: siteConfig.localMySqlEnabled
          type: boolean
          description: Local mysql enabled
        - id: siteConfig.ipSecurityRestrictions
          type: array
          description: Ip Security restrictions
        - id: siteConfig.id
          type: string
          description: Resource Id
        - id: siteConfig.name
          type: string
          description: Resource Name
        - id: siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteConfig.location
          type: string
          description: Resource Location
        - id: siteConfig.type
          type: string
          description: Resource type
        - id: siteConfig.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteConfigSlot(resourceGroupName, name,
        siteConfig, siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
        siteConfig.netFrameworkVersion, siteConfig.phpVersion,
        siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
        siteConfig.requestTracingExpirationTime,
        siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
        siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
        siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
        siteConfig.publishingPassword, siteConfig.appSettings,
        siteConfig.metadata, siteConfig.connectionStrings,
        siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
        siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
        siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
        siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
        siteConfig.virtualApplications, siteConfig.loadBalancing,
        siteConfig.experiments, siteConfig.experiments.rampUpRules,
        siteConfig.limits, siteConfig.limits.maxPercentageCpu,
        siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
        siteConfig.autoHealEnabled, siteConfig.autoHealRules,
        siteConfig.autoHealRules.triggers,
        siteConfig.autoHealRules.triggers.requests,
        siteConfig.autoHealRules.triggers.requests.count,
        siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteConfig.autoHealRules.triggers.statusCodes,
        siteConfig.autoHealRules.triggers.slowRequests,
        siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteConfig.autoHealRules.triggers.slowRequests.count,
        siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteConfig.autoHealRules.actions,
        siteConfig.autoHealRules.actions.actionType,
        siteConfig.autoHealRules.actions.customAction,
        siteConfig.autoHealRules.actions.customAction.exe,
        siteConfig.autoHealRules.actions.customAction.parameters,
        siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
        siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
        siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
        siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
        siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
        siteConfig.type, siteConfig.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.createOrUpdateSiteConfigSlot(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, slot, options, options.customHeaders,
      callback)
    children:
      - 'Sites#createOrUpdateSiteConfigSlot~client'
      - 'Sites#createOrUpdateSiteConfigSlot~callback'
      - 'Sites#createOrUpdateSiteConfigSlot~options'
      - 'Sites#createOrUpdateSiteConfigSlot~requestUrl'
      - 'Sites#createOrUpdateSiteConfigSlot~requestUrl'
      - 'Sites#createOrUpdateSiteConfigSlot~requestUrl'
      - 'Sites#createOrUpdateSiteConfigSlot~requestUrl'
      - 'Sites#createOrUpdateSiteConfigSlot~requestUrl'
      - 'Sites#createOrUpdateSiteConfigSlot~queryParameters'
      - 'Sites#createOrUpdateSiteConfigSlot~requestUrl'
      - 'Sites#createOrUpdateSiteConfigSlot~regex'
      - 'Sites#createOrUpdateSiteConfigSlot~requestUrl'
      - 'Sites#createOrUpdateSiteConfigSlot~httpRequest'
      - 'Sites#createOrUpdateSiteConfigSlot~headerName'
      - 'Sites#createOrUpdateSiteConfigSlot~requestContent'
      - 'Sites#createOrUpdateSiteConfigSlot~requestModel'
      - 'Sites#createOrUpdateSiteConfigSlot~requestModelMapper'
      - 'Sites#createOrUpdateSiteConfigSlot~requestModel'
      - 'Sites#createOrUpdateSiteConfigSlot~requestContent'
      - 'Sites#createOrUpdateSiteConfigSlot~serializationError'
  - uid: 'Sites#updateSiteConfigSlot'
    id: updateSiteConfigSlot
    parent: Sites
    name: >-
      updateSiteConfigSlot(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, slot, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteConfig
          type: object
          description: "Request body that contains the configuraiton\rsetting for the web app"
        - id: siteConfig.numberOfWorkers
          type: number
          description: Number of workers
        - id: siteConfig.defaultDocuments
          type: array
          description: Default documents
        - id: siteConfig.netFrameworkVersion
          type: string
          description: Net Framework Version
        - id: siteConfig.phpVersion
          type: string
          description: Version of PHP
        - id: siteConfig.pythonVersion
          type: string
          description: Version of Python
        - id: siteConfig.requestTracingEnabled
          type: boolean
          description: Enable request tracing
        - id: siteConfig.requestTracingExpirationTime
          type: date
          description: "Request tracing\rexpiration time"
        - id: siteConfig.remoteDebuggingEnabled
          type: boolean
          description: "Remote Debugging\rEnabled"
        - id: siteConfig.remoteDebuggingVersion
          type: string
          description: Remote Debugging Version
        - id: siteConfig.httpLoggingEnabled
          type: boolean
          description: HTTP logging Enabled
        - id: siteConfig.logsDirectorySizeLimit
          type: number
          description: "HTTP Logs Directory\rsize limit"
        - id: siteConfig.detailedErrorLoggingEnabled
          type: boolean
          description: "Detailed error\rlogging enabled"
        - id: siteConfig.publishingUsername
          type: string
          description: Publishing user name
        - id: siteConfig.publishingPassword
          type: string
          description: Publishing password
        - id: siteConfig.appSettings
          type: array
          description: Application Settings
        - id: siteConfig.metadata
          type: array
          description: Site Metadata
        - id: siteConfig.connectionStrings
          type: array
          description: Connection strings
        - id: siteConfig.handlerMappings
          type: array
          description: Handler mappings
        - id: siteConfig.documentRoot
          type: string
          description: Document root
        - id: siteConfig.scmType
          type: string
          description: SCM type
        - id: siteConfig.use32BitWorkerProcess
          type: boolean
          description: "Use 32 bit worker\rprocess"
        - id: siteConfig.webSocketsEnabled
          type: boolean
          description: Web socket enabled.
        - id: siteConfig.alwaysOn
          type: boolean
          description: Always On
        - id: siteConfig.javaVersion
          type: string
          description: Java version
        - id: siteConfig.javaContainer
          type: string
          description: Java container
        - id: siteConfig.javaContainerVersion
          type: string
          description: Java container version
        - id: siteConfig.managedPipelineMode
          type: string
          description: "Managed pipeline mode.\rPossible values include: 'Integrated', 'Classic'"
        - id: siteConfig.virtualApplications
          type: array
          description: Virtual applications
        - id: siteConfig.loadBalancing
          type: string
          description: "Site load balancing. Possible\rvalues include: 'WeightedRoundRobin', 'LeastRequests',\r'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'"
        - id: siteConfig.experiments
          type: object
          description: "This is work around for polymophic\rtypes"
        - id: siteConfig.experiments.rampUpRules
          type: array
          description: "List of\r{Microsoft.Web.Hosting.Administration.RampUpRule} objects."
        - id: siteConfig.limits
          type: object
          description: Site limits
        - id: siteConfig.limits.maxPercentageCpu
          type: number
          description: "Maximum allowed CPU\rusage percentage"
        - id: siteConfig.limits.maxMemoryInMb
          type: number
          description: "Maximum allowed memory\rusage in MB"
        - id: siteConfig.limits.maxDiskSizeInMb
          type: number
          description: "Maximum allowed disk\rsize usage in MB"
        - id: siteConfig.autoHealEnabled
          type: boolean
          description: Auto heal enabled
        - id: siteConfig.autoHealRules
          type: object
          description: Auto heal rules
        - id: siteConfig.autoHealRules.triggers
          type: object
          description: "Triggers - Conditions\rthat describe when to execute the auto-heal actions"
        - id: siteConfig.autoHealRules.triggers.requests
          type: object
          description: "Requests -\rDefines a rule based on total requests"
        - id: siteConfig.autoHealRules.triggers.requests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type: number
          description: PrivateBytesInKB - Defines a rule based on private bytes
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type: array
          description: "StatusCodes\r- Defines a rule based on status codes"
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type: object
          description: SlowRequests - Defines a rule based on request execution time
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type: string
          description: TimeTaken
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type: number
          description: Count
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type: string
          description: TimeInterval
        - id: siteConfig.autoHealRules.actions
          type: object
          description: "Actions - Actions to be\rexecuted when a rule is triggered"
        - id: siteConfig.autoHealRules.actions.actionType
          type: string
          description: "ActionType -\rpredefined action to be taken. Possible values include: 'Recycle',\r'LogEvent', 'CustomAction'"
        - id: siteConfig.autoHealRules.actions.customAction
          type: object
          description: CustomAction - custom action to be taken
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type: string
          description: Executable to be run
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type: string
          description: Parameters for the executable
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type: string
          description: "MinProcessExecutionTime - minimum time the process must execute\rbefore taking the action"
        - id: siteConfig.tracingOptions
          type: string
          description: Tracing options
        - id: siteConfig.vnetName
          type: string
          description: Vnet name
        - id: siteConfig.cors
          type: object
          description: "Cross-Origin Resource Sharing (CORS)\rsettings."
        - id: siteConfig.cors.allowedOrigins
          type: array
          description: "Gets or sets the list of\rorigins that should be allowed to make cross-origin\rcalls (for example: http://example.com:12345). Use \"*\" to allow\rall."
        - id: siteConfig.apiDefinition
          type: object
          description: "Information about the formal API\rdefinition for the web app."
        - id: siteConfig.apiDefinition.url
          type: string
          description: "The URL of the API\rdefinition."
        - id: siteConfig.autoSwapSlotName
          type: string
          description: Auto swap slot name
        - id: siteConfig.localMySqlEnabled
          type: boolean
          description: Local mysql enabled
        - id: siteConfig.ipSecurityRestrictions
          type: array
          description: Ip Security restrictions
        - id: siteConfig.id
          type: string
          description: Resource Id
        - id: siteConfig.name
          type: string
          description: Resource Name
        - id: siteConfig.kind
          type: string
          description: Kind of resource
        - id: siteConfig.location
          type: string
          description: Resource Location
        - id: siteConfig.type
          type: string
          description: Resource type
        - id: siteConfig.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteConfigSlot(resourceGroupName, name, siteConfig,
        siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
        siteConfig.netFrameworkVersion, siteConfig.phpVersion,
        siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
        siteConfig.requestTracingExpirationTime,
        siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
        siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
        siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
        siteConfig.publishingPassword, siteConfig.appSettings,
        siteConfig.metadata, siteConfig.connectionStrings,
        siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
        siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
        siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
        siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
        siteConfig.virtualApplications, siteConfig.loadBalancing,
        siteConfig.experiments, siteConfig.experiments.rampUpRules,
        siteConfig.limits, siteConfig.limits.maxPercentageCpu,
        siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
        siteConfig.autoHealEnabled, siteConfig.autoHealRules,
        siteConfig.autoHealRules.triggers,
        siteConfig.autoHealRules.triggers.requests,
        siteConfig.autoHealRules.triggers.requests.count,
        siteConfig.autoHealRules.triggers.requests.timeInterval,
        siteConfig.autoHealRules.triggers.privateBytesInKB,
        siteConfig.autoHealRules.triggers.statusCodes,
        siteConfig.autoHealRules.triggers.slowRequests,
        siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
        siteConfig.autoHealRules.triggers.slowRequests.count,
        siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
        siteConfig.autoHealRules.actions,
        siteConfig.autoHealRules.actions.actionType,
        siteConfig.autoHealRules.actions.customAction,
        siteConfig.autoHealRules.actions.customAction.exe,
        siteConfig.autoHealRules.actions.customAction.parameters,
        siteConfig.autoHealRules.actions.minProcessExecutionTime,
        siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
        siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
        siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
        siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
        siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
        siteConfig.type, siteConfig.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.updateSiteConfigSlot(resourceGroupName, name, siteConfig,
      siteConfig.numberOfWorkers, siteConfig.defaultDocuments,
      siteConfig.netFrameworkVersion, siteConfig.phpVersion,
      siteConfig.pythonVersion, siteConfig.requestTracingEnabled,
      siteConfig.requestTracingExpirationTime,
      siteConfig.remoteDebuggingEnabled, siteConfig.remoteDebuggingVersion,
      siteConfig.httpLoggingEnabled, siteConfig.logsDirectorySizeLimit,
      siteConfig.detailedErrorLoggingEnabled, siteConfig.publishingUsername,
      siteConfig.publishingPassword, siteConfig.appSettings,
      siteConfig.metadata, siteConfig.connectionStrings,
      siteConfig.handlerMappings, siteConfig.documentRoot, siteConfig.scmType,
      siteConfig.use32BitWorkerProcess, siteConfig.webSocketsEnabled,
      siteConfig.alwaysOn, siteConfig.javaVersion, siteConfig.javaContainer,
      siteConfig.javaContainerVersion, siteConfig.managedPipelineMode,
      siteConfig.virtualApplications, siteConfig.loadBalancing,
      siteConfig.experiments, siteConfig.experiments.rampUpRules,
      siteConfig.limits, siteConfig.limits.maxPercentageCpu,
      siteConfig.limits.maxMemoryInMb, siteConfig.limits.maxDiskSizeInMb,
      siteConfig.autoHealEnabled, siteConfig.autoHealRules,
      siteConfig.autoHealRules.triggers,
      siteConfig.autoHealRules.triggers.requests,
      siteConfig.autoHealRules.triggers.requests.count,
      siteConfig.autoHealRules.triggers.requests.timeInterval,
      siteConfig.autoHealRules.triggers.privateBytesInKB,
      siteConfig.autoHealRules.triggers.statusCodes,
      siteConfig.autoHealRules.triggers.slowRequests,
      siteConfig.autoHealRules.triggers.slowRequests.timeTaken,
      siteConfig.autoHealRules.triggers.slowRequests.count,
      siteConfig.autoHealRules.triggers.slowRequests.timeInterval,
      siteConfig.autoHealRules.actions,
      siteConfig.autoHealRules.actions.actionType,
      siteConfig.autoHealRules.actions.customAction,
      siteConfig.autoHealRules.actions.customAction.exe,
      siteConfig.autoHealRules.actions.customAction.parameters,
      siteConfig.autoHealRules.actions.minProcessExecutionTime,
      siteConfig.tracingOptions, siteConfig.vnetName, siteConfig.cors,
      siteConfig.cors.allowedOrigins, siteConfig.apiDefinition,
      siteConfig.apiDefinition.url, siteConfig.autoSwapSlotName,
      siteConfig.localMySqlEnabled, siteConfig.ipSecurityRestrictions,
      siteConfig.id, siteConfig.name, siteConfig.kind, siteConfig.location,
      siteConfig.type, siteConfig.tags, slot, options, options.customHeaders,
      callback)
    children:
      - 'Sites#updateSiteConfigSlot~client'
      - 'Sites#updateSiteConfigSlot~callback'
      - 'Sites#updateSiteConfigSlot~options'
      - 'Sites#updateSiteConfigSlot~requestUrl'
      - 'Sites#updateSiteConfigSlot~requestUrl'
      - 'Sites#updateSiteConfigSlot~requestUrl'
      - 'Sites#updateSiteConfigSlot~requestUrl'
      - 'Sites#updateSiteConfigSlot~requestUrl'
      - 'Sites#updateSiteConfigSlot~queryParameters'
      - 'Sites#updateSiteConfigSlot~requestUrl'
      - 'Sites#updateSiteConfigSlot~regex'
      - 'Sites#updateSiteConfigSlot~requestUrl'
      - 'Sites#updateSiteConfigSlot~httpRequest'
      - 'Sites#updateSiteConfigSlot~headerName'
      - 'Sites#updateSiteConfigSlot~requestContent'
      - 'Sites#updateSiteConfigSlot~requestModel'
      - 'Sites#updateSiteConfigSlot~requestModelMapper'
      - 'Sites#updateSiteConfigSlot~requestModel'
      - 'Sites#updateSiteConfigSlot~requestContent'
      - 'Sites#updateSiteConfigSlot~serializationError'
  - uid: 'Sites#getSiteSourceControl'
    id: getSiteSourceControl
    parent: Sites
    name: >-
      getSiteSourceControl(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteSourceControl} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteSourceControl(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteSourceControl(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteSourceControl~client'
      - 'Sites#getSiteSourceControl~callback'
      - 'Sites#getSiteSourceControl~options'
      - 'Sites#getSiteSourceControl~requestUrl'
      - 'Sites#getSiteSourceControl~requestUrl'
      - 'Sites#getSiteSourceControl~requestUrl'
      - 'Sites#getSiteSourceControl~requestUrl'
      - 'Sites#getSiteSourceControl~queryParameters'
      - 'Sites#getSiteSourceControl~requestUrl'
      - 'Sites#getSiteSourceControl~regex'
      - 'Sites#getSiteSourceControl~requestUrl'
      - 'Sites#getSiteSourceControl~httpRequest'
      - 'Sites#getSiteSourceControl~headerName'
  - uid: 'Sites#createOrUpdateSiteSourceControl'
    id: createOrUpdateSiteSourceControl
    parent: Sites
    name: >-
      createOrUpdateSiteSourceControl(resourceGroupName, name,
      siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteSourceControl
          type: object
          description: "Request body that contains the source\rcontrol parameters"
        - id: siteSourceControl.repoUrl
          type: string
          description: Repository or source control url
        - id: siteSourceControl.branch
          type: string
          description: "Name of branch to use for\rdeployment"
        - id: siteSourceControl.isManualIntegration
          type: boolean
          description: "Whether to manual\ror continuous integration"
        - id: siteSourceControl.deploymentRollbackEnabled
          type: boolean
          description: "Whether to\rmanual or continuous integration"
        - id: siteSourceControl.isMercurial
          type: boolean
          description: "Mercurial or Git\rrepository type"
        - id: siteSourceControl.id
          type: string
          description: Resource Id
        - id: siteSourceControl.name
          type: string
          description: Resource Name
        - id: siteSourceControl.kind
          type: string
          description: Kind of resource
        - id: siteSourceControl.location
          type: string
          description: Resource Location
        - id: siteSourceControl.type
          type: string
          description: Resource type
        - id: siteSourceControl.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteSourceControl} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteSourceControl(resourceGroupName, name,
        siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
        siteSourceControl.isManualIntegration,
        siteSourceControl.deploymentRollbackEnabled,
        siteSourceControl.isMercurial, siteSourceControl.id,
        siteSourceControl.name, siteSourceControl.kind,
        siteSourceControl.location, siteSourceControl.type,
        siteSourceControl.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteSourceControl(resourceGroupName, name,
      siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteSourceControl~client'
      - 'Sites#createOrUpdateSiteSourceControl~callback'
      - 'Sites#createOrUpdateSiteSourceControl~options'
      - 'Sites#createOrUpdateSiteSourceControl~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControl~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControl~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControl~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControl~queryParameters'
      - 'Sites#createOrUpdateSiteSourceControl~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControl~regex'
      - 'Sites#createOrUpdateSiteSourceControl~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControl~httpRequest'
      - 'Sites#createOrUpdateSiteSourceControl~headerName'
      - 'Sites#createOrUpdateSiteSourceControl~requestContent'
      - 'Sites#createOrUpdateSiteSourceControl~requestModel'
      - 'Sites#createOrUpdateSiteSourceControl~requestModelMapper'
      - 'Sites#createOrUpdateSiteSourceControl~requestModel'
      - 'Sites#createOrUpdateSiteSourceControl~requestContent'
      - 'Sites#createOrUpdateSiteSourceControl~serializationError'
  - uid: 'Sites#deleteSiteSourceControl'
    id: deleteSiteSourceControl
    parent: Sites
    name: >-
      deleteSiteSourceControl(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteSourceControl(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteSourceControl(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteSourceControl~client'
      - 'Sites#deleteSiteSourceControl~callback'
      - 'Sites#deleteSiteSourceControl~options'
      - 'Sites#deleteSiteSourceControl~requestUrl'
      - 'Sites#deleteSiteSourceControl~requestUrl'
      - 'Sites#deleteSiteSourceControl~requestUrl'
      - 'Sites#deleteSiteSourceControl~requestUrl'
      - 'Sites#deleteSiteSourceControl~queryParameters'
      - 'Sites#deleteSiteSourceControl~requestUrl'
      - 'Sites#deleteSiteSourceControl~regex'
      - 'Sites#deleteSiteSourceControl~requestUrl'
      - 'Sites#deleteSiteSourceControl~httpRequest'
      - 'Sites#deleteSiteSourceControl~headerName'
  - uid: 'Sites#updateSiteSourceControl'
    id: updateSiteSourceControl
    parent: Sites
    name: >-
      updateSiteSourceControl(resourceGroupName, name, siteSourceControl,
      siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteSourceControl
          type: object
          description: "Request body that contains the source\rcontrol parameters"
        - id: siteSourceControl.repoUrl
          type: string
          description: Repository or source control url
        - id: siteSourceControl.branch
          type: string
          description: "Name of branch to use for\rdeployment"
        - id: siteSourceControl.isManualIntegration
          type: boolean
          description: "Whether to manual\ror continuous integration"
        - id: siteSourceControl.deploymentRollbackEnabled
          type: boolean
          description: "Whether to\rmanual or continuous integration"
        - id: siteSourceControl.isMercurial
          type: boolean
          description: "Mercurial or Git\rrepository type"
        - id: siteSourceControl.id
          type: string
          description: Resource Id
        - id: siteSourceControl.name
          type: string
          description: Resource Name
        - id: siteSourceControl.kind
          type: string
          description: Kind of resource
        - id: siteSourceControl.location
          type: string
          description: Resource Location
        - id: siteSourceControl.type
          type: string
          description: Resource type
        - id: siteSourceControl.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteSourceControl} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteSourceControl(resourceGroupName, name,
        siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
        siteSourceControl.isManualIntegration,
        siteSourceControl.deploymentRollbackEnabled,
        siteSourceControl.isMercurial, siteSourceControl.id,
        siteSourceControl.name, siteSourceControl.kind,
        siteSourceControl.location, siteSourceControl.type,
        siteSourceControl.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteSourceControl(resourceGroupName, name, siteSourceControl,
      siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteSourceControl~client'
      - 'Sites#updateSiteSourceControl~callback'
      - 'Sites#updateSiteSourceControl~options'
      - 'Sites#updateSiteSourceControl~requestUrl'
      - 'Sites#updateSiteSourceControl~requestUrl'
      - 'Sites#updateSiteSourceControl~requestUrl'
      - 'Sites#updateSiteSourceControl~requestUrl'
      - 'Sites#updateSiteSourceControl~queryParameters'
      - 'Sites#updateSiteSourceControl~requestUrl'
      - 'Sites#updateSiteSourceControl~regex'
      - 'Sites#updateSiteSourceControl~requestUrl'
      - 'Sites#updateSiteSourceControl~httpRequest'
      - 'Sites#updateSiteSourceControl~headerName'
      - 'Sites#updateSiteSourceControl~requestContent'
      - 'Sites#updateSiteSourceControl~requestModel'
      - 'Sites#updateSiteSourceControl~requestModelMapper'
      - 'Sites#updateSiteSourceControl~requestModel'
      - 'Sites#updateSiteSourceControl~requestContent'
      - 'Sites#updateSiteSourceControl~serializationError'
  - uid: 'Sites#getSiteSourceControlSlot'
    id: getSiteSourceControlSlot
    parent: Sites
    name: >-
      getSiteSourceControlSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteSourceControl} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteSourceControlSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteSourceControlSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteSourceControlSlot~client'
      - 'Sites#getSiteSourceControlSlot~callback'
      - 'Sites#getSiteSourceControlSlot~options'
      - 'Sites#getSiteSourceControlSlot~requestUrl'
      - 'Sites#getSiteSourceControlSlot~requestUrl'
      - 'Sites#getSiteSourceControlSlot~requestUrl'
      - 'Sites#getSiteSourceControlSlot~requestUrl'
      - 'Sites#getSiteSourceControlSlot~requestUrl'
      - 'Sites#getSiteSourceControlSlot~queryParameters'
      - 'Sites#getSiteSourceControlSlot~requestUrl'
      - 'Sites#getSiteSourceControlSlot~regex'
      - 'Sites#getSiteSourceControlSlot~requestUrl'
      - 'Sites#getSiteSourceControlSlot~httpRequest'
      - 'Sites#getSiteSourceControlSlot~headerName'
  - uid: 'Sites#createOrUpdateSiteSourceControlSlot'
    id: createOrUpdateSiteSourceControlSlot
    parent: Sites
    name: >-
      createOrUpdateSiteSourceControlSlot(resourceGroupName, name,
      siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteSourceControl
          type: object
          description: "Request body that contains the source\rcontrol parameters"
        - id: siteSourceControl.repoUrl
          type: string
          description: Repository or source control url
        - id: siteSourceControl.branch
          type: string
          description: "Name of branch to use for\rdeployment"
        - id: siteSourceControl.isManualIntegration
          type: boolean
          description: "Whether to manual\ror continuous integration"
        - id: siteSourceControl.deploymentRollbackEnabled
          type: boolean
          description: "Whether to\rmanual or continuous integration"
        - id: siteSourceControl.isMercurial
          type: boolean
          description: "Mercurial or Git\rrepository type"
        - id: siteSourceControl.id
          type: string
          description: Resource Id
        - id: siteSourceControl.name
          type: string
          description: Resource Name
        - id: siteSourceControl.kind
          type: string
          description: Kind of resource
        - id: siteSourceControl.location
          type: string
          description: Resource Location
        - id: siteSourceControl.type
          type: string
          description: Resource type
        - id: siteSourceControl.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteSourceControl} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteSourceControlSlot(resourceGroupName, name,
        siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
        siteSourceControl.isManualIntegration,
        siteSourceControl.deploymentRollbackEnabled,
        siteSourceControl.isMercurial, siteSourceControl.id,
        siteSourceControl.name, siteSourceControl.kind,
        siteSourceControl.location, siteSourceControl.type,
        siteSourceControl.tags, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteSourceControlSlot(resourceGroupName, name,
      siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteSourceControlSlot~client'
      - 'Sites#createOrUpdateSiteSourceControlSlot~callback'
      - 'Sites#createOrUpdateSiteSourceControlSlot~options'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControlSlot~queryParameters'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControlSlot~regex'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestUrl'
      - 'Sites#createOrUpdateSiteSourceControlSlot~httpRequest'
      - 'Sites#createOrUpdateSiteSourceControlSlot~headerName'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestContent'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestModel'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestModelMapper'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestModel'
      - 'Sites#createOrUpdateSiteSourceControlSlot~requestContent'
      - 'Sites#createOrUpdateSiteSourceControlSlot~serializationError'
  - uid: 'Sites#deleteSiteSourceControlSlot'
    id: deleteSiteSourceControlSlot
    parent: Sites
    name: >-
      deleteSiteSourceControlSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteSourceControlSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteSourceControlSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteSourceControlSlot~client'
      - 'Sites#deleteSiteSourceControlSlot~callback'
      - 'Sites#deleteSiteSourceControlSlot~options'
      - 'Sites#deleteSiteSourceControlSlot~requestUrl'
      - 'Sites#deleteSiteSourceControlSlot~requestUrl'
      - 'Sites#deleteSiteSourceControlSlot~requestUrl'
      - 'Sites#deleteSiteSourceControlSlot~requestUrl'
      - 'Sites#deleteSiteSourceControlSlot~requestUrl'
      - 'Sites#deleteSiteSourceControlSlot~queryParameters'
      - 'Sites#deleteSiteSourceControlSlot~requestUrl'
      - 'Sites#deleteSiteSourceControlSlot~regex'
      - 'Sites#deleteSiteSourceControlSlot~requestUrl'
      - 'Sites#deleteSiteSourceControlSlot~httpRequest'
      - 'Sites#deleteSiteSourceControlSlot~headerName'
  - uid: 'Sites#updateSiteSourceControlSlot'
    id: updateSiteSourceControlSlot
    parent: Sites
    name: >-
      updateSiteSourceControlSlot(resourceGroupName, name, siteSourceControl,
      siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteSourceControl
          type: object
          description: "Request body that contains the source\rcontrol parameters"
        - id: siteSourceControl.repoUrl
          type: string
          description: Repository or source control url
        - id: siteSourceControl.branch
          type: string
          description: "Name of branch to use for\rdeployment"
        - id: siteSourceControl.isManualIntegration
          type: boolean
          description: "Whether to manual\ror continuous integration"
        - id: siteSourceControl.deploymentRollbackEnabled
          type: boolean
          description: "Whether to\rmanual or continuous integration"
        - id: siteSourceControl.isMercurial
          type: boolean
          description: "Mercurial or Git\rrepository type"
        - id: siteSourceControl.id
          type: string
          description: Resource Id
        - id: siteSourceControl.name
          type: string
          description: Resource Name
        - id: siteSourceControl.kind
          type: string
          description: Kind of resource
        - id: siteSourceControl.location
          type: string
          description: Resource Location
        - id: siteSourceControl.type
          type: string
          description: Resource type
        - id: siteSourceControl.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteSourceControl} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteSourceControlSlot(resourceGroupName, name,
        siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
        siteSourceControl.isManualIntegration,
        siteSourceControl.deploymentRollbackEnabled,
        siteSourceControl.isMercurial, siteSourceControl.id,
        siteSourceControl.name, siteSourceControl.kind,
        siteSourceControl.location, siteSourceControl.type,
        siteSourceControl.tags, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteSourceControlSlot(resourceGroupName, name,
      siteSourceControl, siteSourceControl.repoUrl, siteSourceControl.branch,
      siteSourceControl.isManualIntegration,
      siteSourceControl.deploymentRollbackEnabled,
      siteSourceControl.isMercurial, siteSourceControl.id,
      siteSourceControl.name, siteSourceControl.kind,
      siteSourceControl.location, siteSourceControl.type,
      siteSourceControl.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteSourceControlSlot~client'
      - 'Sites#updateSiteSourceControlSlot~callback'
      - 'Sites#updateSiteSourceControlSlot~options'
      - 'Sites#updateSiteSourceControlSlot~requestUrl'
      - 'Sites#updateSiteSourceControlSlot~requestUrl'
      - 'Sites#updateSiteSourceControlSlot~requestUrl'
      - 'Sites#updateSiteSourceControlSlot~requestUrl'
      - 'Sites#updateSiteSourceControlSlot~requestUrl'
      - 'Sites#updateSiteSourceControlSlot~queryParameters'
      - 'Sites#updateSiteSourceControlSlot~requestUrl'
      - 'Sites#updateSiteSourceControlSlot~regex'
      - 'Sites#updateSiteSourceControlSlot~requestUrl'
      - 'Sites#updateSiteSourceControlSlot~httpRequest'
      - 'Sites#updateSiteSourceControlSlot~headerName'
      - 'Sites#updateSiteSourceControlSlot~requestContent'
      - 'Sites#updateSiteSourceControlSlot~requestModel'
      - 'Sites#updateSiteSourceControlSlot~requestModelMapper'
      - 'Sites#updateSiteSourceControlSlot~requestModel'
      - 'Sites#updateSiteSourceControlSlot~requestContent'
      - 'Sites#updateSiteSourceControlSlot~serializationError'
  - uid: 'Sites#listSiteAppSettingsSlot'
    id: listSiteAppSettingsSlot
    parent: Sites
    name: >-
      listSiteAppSettingsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteAppSettingsSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteAppSettingsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteAppSettingsSlot~client'
      - 'Sites#listSiteAppSettingsSlot~callback'
      - 'Sites#listSiteAppSettingsSlot~options'
      - 'Sites#listSiteAppSettingsSlot~requestUrl'
      - 'Sites#listSiteAppSettingsSlot~requestUrl'
      - 'Sites#listSiteAppSettingsSlot~requestUrl'
      - 'Sites#listSiteAppSettingsSlot~requestUrl'
      - 'Sites#listSiteAppSettingsSlot~requestUrl'
      - 'Sites#listSiteAppSettingsSlot~queryParameters'
      - 'Sites#listSiteAppSettingsSlot~requestUrl'
      - 'Sites#listSiteAppSettingsSlot~regex'
      - 'Sites#listSiteAppSettingsSlot~requestUrl'
      - 'Sites#listSiteAppSettingsSlot~httpRequest'
      - 'Sites#listSiteAppSettingsSlot~headerName'
  - uid: 'Sites#listSiteAppSettings'
    id: listSiteAppSettings
    parent: Sites
    name: >-
      listSiteAppSettings(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteAppSettings(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteAppSettings(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteAppSettings~client'
      - 'Sites#listSiteAppSettings~callback'
      - 'Sites#listSiteAppSettings~options'
      - 'Sites#listSiteAppSettings~requestUrl'
      - 'Sites#listSiteAppSettings~requestUrl'
      - 'Sites#listSiteAppSettings~requestUrl'
      - 'Sites#listSiteAppSettings~requestUrl'
      - 'Sites#listSiteAppSettings~queryParameters'
      - 'Sites#listSiteAppSettings~requestUrl'
      - 'Sites#listSiteAppSettings~regex'
      - 'Sites#listSiteAppSettings~requestUrl'
      - 'Sites#listSiteAppSettings~httpRequest'
      - 'Sites#listSiteAppSettings~headerName'
  - uid: 'Sites#updateSiteAppSettings'
    id: updateSiteAppSettings
    parent: Sites
    name: >-
      updateSiteAppSettings(resourceGroupName, name, appSettings,
      appSettings.properties, appSettings.id, appSettings.name,
      appSettings.kind, appSettings.location, appSettings.type,
      appSettings.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: appSettings
          type: object
          description: Application settings of web app
        - id: appSettings.properties
          type: object
          description: Settings
        - id: appSettings.id
          type: string
          description: Resource Id
        - id: appSettings.name
          type: string
          description: Resource Name
        - id: appSettings.kind
          type: string
          description: Kind of resource
        - id: appSettings.location
          type: string
          description: Resource Location
        - id: appSettings.type
          type: string
          description: Resource type
        - id: appSettings.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteAppSettings(resourceGroupName, name, appSettings,
        appSettings.properties, appSettings.id, appSettings.name,
        appSettings.kind, appSettings.location, appSettings.type,
        appSettings.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteAppSettings(resourceGroupName, name, appSettings,
      appSettings.properties, appSettings.id, appSettings.name,
      appSettings.kind, appSettings.location, appSettings.type,
      appSettings.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteAppSettings~client'
      - 'Sites#updateSiteAppSettings~callback'
      - 'Sites#updateSiteAppSettings~options'
      - 'Sites#updateSiteAppSettings~requestUrl'
      - 'Sites#updateSiteAppSettings~requestUrl'
      - 'Sites#updateSiteAppSettings~requestUrl'
      - 'Sites#updateSiteAppSettings~requestUrl'
      - 'Sites#updateSiteAppSettings~queryParameters'
      - 'Sites#updateSiteAppSettings~requestUrl'
      - 'Sites#updateSiteAppSettings~regex'
      - 'Sites#updateSiteAppSettings~requestUrl'
      - 'Sites#updateSiteAppSettings~httpRequest'
      - 'Sites#updateSiteAppSettings~headerName'
      - 'Sites#updateSiteAppSettings~requestContent'
      - 'Sites#updateSiteAppSettings~requestModel'
      - 'Sites#updateSiteAppSettings~requestModelMapper'
      - 'Sites#updateSiteAppSettings~requestModel'
      - 'Sites#updateSiteAppSettings~requestContent'
      - 'Sites#updateSiteAppSettings~serializationError'
  - uid: 'Sites#updateSiteAppSettingsSlot'
    id: updateSiteAppSettingsSlot
    parent: Sites
    name: >-
      updateSiteAppSettingsSlot(resourceGroupName, name, appSettings,
      appSettings.properties, appSettings.id, appSettings.name,
      appSettings.kind, appSettings.location, appSettings.type,
      appSettings.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: appSettings
          type: object
          description: Application settings of web app
        - id: appSettings.properties
          type: object
          description: Settings
        - id: appSettings.id
          type: string
          description: Resource Id
        - id: appSettings.name
          type: string
          description: Resource Name
        - id: appSettings.kind
          type: string
          description: Kind of resource
        - id: appSettings.location
          type: string
          description: Resource Location
        - id: appSettings.type
          type: string
          description: Resource type
        - id: appSettings.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteAppSettingsSlot(resourceGroupName, name, appSettings,
        appSettings.properties, appSettings.id, appSettings.name,
        appSettings.kind, appSettings.location, appSettings.type,
        appSettings.tags, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteAppSettingsSlot(resourceGroupName, name, appSettings,
      appSettings.properties, appSettings.id, appSettings.name,
      appSettings.kind, appSettings.location, appSettings.type,
      appSettings.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteAppSettingsSlot~client'
      - 'Sites#updateSiteAppSettingsSlot~callback'
      - 'Sites#updateSiteAppSettingsSlot~options'
      - 'Sites#updateSiteAppSettingsSlot~requestUrl'
      - 'Sites#updateSiteAppSettingsSlot~requestUrl'
      - 'Sites#updateSiteAppSettingsSlot~requestUrl'
      - 'Sites#updateSiteAppSettingsSlot~requestUrl'
      - 'Sites#updateSiteAppSettingsSlot~requestUrl'
      - 'Sites#updateSiteAppSettingsSlot~queryParameters'
      - 'Sites#updateSiteAppSettingsSlot~requestUrl'
      - 'Sites#updateSiteAppSettingsSlot~regex'
      - 'Sites#updateSiteAppSettingsSlot~requestUrl'
      - 'Sites#updateSiteAppSettingsSlot~httpRequest'
      - 'Sites#updateSiteAppSettingsSlot~headerName'
      - 'Sites#updateSiteAppSettingsSlot~requestContent'
      - 'Sites#updateSiteAppSettingsSlot~requestModel'
      - 'Sites#updateSiteAppSettingsSlot~requestModelMapper'
      - 'Sites#updateSiteAppSettingsSlot~requestModel'
      - 'Sites#updateSiteAppSettingsSlot~requestContent'
      - 'Sites#updateSiteAppSettingsSlot~serializationError'
  - uid: 'Sites#listSiteConnectionStrings'
    id: listSiteConnectionStrings
    parent: Sites
    name: >-
      listSiteConnectionStrings(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ConnectionStringDictionary} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteConnectionStrings(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteConnectionStrings(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteConnectionStrings~client'
      - 'Sites#listSiteConnectionStrings~callback'
      - 'Sites#listSiteConnectionStrings~options'
      - 'Sites#listSiteConnectionStrings~requestUrl'
      - 'Sites#listSiteConnectionStrings~requestUrl'
      - 'Sites#listSiteConnectionStrings~requestUrl'
      - 'Sites#listSiteConnectionStrings~requestUrl'
      - 'Sites#listSiteConnectionStrings~queryParameters'
      - 'Sites#listSiteConnectionStrings~requestUrl'
      - 'Sites#listSiteConnectionStrings~regex'
      - 'Sites#listSiteConnectionStrings~requestUrl'
      - 'Sites#listSiteConnectionStrings~httpRequest'
      - 'Sites#listSiteConnectionStrings~headerName'
  - uid: 'Sites#listSiteConnectionStringsSlot'
    id: listSiteConnectionStringsSlot
    parent: Sites
    name: >-
      listSiteConnectionStringsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ConnectionStringDictionary} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteConnectionStringsSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.listSiteConnectionStringsSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#listSiteConnectionStringsSlot~client'
      - 'Sites#listSiteConnectionStringsSlot~callback'
      - 'Sites#listSiteConnectionStringsSlot~options'
      - 'Sites#listSiteConnectionStringsSlot~requestUrl'
      - 'Sites#listSiteConnectionStringsSlot~requestUrl'
      - 'Sites#listSiteConnectionStringsSlot~requestUrl'
      - 'Sites#listSiteConnectionStringsSlot~requestUrl'
      - 'Sites#listSiteConnectionStringsSlot~requestUrl'
      - 'Sites#listSiteConnectionStringsSlot~queryParameters'
      - 'Sites#listSiteConnectionStringsSlot~requestUrl'
      - 'Sites#listSiteConnectionStringsSlot~regex'
      - 'Sites#listSiteConnectionStringsSlot~requestUrl'
      - 'Sites#listSiteConnectionStringsSlot~httpRequest'
      - 'Sites#listSiteConnectionStringsSlot~headerName'
  - uid: 'Sites#updateSiteConnectionStrings'
    id: updateSiteConnectionStrings
    parent: Sites
    name: >-
      updateSiteConnectionStrings(resourceGroupName, name, connectionStrings,
      connectionStrings.properties, connectionStrings.id,
      connectionStrings.name, connectionStrings.kind,
      connectionStrings.location, connectionStrings.type,
      connectionStrings.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: connectionStrings
          type: object
          description: Connection strings associated with web app
        - id: connectionStrings.properties
          type: object
          description: Connection strings
        - id: connectionStrings.id
          type: string
          description: Resource Id
        - id: connectionStrings.name
          type: string
          description: Resource Name
        - id: connectionStrings.kind
          type: string
          description: Kind of resource
        - id: connectionStrings.location
          type: string
          description: Resource Location
        - id: connectionStrings.type
          type: string
          description: Resource type
        - id: connectionStrings.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ConnectionStringDictionary} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteConnectionStrings(resourceGroupName, name,
        connectionStrings, connectionStrings.properties, connectionStrings.id,
        connectionStrings.name, connectionStrings.kind,
        connectionStrings.location, connectionStrings.type,
        connectionStrings.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteConnectionStrings(resourceGroupName, name,
      connectionStrings, connectionStrings.properties, connectionStrings.id,
      connectionStrings.name, connectionStrings.kind,
      connectionStrings.location, connectionStrings.type,
      connectionStrings.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteConnectionStrings~client'
      - 'Sites#updateSiteConnectionStrings~callback'
      - 'Sites#updateSiteConnectionStrings~options'
      - 'Sites#updateSiteConnectionStrings~requestUrl'
      - 'Sites#updateSiteConnectionStrings~requestUrl'
      - 'Sites#updateSiteConnectionStrings~requestUrl'
      - 'Sites#updateSiteConnectionStrings~requestUrl'
      - 'Sites#updateSiteConnectionStrings~queryParameters'
      - 'Sites#updateSiteConnectionStrings~requestUrl'
      - 'Sites#updateSiteConnectionStrings~regex'
      - 'Sites#updateSiteConnectionStrings~requestUrl'
      - 'Sites#updateSiteConnectionStrings~httpRequest'
      - 'Sites#updateSiteConnectionStrings~headerName'
      - 'Sites#updateSiteConnectionStrings~requestContent'
      - 'Sites#updateSiteConnectionStrings~requestModel'
      - 'Sites#updateSiteConnectionStrings~requestModelMapper'
      - 'Sites#updateSiteConnectionStrings~requestModel'
      - 'Sites#updateSiteConnectionStrings~requestContent'
      - 'Sites#updateSiteConnectionStrings~serializationError'
  - uid: 'Sites#updateSiteConnectionStringsSlot'
    id: updateSiteConnectionStringsSlot
    parent: Sites
    name: >-
      updateSiteConnectionStringsSlot(resourceGroupName, name,
      connectionStrings, connectionStrings.properties, connectionStrings.id,
      connectionStrings.name, connectionStrings.kind,
      connectionStrings.location, connectionStrings.type,
      connectionStrings.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: connectionStrings
          type: object
          description: Connection strings associated with web app
        - id: connectionStrings.properties
          type: object
          description: Connection strings
        - id: connectionStrings.id
          type: string
          description: Resource Id
        - id: connectionStrings.name
          type: string
          description: Resource Name
        - id: connectionStrings.kind
          type: string
          description: Kind of resource
        - id: connectionStrings.location
          type: string
          description: Resource Location
        - id: connectionStrings.type
          type: string
          description: Resource type
        - id: connectionStrings.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ConnectionStringDictionary} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteConnectionStringsSlot(resourceGroupName, name,
        connectionStrings, connectionStrings.properties, connectionStrings.id,
        connectionStrings.name, connectionStrings.kind,
        connectionStrings.location, connectionStrings.type,
        connectionStrings.tags, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteConnectionStringsSlot(resourceGroupName, name,
      connectionStrings, connectionStrings.properties, connectionStrings.id,
      connectionStrings.name, connectionStrings.kind,
      connectionStrings.location, connectionStrings.type,
      connectionStrings.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteConnectionStringsSlot~client'
      - 'Sites#updateSiteConnectionStringsSlot~callback'
      - 'Sites#updateSiteConnectionStringsSlot~options'
      - 'Sites#updateSiteConnectionStringsSlot~requestUrl'
      - 'Sites#updateSiteConnectionStringsSlot~requestUrl'
      - 'Sites#updateSiteConnectionStringsSlot~requestUrl'
      - 'Sites#updateSiteConnectionStringsSlot~requestUrl'
      - 'Sites#updateSiteConnectionStringsSlot~requestUrl'
      - 'Sites#updateSiteConnectionStringsSlot~queryParameters'
      - 'Sites#updateSiteConnectionStringsSlot~requestUrl'
      - 'Sites#updateSiteConnectionStringsSlot~regex'
      - 'Sites#updateSiteConnectionStringsSlot~requestUrl'
      - 'Sites#updateSiteConnectionStringsSlot~httpRequest'
      - 'Sites#updateSiteConnectionStringsSlot~headerName'
      - 'Sites#updateSiteConnectionStringsSlot~requestContent'
      - 'Sites#updateSiteConnectionStringsSlot~requestModel'
      - 'Sites#updateSiteConnectionStringsSlot~requestModelMapper'
      - 'Sites#updateSiteConnectionStringsSlot~requestModel'
      - 'Sites#updateSiteConnectionStringsSlot~requestContent'
      - 'Sites#updateSiteConnectionStringsSlot~serializationError'
  - uid: 'Sites#listSiteAuthSettings'
    id: listSiteAuthSettings
    parent: Sites
    name: >-
      listSiteAuthSettings(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteAuthSettings} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteAuthSettings(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteAuthSettings(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteAuthSettings~client'
      - 'Sites#listSiteAuthSettings~callback'
      - 'Sites#listSiteAuthSettings~options'
      - 'Sites#listSiteAuthSettings~requestUrl'
      - 'Sites#listSiteAuthSettings~requestUrl'
      - 'Sites#listSiteAuthSettings~requestUrl'
      - 'Sites#listSiteAuthSettings~requestUrl'
      - 'Sites#listSiteAuthSettings~queryParameters'
      - 'Sites#listSiteAuthSettings~requestUrl'
      - 'Sites#listSiteAuthSettings~regex'
      - 'Sites#listSiteAuthSettings~requestUrl'
      - 'Sites#listSiteAuthSettings~httpRequest'
      - 'Sites#listSiteAuthSettings~headerName'
  - uid: 'Sites#listSiteAuthSettingsSlot'
    id: listSiteAuthSettingsSlot
    parent: Sites
    name: >-
      listSiteAuthSettingsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteAuthSettings} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteAuthSettingsSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.listSiteAuthSettingsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteAuthSettingsSlot~client'
      - 'Sites#listSiteAuthSettingsSlot~callback'
      - 'Sites#listSiteAuthSettingsSlot~options'
      - 'Sites#listSiteAuthSettingsSlot~requestUrl'
      - 'Sites#listSiteAuthSettingsSlot~requestUrl'
      - 'Sites#listSiteAuthSettingsSlot~requestUrl'
      - 'Sites#listSiteAuthSettingsSlot~requestUrl'
      - 'Sites#listSiteAuthSettingsSlot~requestUrl'
      - 'Sites#listSiteAuthSettingsSlot~queryParameters'
      - 'Sites#listSiteAuthSettingsSlot~requestUrl'
      - 'Sites#listSiteAuthSettingsSlot~regex'
      - 'Sites#listSiteAuthSettingsSlot~requestUrl'
      - 'Sites#listSiteAuthSettingsSlot~httpRequest'
      - 'Sites#listSiteAuthSettingsSlot~headerName'
  - uid: 'Sites#updateSiteAuthSettings'
    id: updateSiteAuthSettings
    parent: Sites
    name: >-
      updateSiteAuthSettings(resourceGroupName, name, siteAuthSettings,
      siteAuthSettings.enabled, siteAuthSettings.httpApiPrefixPath,
      siteAuthSettings.unauthenticatedClientAction,
      siteAuthSettings.tokenStoreEnabled,
      siteAuthSettings.allowedExternalRedirectUrls,
      siteAuthSettings.defaultProvider,
      siteAuthSettings.tokenRefreshExtensionHours, siteAuthSettings.clientId,
      siteAuthSettings.clientSecret, siteAuthSettings.issuer,
      siteAuthSettings.allowedAudiences, siteAuthSettings.additionalLoginParams,
      siteAuthSettings.aadClientId, siteAuthSettings.openIdIssuer,
      siteAuthSettings.googleClientId, siteAuthSettings.googleClientSecret,
      siteAuthSettings.googleOAuthScopes, siteAuthSettings.facebookAppId,
      siteAuthSettings.facebookAppSecret, siteAuthSettings.facebookOAuthScopes,
      siteAuthSettings.twitterConsumerKey,
      siteAuthSettings.twitterConsumerSecret,
      siteAuthSettings.microsoftAccountClientId,
      siteAuthSettings.microsoftAccountClientSecret,
      siteAuthSettings.microsoftAccountOAuthScopes, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteAuthSettings
          type: object
          description: Auth settings associated with web app
        - id: siteAuthSettings.enabled
          type: boolean
          description: "Gets or sets a value indicating\rwhether the Authentication / Authorization feature is enabled for the\rcurrent app."
        - id: siteAuthSettings.httpApiPrefixPath
          type: string
          description: "Gets or sets the\rrelative path prefix used by platform HTTP APIs.\rChanging this value is not recommended except for compatibility\rreasons."
        - id: siteAuthSettings.unauthenticatedClientAction
          type: string
          description: "Gets or sets\rthe action to take when an unauthenticated client attempts to access the\rapp. Possible values include: 'RedirectToLoginPage', 'AllowAnonymous'"
        - id: siteAuthSettings.tokenStoreEnabled
          type: boolean
          description: "Gets or sets a value\rindicating whether to durably store platform-specific security tokens\robtained during login flows. This capability is disabled by\rdefault."
        - id: siteAuthSettings.allowedExternalRedirectUrls
          type: array
          description: "Gets or sets\ra collection of external URLs that can be redirected to as part of logging\rin\ror logging out of the web app. Note that the query string part\rof the URL is ignored.\rThis is an advanced setting typically only needed by Windows\rStore application backends.\rNote that URLs within the current domain are always implicitly\rallowed."
        - id: siteAuthSettings.defaultProvider
          type: string
          description: "Gets or sets the default\rauthentication provider to use when multiple providers are configured.\rThis setting is only needed if multiple providers are\rconfigured and the unauthenticated client\raction is set to \"RedirectToLoginPage\". Possible values\rinclude: 'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',\r'Twitter'"
        - id: siteAuthSettings.tokenRefreshExtensionHours
          type: number
          description: "Gets or sets\rthe number of hours after session token expiration that a session token\rcan be used to\rcall the token refresh API. The default is 72 hours."
        - id: siteAuthSettings.clientId
          type: string
          description: "Gets or sets the Client ID of\rthis relying party application, known as the client_id.\rThis setting is required for enabling OpenID Connection\rauthentication with Azure Active Directory or\rother 3rd party OpenID Connect providers.\rMore information on OpenID Connect:\rhttp://openid.net/specs/openid-connect-core-1_0.html"
        - id: siteAuthSettings.clientSecret
          type: string
          description: "Gets or sets the Client\rSecret of this relying party application (in Azure Active Directory, this\ris also referred to as the Key).\rThis setting is optional. If no client secret is configured,\rthe OpenID Connect implicit auth flow is used to authenticate end users.\rOtherwise, the OpenID Connect Authorization Code Flow is used\rto authenticate end users.\rMore information on OpenID Connect:\rhttp://openid.net/specs/openid-connect-core-1_0.html"
        - id: siteAuthSettings.issuer
          type: string
          description: "Gets or sets the OpenID Connect\rIssuer URI that represents the entity which issues access tokens for this\rapplication.\rWhen using Azure Active Directory, this value is the URI of the\rdirectory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\rThis URI is a case-sensitive identifier for the token issuer.\rMore information on OpenID Connect Discovery:\rhttp://openid.net/specs/openid-connect-discovery-1_0.html"
        - id: siteAuthSettings.allowedAudiences
          type: array
          description: "Gets or sets a list of\rallowed audience values to consider when validating JWTs issued by\rAzure Active Directory. Note that the\r{Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is\ralways considered an\rallowed audience, regardless of this setting."
        - id: siteAuthSettings.additionalLoginParams
          type: array
          description: "Gets or sets a list\rof login parameters to send to the OpenID Connect authorization endpoint\rwhen\ra user logs in. Each parameter must be in the form \"key=value\"."
        - id: siteAuthSettings.aadClientId
          type: string
        - id: siteAuthSettings.openIdIssuer
          type: string
        - id: siteAuthSettings.googleClientId
          type: string
          description: "Gets or sets the OpenID\rConnect Client ID for the Google web application.\rThis setting is required for enabling Google Sign-In.\rGoogle Sign-In documentation:\rhttps://developers.google.com/identity/sign-in/web/"
        - id: siteAuthSettings.googleClientSecret
          type: string
          description: "Gets or sets the\rclient secret associated with the Google web application.\rThis setting is required for enabling Google Sign-In.\rGoogle Sign-In documentation:\rhttps://developers.google.com/identity/sign-in/web/"
        - id: siteAuthSettings.googleOAuthScopes
          type: array
          description: "Gets or sets the OAuth\r2.0 scopes that will be requested as part of Google Sign-In\rauthentication.\rThis setting is optional. If not specified, \"openid\",\r\"profile\", and \"email\" are used as default scopes.\rGoogle Sign-In documentation:\rhttps://developers.google.com/identity/sign-in/web/"
        - id: siteAuthSettings.facebookAppId
          type: string
          description: "Gets or sets the App ID of\rthe Facebook app used for login.\rThis setting is required for enabling Facebook Login.\rFacebook Login documentation:\rhttps://developers.facebook.com/docs/facebook-login"
        - id: siteAuthSettings.facebookAppSecret
          type: string
          description: "Gets or sets the App\rSecret of the Facebook app used for Facebook Login.\rThis setting is required for enabling Facebook Login.\rFacebook Login documentation:\rhttps://developers.facebook.com/docs/facebook-login"
        - id: siteAuthSettings.facebookOAuthScopes
          type: array
          description: "Gets or sets the\rOAuth 2.0 scopes that will be requested as part of Facebook Login\rauthentication.\rThis setting is optional.\rFacebook Login documentation:\rhttps://developers.facebook.com/docs/facebook-login"
        - id: siteAuthSettings.twitterConsumerKey
          type: string
          description: "Gets or sets the\rOAuth 1.0a consumer key of the Twitter application used for sign-in.\rThis setting is required for enabling Twitter Sign-In.\rTwitter Sign-In documentation:\rhttps://dev.twitter.com/web/sign-in"
        - id: siteAuthSettings.twitterConsumerSecret
          type: string
          description: "Gets or sets the\rOAuth 1.0a consumer secret of the Twitter application used for sign-in.\rThis setting is required for enabling Twitter Sign-In.\rTwitter Sign-In documentation:\rhttps://dev.twitter.com/web/sign-in"
        - id: siteAuthSettings.microsoftAccountClientId
          type: string
          description: "Gets or sets\rthe OAuth 2.0 client ID that was created for the app used for\rauthentication.\rThis setting is required for enabling Microsoft Account\rauthentication.\rMicrosoft Account OAuth documentation:\rhttps://dev.onedrive.com/auth/msa_oauth.htm"
        - id: siteAuthSettings.microsoftAccountClientSecret
          type: string
          description: "Gets or\rsets the OAuth 2.0 client secret that was created for the app used for\rauthentication.\rThis setting is required for enabling Microsoft Account\rauthentication.\rMicrosoft Account OAuth documentation:\rhttps://dev.onedrive.com/auth/msa_oauth.htm"
        - id: siteAuthSettings.microsoftAccountOAuthScopes
          type: array
          description: "Gets or sets\rthe OAuth 2.0 scopes that will be requested as part of Microsoft Account\rauthentication.\rThis setting is optional. If not specified, \"wl.basic\" is used\ras the default scope.\rMicrosoft Account Scopes and permissions documentation:\rhttps://msdn.microsoft.com/en-us/library/dn631845.aspx"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteAuthSettings} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteAuthSettings(resourceGroupName, name,
        siteAuthSettings, siteAuthSettings.enabled,
        siteAuthSettings.httpApiPrefixPath,
        siteAuthSettings.unauthenticatedClientAction,
        siteAuthSettings.tokenStoreEnabled,
        siteAuthSettings.allowedExternalRedirectUrls,
        siteAuthSettings.defaultProvider,
        siteAuthSettings.tokenRefreshExtensionHours, siteAuthSettings.clientId,
        siteAuthSettings.clientSecret, siteAuthSettings.issuer,
        siteAuthSettings.allowedAudiences,
        siteAuthSettings.additionalLoginParams, siteAuthSettings.aadClientId,
        siteAuthSettings.openIdIssuer, siteAuthSettings.googleClientId,
        siteAuthSettings.googleClientSecret, siteAuthSettings.googleOAuthScopes,
        siteAuthSettings.facebookAppId, siteAuthSettings.facebookAppSecret,
        siteAuthSettings.facebookOAuthScopes,
        siteAuthSettings.twitterConsumerKey,
        siteAuthSettings.twitterConsumerSecret,
        siteAuthSettings.microsoftAccountClientId,
        siteAuthSettings.microsoftAccountClientSecret,
        siteAuthSettings.microsoftAccountOAuthScopes, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteAuthSettings(resourceGroupName, name, siteAuthSettings,
      siteAuthSettings.enabled, siteAuthSettings.httpApiPrefixPath,
      siteAuthSettings.unauthenticatedClientAction,
      siteAuthSettings.tokenStoreEnabled,
      siteAuthSettings.allowedExternalRedirectUrls,
      siteAuthSettings.defaultProvider,
      siteAuthSettings.tokenRefreshExtensionHours, siteAuthSettings.clientId,
      siteAuthSettings.clientSecret, siteAuthSettings.issuer,
      siteAuthSettings.allowedAudiences, siteAuthSettings.additionalLoginParams,
      siteAuthSettings.aadClientId, siteAuthSettings.openIdIssuer,
      siteAuthSettings.googleClientId, siteAuthSettings.googleClientSecret,
      siteAuthSettings.googleOAuthScopes, siteAuthSettings.facebookAppId,
      siteAuthSettings.facebookAppSecret, siteAuthSettings.facebookOAuthScopes,
      siteAuthSettings.twitterConsumerKey,
      siteAuthSettings.twitterConsumerSecret,
      siteAuthSettings.microsoftAccountClientId,
      siteAuthSettings.microsoftAccountClientSecret,
      siteAuthSettings.microsoftAccountOAuthScopes, options,
      options.customHeaders, callback)
    children:
      - 'Sites#updateSiteAuthSettings~client'
      - 'Sites#updateSiteAuthSettings~callback'
      - 'Sites#updateSiteAuthSettings~options'
      - 'Sites#updateSiteAuthSettings~requestUrl'
      - 'Sites#updateSiteAuthSettings~requestUrl'
      - 'Sites#updateSiteAuthSettings~requestUrl'
      - 'Sites#updateSiteAuthSettings~requestUrl'
      - 'Sites#updateSiteAuthSettings~queryParameters'
      - 'Sites#updateSiteAuthSettings~requestUrl'
      - 'Sites#updateSiteAuthSettings~regex'
      - 'Sites#updateSiteAuthSettings~requestUrl'
      - 'Sites#updateSiteAuthSettings~httpRequest'
      - 'Sites#updateSiteAuthSettings~headerName'
      - 'Sites#updateSiteAuthSettings~requestContent'
      - 'Sites#updateSiteAuthSettings~requestModel'
      - 'Sites#updateSiteAuthSettings~requestModelMapper'
      - 'Sites#updateSiteAuthSettings~requestModel'
      - 'Sites#updateSiteAuthSettings~requestContent'
      - 'Sites#updateSiteAuthSettings~serializationError'
  - uid: 'Sites#updateSiteAuthSettingsSlot'
    id: updateSiteAuthSettingsSlot
    parent: Sites
    name: >-
      updateSiteAuthSettingsSlot(resourceGroupName, name, siteAuthSettings,
      siteAuthSettings.enabled, siteAuthSettings.httpApiPrefixPath,
      siteAuthSettings.unauthenticatedClientAction,
      siteAuthSettings.tokenStoreEnabled,
      siteAuthSettings.allowedExternalRedirectUrls,
      siteAuthSettings.defaultProvider,
      siteAuthSettings.tokenRefreshExtensionHours, siteAuthSettings.clientId,
      siteAuthSettings.clientSecret, siteAuthSettings.issuer,
      siteAuthSettings.allowedAudiences, siteAuthSettings.additionalLoginParams,
      siteAuthSettings.aadClientId, siteAuthSettings.openIdIssuer,
      siteAuthSettings.googleClientId, siteAuthSettings.googleClientSecret,
      siteAuthSettings.googleOAuthScopes, siteAuthSettings.facebookAppId,
      siteAuthSettings.facebookAppSecret, siteAuthSettings.facebookOAuthScopes,
      siteAuthSettings.twitterConsumerKey,
      siteAuthSettings.twitterConsumerSecret,
      siteAuthSettings.microsoftAccountClientId,
      siteAuthSettings.microsoftAccountClientSecret,
      siteAuthSettings.microsoftAccountOAuthScopes, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteAuthSettings
          type: object
          description: Auth settings associated with web app
        - id: siteAuthSettings.enabled
          type: boolean
          description: "Gets or sets a value indicating\rwhether the Authentication / Authorization feature is enabled for the\rcurrent app."
        - id: siteAuthSettings.httpApiPrefixPath
          type: string
          description: "Gets or sets the\rrelative path prefix used by platform HTTP APIs.\rChanging this value is not recommended except for compatibility\rreasons."
        - id: siteAuthSettings.unauthenticatedClientAction
          type: string
          description: "Gets or sets\rthe action to take when an unauthenticated client attempts to access the\rapp. Possible values include: 'RedirectToLoginPage', 'AllowAnonymous'"
        - id: siteAuthSettings.tokenStoreEnabled
          type: boolean
          description: "Gets or sets a value\rindicating whether to durably store platform-specific security tokens\robtained during login flows. This capability is disabled by\rdefault."
        - id: siteAuthSettings.allowedExternalRedirectUrls
          type: array
          description: "Gets or sets\ra collection of external URLs that can be redirected to as part of logging\rin\ror logging out of the web app. Note that the query string part\rof the URL is ignored.\rThis is an advanced setting typically only needed by Windows\rStore application backends.\rNote that URLs within the current domain are always implicitly\rallowed."
        - id: siteAuthSettings.defaultProvider
          type: string
          description: "Gets or sets the default\rauthentication provider to use when multiple providers are configured.\rThis setting is only needed if multiple providers are\rconfigured and the unauthenticated client\raction is set to \"RedirectToLoginPage\". Possible values\rinclude: 'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',\r'Twitter'"
        - id: siteAuthSettings.tokenRefreshExtensionHours
          type: number
          description: "Gets or sets\rthe number of hours after session token expiration that a session token\rcan be used to\rcall the token refresh API. The default is 72 hours."
        - id: siteAuthSettings.clientId
          type: string
          description: "Gets or sets the Client ID of\rthis relying party application, known as the client_id.\rThis setting is required for enabling OpenID Connection\rauthentication with Azure Active Directory or\rother 3rd party OpenID Connect providers.\rMore information on OpenID Connect:\rhttp://openid.net/specs/openid-connect-core-1_0.html"
        - id: siteAuthSettings.clientSecret
          type: string
          description: "Gets or sets the Client\rSecret of this relying party application (in Azure Active Directory, this\ris also referred to as the Key).\rThis setting is optional. If no client secret is configured,\rthe OpenID Connect implicit auth flow is used to authenticate end users.\rOtherwise, the OpenID Connect Authorization Code Flow is used\rto authenticate end users.\rMore information on OpenID Connect:\rhttp://openid.net/specs/openid-connect-core-1_0.html"
        - id: siteAuthSettings.issuer
          type: string
          description: "Gets or sets the OpenID Connect\rIssuer URI that represents the entity which issues access tokens for this\rapplication.\rWhen using Azure Active Directory, this value is the URI of the\rdirectory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\rThis URI is a case-sensitive identifier for the token issuer.\rMore information on OpenID Connect Discovery:\rhttp://openid.net/specs/openid-connect-discovery-1_0.html"
        - id: siteAuthSettings.allowedAudiences
          type: array
          description: "Gets or sets a list of\rallowed audience values to consider when validating JWTs issued by\rAzure Active Directory. Note that the\r{Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is\ralways considered an\rallowed audience, regardless of this setting."
        - id: siteAuthSettings.additionalLoginParams
          type: array
          description: "Gets or sets a list\rof login parameters to send to the OpenID Connect authorization endpoint\rwhen\ra user logs in. Each parameter must be in the form \"key=value\"."
        - id: siteAuthSettings.aadClientId
          type: string
        - id: siteAuthSettings.openIdIssuer
          type: string
        - id: siteAuthSettings.googleClientId
          type: string
          description: "Gets or sets the OpenID\rConnect Client ID for the Google web application.\rThis setting is required for enabling Google Sign-In.\rGoogle Sign-In documentation:\rhttps://developers.google.com/identity/sign-in/web/"
        - id: siteAuthSettings.googleClientSecret
          type: string
          description: "Gets or sets the\rclient secret associated with the Google web application.\rThis setting is required for enabling Google Sign-In.\rGoogle Sign-In documentation:\rhttps://developers.google.com/identity/sign-in/web/"
        - id: siteAuthSettings.googleOAuthScopes
          type: array
          description: "Gets or sets the OAuth\r2.0 scopes that will be requested as part of Google Sign-In\rauthentication.\rThis setting is optional. If not specified, \"openid\",\r\"profile\", and \"email\" are used as default scopes.\rGoogle Sign-In documentation:\rhttps://developers.google.com/identity/sign-in/web/"
        - id: siteAuthSettings.facebookAppId
          type: string
          description: "Gets or sets the App ID of\rthe Facebook app used for login.\rThis setting is required for enabling Facebook Login.\rFacebook Login documentation:\rhttps://developers.facebook.com/docs/facebook-login"
        - id: siteAuthSettings.facebookAppSecret
          type: string
          description: "Gets or sets the App\rSecret of the Facebook app used for Facebook Login.\rThis setting is required for enabling Facebook Login.\rFacebook Login documentation:\rhttps://developers.facebook.com/docs/facebook-login"
        - id: siteAuthSettings.facebookOAuthScopes
          type: array
          description: "Gets or sets the\rOAuth 2.0 scopes that will be requested as part of Facebook Login\rauthentication.\rThis setting is optional.\rFacebook Login documentation:\rhttps://developers.facebook.com/docs/facebook-login"
        - id: siteAuthSettings.twitterConsumerKey
          type: string
          description: "Gets or sets the\rOAuth 1.0a consumer key of the Twitter application used for sign-in.\rThis setting is required for enabling Twitter Sign-In.\rTwitter Sign-In documentation:\rhttps://dev.twitter.com/web/sign-in"
        - id: siteAuthSettings.twitterConsumerSecret
          type: string
          description: "Gets or sets the\rOAuth 1.0a consumer secret of the Twitter application used for sign-in.\rThis setting is required for enabling Twitter Sign-In.\rTwitter Sign-In documentation:\rhttps://dev.twitter.com/web/sign-in"
        - id: siteAuthSettings.microsoftAccountClientId
          type: string
          description: "Gets or sets\rthe OAuth 2.0 client ID that was created for the app used for\rauthentication.\rThis setting is required for enabling Microsoft Account\rauthentication.\rMicrosoft Account OAuth documentation:\rhttps://dev.onedrive.com/auth/msa_oauth.htm"
        - id: siteAuthSettings.microsoftAccountClientSecret
          type: string
          description: "Gets or\rsets the OAuth 2.0 client secret that was created for the app used for\rauthentication.\rThis setting is required for enabling Microsoft Account\rauthentication.\rMicrosoft Account OAuth documentation:\rhttps://dev.onedrive.com/auth/msa_oauth.htm"
        - id: siteAuthSettings.microsoftAccountOAuthScopes
          type: array
          description: "Gets or sets\rthe OAuth 2.0 scopes that will be requested as part of Microsoft Account\rauthentication.\rThis setting is optional. If not specified, \"wl.basic\" is used\ras the default scope.\rMicrosoft Account Scopes and permissions documentation:\rhttps://msdn.microsoft.com/en-us/library/dn631845.aspx"
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteAuthSettings} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteAuthSettingsSlot(resourceGroupName, name,
        siteAuthSettings, siteAuthSettings.enabled,
        siteAuthSettings.httpApiPrefixPath,
        siteAuthSettings.unauthenticatedClientAction,
        siteAuthSettings.tokenStoreEnabled,
        siteAuthSettings.allowedExternalRedirectUrls,
        siteAuthSettings.defaultProvider,
        siteAuthSettings.tokenRefreshExtensionHours, siteAuthSettings.clientId,
        siteAuthSettings.clientSecret, siteAuthSettings.issuer,
        siteAuthSettings.allowedAudiences,
        siteAuthSettings.additionalLoginParams, siteAuthSettings.aadClientId,
        siteAuthSettings.openIdIssuer, siteAuthSettings.googleClientId,
        siteAuthSettings.googleClientSecret, siteAuthSettings.googleOAuthScopes,
        siteAuthSettings.facebookAppId, siteAuthSettings.facebookAppSecret,
        siteAuthSettings.facebookOAuthScopes,
        siteAuthSettings.twitterConsumerKey,
        siteAuthSettings.twitterConsumerSecret,
        siteAuthSettings.microsoftAccountClientId,
        siteAuthSettings.microsoftAccountClientSecret,
        siteAuthSettings.microsoftAccountOAuthScopes, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteAuthSettingsSlot(resourceGroupName, name,
      siteAuthSettings, siteAuthSettings.enabled,
      siteAuthSettings.httpApiPrefixPath,
      siteAuthSettings.unauthenticatedClientAction,
      siteAuthSettings.tokenStoreEnabled,
      siteAuthSettings.allowedExternalRedirectUrls,
      siteAuthSettings.defaultProvider,
      siteAuthSettings.tokenRefreshExtensionHours, siteAuthSettings.clientId,
      siteAuthSettings.clientSecret, siteAuthSettings.issuer,
      siteAuthSettings.allowedAudiences, siteAuthSettings.additionalLoginParams,
      siteAuthSettings.aadClientId, siteAuthSettings.openIdIssuer,
      siteAuthSettings.googleClientId, siteAuthSettings.googleClientSecret,
      siteAuthSettings.googleOAuthScopes, siteAuthSettings.facebookAppId,
      siteAuthSettings.facebookAppSecret, siteAuthSettings.facebookOAuthScopes,
      siteAuthSettings.twitterConsumerKey,
      siteAuthSettings.twitterConsumerSecret,
      siteAuthSettings.microsoftAccountClientId,
      siteAuthSettings.microsoftAccountClientSecret,
      siteAuthSettings.microsoftAccountOAuthScopes, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#updateSiteAuthSettingsSlot~client'
      - 'Sites#updateSiteAuthSettingsSlot~callback'
      - 'Sites#updateSiteAuthSettingsSlot~options'
      - 'Sites#updateSiteAuthSettingsSlot~requestUrl'
      - 'Sites#updateSiteAuthSettingsSlot~requestUrl'
      - 'Sites#updateSiteAuthSettingsSlot~requestUrl'
      - 'Sites#updateSiteAuthSettingsSlot~requestUrl'
      - 'Sites#updateSiteAuthSettingsSlot~requestUrl'
      - 'Sites#updateSiteAuthSettingsSlot~queryParameters'
      - 'Sites#updateSiteAuthSettingsSlot~requestUrl'
      - 'Sites#updateSiteAuthSettingsSlot~regex'
      - 'Sites#updateSiteAuthSettingsSlot~requestUrl'
      - 'Sites#updateSiteAuthSettingsSlot~httpRequest'
      - 'Sites#updateSiteAuthSettingsSlot~headerName'
      - 'Sites#updateSiteAuthSettingsSlot~requestContent'
      - 'Sites#updateSiteAuthSettingsSlot~requestModel'
      - 'Sites#updateSiteAuthSettingsSlot~requestModelMapper'
      - 'Sites#updateSiteAuthSettingsSlot~requestModel'
      - 'Sites#updateSiteAuthSettingsSlot~requestContent'
      - 'Sites#updateSiteAuthSettingsSlot~serializationError'
  - uid: 'Sites#listSitePublishingCredentials'
    id: listSitePublishingCredentials
    parent: Sites
    name: >-
      listSitePublishingCredentials(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link User} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSitePublishingCredentials(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSitePublishingCredentials(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSitePublishingCredentials~client'
      - 'Sites#listSitePublishingCredentials~callback'
      - 'Sites#listSitePublishingCredentials~options'
  - uid: 'Sites#beginListSitePublishingCredentials'
    id: beginListSitePublishingCredentials
    parent: Sites
    name: >-
      beginListSitePublishingCredentials(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link User} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginListSitePublishingCredentials(resourceGroupName, name,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.beginListSitePublishingCredentials(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#beginListSitePublishingCredentials~client'
      - 'Sites#beginListSitePublishingCredentials~callback'
      - 'Sites#beginListSitePublishingCredentials~options'
      - 'Sites#beginListSitePublishingCredentials~requestUrl'
      - 'Sites#beginListSitePublishingCredentials~requestUrl'
      - 'Sites#beginListSitePublishingCredentials~requestUrl'
      - 'Sites#beginListSitePublishingCredentials~requestUrl'
      - 'Sites#beginListSitePublishingCredentials~queryParameters'
      - 'Sites#beginListSitePublishingCredentials~requestUrl'
      - 'Sites#beginListSitePublishingCredentials~regex'
      - 'Sites#beginListSitePublishingCredentials~requestUrl'
      - 'Sites#beginListSitePublishingCredentials~httpRequest'
      - 'Sites#beginListSitePublishingCredentials~headerName'
  - uid: 'Sites#listSitePublishingCredentialsSlot'
    id: listSitePublishingCredentialsSlot
    parent: Sites
    name: >-
      listSitePublishingCredentialsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link User} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSitePublishingCredentialsSlot(resourceGroupName, name,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.listSitePublishingCredentialsSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#listSitePublishingCredentialsSlot~client'
      - 'Sites#listSitePublishingCredentialsSlot~callback'
      - 'Sites#listSitePublishingCredentialsSlot~options'
  - uid: 'Sites#beginListSitePublishingCredentialsSlot'
    id: beginListSitePublishingCredentialsSlot
    parent: Sites
    name: >-
      beginListSitePublishingCredentialsSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link User} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginListSitePublishingCredentialsSlot(resourceGroupName, name,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.beginListSitePublishingCredentialsSlot(resourceGroupName, name,
      slot, options, options.customHeaders, callback)
    children:
      - 'Sites#beginListSitePublishingCredentialsSlot~client'
      - 'Sites#beginListSitePublishingCredentialsSlot~callback'
      - 'Sites#beginListSitePublishingCredentialsSlot~options'
      - 'Sites#beginListSitePublishingCredentialsSlot~requestUrl'
      - 'Sites#beginListSitePublishingCredentialsSlot~requestUrl'
      - 'Sites#beginListSitePublishingCredentialsSlot~requestUrl'
      - 'Sites#beginListSitePublishingCredentialsSlot~requestUrl'
      - 'Sites#beginListSitePublishingCredentialsSlot~requestUrl'
      - 'Sites#beginListSitePublishingCredentialsSlot~queryParameters'
      - 'Sites#beginListSitePublishingCredentialsSlot~requestUrl'
      - 'Sites#beginListSitePublishingCredentialsSlot~regex'
      - 'Sites#beginListSitePublishingCredentialsSlot~requestUrl'
      - 'Sites#beginListSitePublishingCredentialsSlot~httpRequest'
      - 'Sites#beginListSitePublishingCredentialsSlot~headerName'
  - uid: 'Sites#listSiteMetadata'
    id: listSiteMetadata
    parent: Sites
    name: >-
      listSiteMetadata(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteMetadata(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteMetadata(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteMetadata~client'
      - 'Sites#listSiteMetadata~callback'
      - 'Sites#listSiteMetadata~options'
      - 'Sites#listSiteMetadata~requestUrl'
      - 'Sites#listSiteMetadata~requestUrl'
      - 'Sites#listSiteMetadata~requestUrl'
      - 'Sites#listSiteMetadata~requestUrl'
      - 'Sites#listSiteMetadata~queryParameters'
      - 'Sites#listSiteMetadata~requestUrl'
      - 'Sites#listSiteMetadata~regex'
      - 'Sites#listSiteMetadata~requestUrl'
      - 'Sites#listSiteMetadata~httpRequest'
      - 'Sites#listSiteMetadata~headerName'
  - uid: 'Sites#listSiteMetadataSlot'
    id: listSiteMetadataSlot
    parent: Sites
    name: >-
      listSiteMetadataSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteMetadataSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteMetadataSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteMetadataSlot~client'
      - 'Sites#listSiteMetadataSlot~callback'
      - 'Sites#listSiteMetadataSlot~options'
      - 'Sites#listSiteMetadataSlot~requestUrl'
      - 'Sites#listSiteMetadataSlot~requestUrl'
      - 'Sites#listSiteMetadataSlot~requestUrl'
      - 'Sites#listSiteMetadataSlot~requestUrl'
      - 'Sites#listSiteMetadataSlot~requestUrl'
      - 'Sites#listSiteMetadataSlot~queryParameters'
      - 'Sites#listSiteMetadataSlot~requestUrl'
      - 'Sites#listSiteMetadataSlot~regex'
      - 'Sites#listSiteMetadataSlot~requestUrl'
      - 'Sites#listSiteMetadataSlot~httpRequest'
      - 'Sites#listSiteMetadataSlot~headerName'
  - uid: 'Sites#updateSiteMetadata'
    id: updateSiteMetadata
    parent: Sites
    name: >-
      updateSiteMetadata(resourceGroupName, name, metadata, metadata.properties,
      metadata.id, metadata.name, metadata.kind, metadata.location,
      metadata.type, metadata.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: metadata
          type: object
          description: Meta data of web app
        - id: metadata.properties
          type: object
          description: Settings
        - id: metadata.id
          type: string
          description: Resource Id
        - id: metadata.name
          type: string
          description: Resource Name
        - id: metadata.kind
          type: string
          description: Kind of resource
        - id: metadata.location
          type: string
          description: Resource Location
        - id: metadata.type
          type: string
          description: Resource type
        - id: metadata.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteMetadata(resourceGroupName, name, metadata,
        metadata.properties, metadata.id, metadata.name, metadata.kind,
        metadata.location, metadata.type, metadata.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteMetadata(resourceGroupName, name, metadata,
      metadata.properties, metadata.id, metadata.name, metadata.kind,
      metadata.location, metadata.type, metadata.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#updateSiteMetadata~client'
      - 'Sites#updateSiteMetadata~callback'
      - 'Sites#updateSiteMetadata~options'
      - 'Sites#updateSiteMetadata~requestUrl'
      - 'Sites#updateSiteMetadata~requestUrl'
      - 'Sites#updateSiteMetadata~requestUrl'
      - 'Sites#updateSiteMetadata~requestUrl'
      - 'Sites#updateSiteMetadata~queryParameters'
      - 'Sites#updateSiteMetadata~requestUrl'
      - 'Sites#updateSiteMetadata~regex'
      - 'Sites#updateSiteMetadata~requestUrl'
      - 'Sites#updateSiteMetadata~httpRequest'
      - 'Sites#updateSiteMetadata~headerName'
      - 'Sites#updateSiteMetadata~requestContent'
      - 'Sites#updateSiteMetadata~requestModel'
      - 'Sites#updateSiteMetadata~requestModelMapper'
      - 'Sites#updateSiteMetadata~requestModel'
      - 'Sites#updateSiteMetadata~requestContent'
      - 'Sites#updateSiteMetadata~serializationError'
  - uid: 'Sites#updateSiteMetadataSlot'
    id: updateSiteMetadataSlot
    parent: Sites
    name: >-
      updateSiteMetadataSlot(resourceGroupName, name, metadata,
      metadata.properties, metadata.id, metadata.name, metadata.kind,
      metadata.location, metadata.type, metadata.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: metadata
          type: object
          description: Meta data of web app
        - id: metadata.properties
          type: object
          description: Settings
        - id: metadata.id
          type: string
          description: Resource Id
        - id: metadata.name
          type: string
          description: Resource Name
        - id: metadata.kind
          type: string
          description: Kind of resource
        - id: metadata.location
          type: string
          description: Resource Location
        - id: metadata.type
          type: string
          description: Resource type
        - id: metadata.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link StringDictionary} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteMetadataSlot(resourceGroupName, name, metadata,
        metadata.properties, metadata.id, metadata.name, metadata.kind,
        metadata.location, metadata.type, metadata.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteMetadataSlot(resourceGroupName, name, metadata,
      metadata.properties, metadata.id, metadata.name, metadata.kind,
      metadata.location, metadata.type, metadata.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#updateSiteMetadataSlot~client'
      - 'Sites#updateSiteMetadataSlot~callback'
      - 'Sites#updateSiteMetadataSlot~options'
      - 'Sites#updateSiteMetadataSlot~requestUrl'
      - 'Sites#updateSiteMetadataSlot~requestUrl'
      - 'Sites#updateSiteMetadataSlot~requestUrl'
      - 'Sites#updateSiteMetadataSlot~requestUrl'
      - 'Sites#updateSiteMetadataSlot~requestUrl'
      - 'Sites#updateSiteMetadataSlot~queryParameters'
      - 'Sites#updateSiteMetadataSlot~requestUrl'
      - 'Sites#updateSiteMetadataSlot~regex'
      - 'Sites#updateSiteMetadataSlot~requestUrl'
      - 'Sites#updateSiteMetadataSlot~httpRequest'
      - 'Sites#updateSiteMetadataSlot~headerName'
      - 'Sites#updateSiteMetadataSlot~requestContent'
      - 'Sites#updateSiteMetadataSlot~requestModel'
      - 'Sites#updateSiteMetadataSlot~requestModelMapper'
      - 'Sites#updateSiteMetadataSlot~requestModel'
      - 'Sites#updateSiteMetadataSlot~requestContent'
      - 'Sites#updateSiteMetadataSlot~serializationError'
  - uid: 'Sites#getSiteLogsConfig'
    id: getSiteLogsConfig
    parent: Sites
    name: >-
      getSiteLogsConfig(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteLogsConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteLogsConfig(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteLogsConfig(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteLogsConfig~client'
      - 'Sites#getSiteLogsConfig~callback'
      - 'Sites#getSiteLogsConfig~options'
      - 'Sites#getSiteLogsConfig~requestUrl'
      - 'Sites#getSiteLogsConfig~requestUrl'
      - 'Sites#getSiteLogsConfig~requestUrl'
      - 'Sites#getSiteLogsConfig~requestUrl'
      - 'Sites#getSiteLogsConfig~queryParameters'
      - 'Sites#getSiteLogsConfig~requestUrl'
      - 'Sites#getSiteLogsConfig~regex'
      - 'Sites#getSiteLogsConfig~requestUrl'
      - 'Sites#getSiteLogsConfig~httpRequest'
      - 'Sites#getSiteLogsConfig~headerName'
  - uid: 'Sites#updateSiteLogsConfig'
    id: updateSiteLogsConfig
    parent: Sites
    name: >-
      updateSiteLogsConfig(resourceGroupName, name, siteLogsConfig,
      siteLogsConfig.applicationLogs, siteLogsConfig.applicationLogs.fileSystem,
      siteLogsConfig.applicationLogs.fileSystem.level,
      siteLogsConfig.applicationLogs.azureTableStorage,
      siteLogsConfig.applicationLogs.azureTableStorage.level,
      siteLogsConfig.applicationLogs.azureTableStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage,
      siteLogsConfig.applicationLogs.azureBlobStorage.level,
      siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs, siteLogsConfig.httpLogs.fileSystem,
      siteLogsConfig.httpLogs.fileSystem.retentionInMb,
      siteLogsConfig.httpLogs.fileSystem.retentionInDays,
      siteLogsConfig.httpLogs.fileSystem.enabled,
      siteLogsConfig.httpLogs.azureBlobStorage,
      siteLogsConfig.httpLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs.azureBlobStorage.enabled,
      siteLogsConfig.failedRequestsTracing,
      siteLogsConfig.detailedErrorMessages,
      siteLogsConfig.detailedErrorMessages.enabled, siteLogsConfig.id,
      siteLogsConfig.name, siteLogsConfig.kind, siteLogsConfig.location,
      siteLogsConfig.type, siteLogsConfig.tags, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteLogsConfig
          type: object
          description: Site logs configuration
        - id: siteLogsConfig.applicationLogs
          type: object
          description: "Application logs\rconfiguration"
        - id: siteLogsConfig.applicationLogs.fileSystem
          type: object
          description: "Application\rlogs to file system configuration"
        - id: siteLogsConfig.applicationLogs.fileSystem.level
          type: string
          description: "Log\rlevel. Possible values include: 'Off', 'Verbose', 'Information',\r'Warning', 'Error'"
        - id: siteLogsConfig.applicationLogs.azureTableStorage
          type: object
          description: Application logs to azure table storage configuration
        - id: siteLogsConfig.applicationLogs.azureTableStorage.level
          type: string
          description: "Log level. Possible values include: 'Off', 'Verbose', 'Information',\r'Warning', 'Error'"
        - id: siteLogsConfig.applicationLogs.azureTableStorage.sasUrl
          type: string
          description: SAS url to an azure table with add/query/delete permissions
        - id: siteLogsConfig.applicationLogs.azureBlobStorage
          type: object
          description: Application logs to blob storage configuration
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.level
          type: string
          description: "Log\rlevel. Possible values include: 'Off', 'Verbose', 'Information',\r'Warning', 'Error'"
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl
          type: string
          description: >-
            SAS url to a azure blob container with read/write/list/delete
            permissions
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays
          type: number
          description: "Retention in days.\rRemove blobs older than X days.\r0 or lower means no retention."
        - id: siteLogsConfig.httpLogs
          type: object
          description: Http logs configuration
        - id: siteLogsConfig.httpLogs.fileSystem
          type: object
          description: "Http logs to file\rsystem configuration"
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInMb
          type: number
          description: "Maximum\rsize in megabytes that http log files can use.\rWhen reached old log files will be removed to make space for\rnew ones.\rValue can range between 25 and 100."
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInDays
          type: number
          description: "Retention in days.\rRemove files older than X days.\r0 or lower means no retention."
        - id: siteLogsConfig.httpLogs.fileSystem.enabled
          type: boolean
          description: Enabled
        - id: siteLogsConfig.httpLogs.azureBlobStorage
          type: object
          description: "Http logs to\razure blob storage configuration"
        - id: siteLogsConfig.httpLogs.azureBlobStorage.sasUrl
          type: string
          description: "SAS url\rto a azure blob container with read/write/list/delete permissions"
        - id: siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays
          type: number
          description: "Retention in days.\rRemove blobs older than X days.\r0 or lower means no retention."
        - id: siteLogsConfig.httpLogs.azureBlobStorage.enabled
          type: boolean
          description: Enabled
        - id: siteLogsConfig.failedRequestsTracing
          type: object
          description: "Failed requests\rtracing configuration"
        - id: siteLogsConfig.detailedErrorMessages
          type: object
          description: "Detailed error\rmessages configuration"
        - id: siteLogsConfig.detailedErrorMessages.enabled
          type: boolean
          description: Enabled
        - id: siteLogsConfig.id
          type: string
          description: Resource Id
        - id: siteLogsConfig.name
          type: string
          description: Resource Name
        - id: siteLogsConfig.kind
          type: string
          description: Kind of resource
        - id: siteLogsConfig.location
          type: string
          description: Resource Location
        - id: siteLogsConfig.type
          type: string
          description: Resource type
        - id: siteLogsConfig.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteLogsConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteLogsConfig(resourceGroupName, name, siteLogsConfig,
        siteLogsConfig.applicationLogs,
        siteLogsConfig.applicationLogs.fileSystem,
        siteLogsConfig.applicationLogs.fileSystem.level,
        siteLogsConfig.applicationLogs.azureTableStorage,
        siteLogsConfig.applicationLogs.azureTableStorage.level,
        siteLogsConfig.applicationLogs.azureTableStorage.sasUrl,
        siteLogsConfig.applicationLogs.azureBlobStorage,
        siteLogsConfig.applicationLogs.azureBlobStorage.level,
        siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl,
        siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays,
        siteLogsConfig.httpLogs, siteLogsConfig.httpLogs.fileSystem,
        siteLogsConfig.httpLogs.fileSystem.retentionInMb,
        siteLogsConfig.httpLogs.fileSystem.retentionInDays,
        siteLogsConfig.httpLogs.fileSystem.enabled,
        siteLogsConfig.httpLogs.azureBlobStorage,
        siteLogsConfig.httpLogs.azureBlobStorage.sasUrl,
        siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays,
        siteLogsConfig.httpLogs.azureBlobStorage.enabled,
        siteLogsConfig.failedRequestsTracing,
        siteLogsConfig.detailedErrorMessages,
        siteLogsConfig.detailedErrorMessages.enabled, siteLogsConfig.id,
        siteLogsConfig.name, siteLogsConfig.kind, siteLogsConfig.location,
        siteLogsConfig.type, siteLogsConfig.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteLogsConfig(resourceGroupName, name, siteLogsConfig,
      siteLogsConfig.applicationLogs, siteLogsConfig.applicationLogs.fileSystem,
      siteLogsConfig.applicationLogs.fileSystem.level,
      siteLogsConfig.applicationLogs.azureTableStorage,
      siteLogsConfig.applicationLogs.azureTableStorage.level,
      siteLogsConfig.applicationLogs.azureTableStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage,
      siteLogsConfig.applicationLogs.azureBlobStorage.level,
      siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs, siteLogsConfig.httpLogs.fileSystem,
      siteLogsConfig.httpLogs.fileSystem.retentionInMb,
      siteLogsConfig.httpLogs.fileSystem.retentionInDays,
      siteLogsConfig.httpLogs.fileSystem.enabled,
      siteLogsConfig.httpLogs.azureBlobStorage,
      siteLogsConfig.httpLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs.azureBlobStorage.enabled,
      siteLogsConfig.failedRequestsTracing,
      siteLogsConfig.detailedErrorMessages,
      siteLogsConfig.detailedErrorMessages.enabled, siteLogsConfig.id,
      siteLogsConfig.name, siteLogsConfig.kind, siteLogsConfig.location,
      siteLogsConfig.type, siteLogsConfig.tags, options, options.customHeaders,
      callback)
    children:
      - 'Sites#updateSiteLogsConfig~client'
      - 'Sites#updateSiteLogsConfig~callback'
      - 'Sites#updateSiteLogsConfig~options'
      - 'Sites#updateSiteLogsConfig~requestUrl'
      - 'Sites#updateSiteLogsConfig~requestUrl'
      - 'Sites#updateSiteLogsConfig~requestUrl'
      - 'Sites#updateSiteLogsConfig~requestUrl'
      - 'Sites#updateSiteLogsConfig~queryParameters'
      - 'Sites#updateSiteLogsConfig~requestUrl'
      - 'Sites#updateSiteLogsConfig~regex'
      - 'Sites#updateSiteLogsConfig~requestUrl'
      - 'Sites#updateSiteLogsConfig~httpRequest'
      - 'Sites#updateSiteLogsConfig~headerName'
      - 'Sites#updateSiteLogsConfig~requestContent'
      - 'Sites#updateSiteLogsConfig~requestModel'
      - 'Sites#updateSiteLogsConfig~requestModelMapper'
      - 'Sites#updateSiteLogsConfig~requestModel'
      - 'Sites#updateSiteLogsConfig~requestContent'
      - 'Sites#updateSiteLogsConfig~serializationError'
  - uid: 'Sites#getSiteLogsConfigSlot'
    id: getSiteLogsConfigSlot
    parent: Sites
    name: >-
      getSiteLogsConfigSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteLogsConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteLogsConfigSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteLogsConfigSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteLogsConfigSlot~client'
      - 'Sites#getSiteLogsConfigSlot~callback'
      - 'Sites#getSiteLogsConfigSlot~options'
      - 'Sites#getSiteLogsConfigSlot~requestUrl'
      - 'Sites#getSiteLogsConfigSlot~requestUrl'
      - 'Sites#getSiteLogsConfigSlot~requestUrl'
      - 'Sites#getSiteLogsConfigSlot~requestUrl'
      - 'Sites#getSiteLogsConfigSlot~requestUrl'
      - 'Sites#getSiteLogsConfigSlot~queryParameters'
      - 'Sites#getSiteLogsConfigSlot~requestUrl'
      - 'Sites#getSiteLogsConfigSlot~regex'
      - 'Sites#getSiteLogsConfigSlot~requestUrl'
      - 'Sites#getSiteLogsConfigSlot~httpRequest'
      - 'Sites#getSiteLogsConfigSlot~headerName'
  - uid: 'Sites#updateSiteLogsConfigSlot'
    id: updateSiteLogsConfigSlot
    parent: Sites
    name: >-
      updateSiteLogsConfigSlot(resourceGroupName, name, siteLogsConfig,
      siteLogsConfig.applicationLogs, siteLogsConfig.applicationLogs.fileSystem,
      siteLogsConfig.applicationLogs.fileSystem.level,
      siteLogsConfig.applicationLogs.azureTableStorage,
      siteLogsConfig.applicationLogs.azureTableStorage.level,
      siteLogsConfig.applicationLogs.azureTableStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage,
      siteLogsConfig.applicationLogs.azureBlobStorage.level,
      siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs, siteLogsConfig.httpLogs.fileSystem,
      siteLogsConfig.httpLogs.fileSystem.retentionInMb,
      siteLogsConfig.httpLogs.fileSystem.retentionInDays,
      siteLogsConfig.httpLogs.fileSystem.enabled,
      siteLogsConfig.httpLogs.azureBlobStorage,
      siteLogsConfig.httpLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs.azureBlobStorage.enabled,
      siteLogsConfig.failedRequestsTracing,
      siteLogsConfig.detailedErrorMessages,
      siteLogsConfig.detailedErrorMessages.enabled, siteLogsConfig.id,
      siteLogsConfig.name, siteLogsConfig.kind, siteLogsConfig.location,
      siteLogsConfig.type, siteLogsConfig.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: siteLogsConfig
          type: object
          description: Site logs configuration
        - id: siteLogsConfig.applicationLogs
          type: object
          description: "Application logs\rconfiguration"
        - id: siteLogsConfig.applicationLogs.fileSystem
          type: object
          description: "Application\rlogs to file system configuration"
        - id: siteLogsConfig.applicationLogs.fileSystem.level
          type: string
          description: "Log\rlevel. Possible values include: 'Off', 'Verbose', 'Information',\r'Warning', 'Error'"
        - id: siteLogsConfig.applicationLogs.azureTableStorage
          type: object
          description: Application logs to azure table storage configuration
        - id: siteLogsConfig.applicationLogs.azureTableStorage.level
          type: string
          description: "Log level. Possible values include: 'Off', 'Verbose', 'Information',\r'Warning', 'Error'"
        - id: siteLogsConfig.applicationLogs.azureTableStorage.sasUrl
          type: string
          description: SAS url to an azure table with add/query/delete permissions
        - id: siteLogsConfig.applicationLogs.azureBlobStorage
          type: object
          description: Application logs to blob storage configuration
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.level
          type: string
          description: "Log\rlevel. Possible values include: 'Off', 'Verbose', 'Information',\r'Warning', 'Error'"
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl
          type: string
          description: >-
            SAS url to a azure blob container with read/write/list/delete
            permissions
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays
          type: number
          description: "Retention in days.\rRemove blobs older than X days.\r0 or lower means no retention."
        - id: siteLogsConfig.httpLogs
          type: object
          description: Http logs configuration
        - id: siteLogsConfig.httpLogs.fileSystem
          type: object
          description: "Http logs to file\rsystem configuration"
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInMb
          type: number
          description: "Maximum\rsize in megabytes that http log files can use.\rWhen reached old log files will be removed to make space for\rnew ones.\rValue can range between 25 and 100."
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInDays
          type: number
          description: "Retention in days.\rRemove files older than X days.\r0 or lower means no retention."
        - id: siteLogsConfig.httpLogs.fileSystem.enabled
          type: boolean
          description: Enabled
        - id: siteLogsConfig.httpLogs.azureBlobStorage
          type: object
          description: "Http logs to\razure blob storage configuration"
        - id: siteLogsConfig.httpLogs.azureBlobStorage.sasUrl
          type: string
          description: "SAS url\rto a azure blob container with read/write/list/delete permissions"
        - id: siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays
          type: number
          description: "Retention in days.\rRemove blobs older than X days.\r0 or lower means no retention."
        - id: siteLogsConfig.httpLogs.azureBlobStorage.enabled
          type: boolean
          description: Enabled
        - id: siteLogsConfig.failedRequestsTracing
          type: object
          description: "Failed requests\rtracing configuration"
        - id: siteLogsConfig.detailedErrorMessages
          type: object
          description: "Detailed error\rmessages configuration"
        - id: siteLogsConfig.detailedErrorMessages.enabled
          type: boolean
          description: Enabled
        - id: siteLogsConfig.id
          type: string
          description: Resource Id
        - id: siteLogsConfig.name
          type: string
          description: Resource Name
        - id: siteLogsConfig.kind
          type: string
          description: Kind of resource
        - id: siteLogsConfig.location
          type: string
          description: Resource Location
        - id: siteLogsConfig.type
          type: string
          description: Resource type
        - id: siteLogsConfig.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SiteLogsConfig} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteLogsConfigSlot(resourceGroupName, name,
        siteLogsConfig, siteLogsConfig.applicationLogs,
        siteLogsConfig.applicationLogs.fileSystem,
        siteLogsConfig.applicationLogs.fileSystem.level,
        siteLogsConfig.applicationLogs.azureTableStorage,
        siteLogsConfig.applicationLogs.azureTableStorage.level,
        siteLogsConfig.applicationLogs.azureTableStorage.sasUrl,
        siteLogsConfig.applicationLogs.azureBlobStorage,
        siteLogsConfig.applicationLogs.azureBlobStorage.level,
        siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl,
        siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays,
        siteLogsConfig.httpLogs, siteLogsConfig.httpLogs.fileSystem,
        siteLogsConfig.httpLogs.fileSystem.retentionInMb,
        siteLogsConfig.httpLogs.fileSystem.retentionInDays,
        siteLogsConfig.httpLogs.fileSystem.enabled,
        siteLogsConfig.httpLogs.azureBlobStorage,
        siteLogsConfig.httpLogs.azureBlobStorage.sasUrl,
        siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays,
        siteLogsConfig.httpLogs.azureBlobStorage.enabled,
        siteLogsConfig.failedRequestsTracing,
        siteLogsConfig.detailedErrorMessages,
        siteLogsConfig.detailedErrorMessages.enabled, siteLogsConfig.id,
        siteLogsConfig.name, siteLogsConfig.kind, siteLogsConfig.location,
        siteLogsConfig.type, siteLogsConfig.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteLogsConfigSlot(resourceGroupName, name, siteLogsConfig,
      siteLogsConfig.applicationLogs, siteLogsConfig.applicationLogs.fileSystem,
      siteLogsConfig.applicationLogs.fileSystem.level,
      siteLogsConfig.applicationLogs.azureTableStorage,
      siteLogsConfig.applicationLogs.azureTableStorage.level,
      siteLogsConfig.applicationLogs.azureTableStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage,
      siteLogsConfig.applicationLogs.azureBlobStorage.level,
      siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs, siteLogsConfig.httpLogs.fileSystem,
      siteLogsConfig.httpLogs.fileSystem.retentionInMb,
      siteLogsConfig.httpLogs.fileSystem.retentionInDays,
      siteLogsConfig.httpLogs.fileSystem.enabled,
      siteLogsConfig.httpLogs.azureBlobStorage,
      siteLogsConfig.httpLogs.azureBlobStorage.sasUrl,
      siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays,
      siteLogsConfig.httpLogs.azureBlobStorage.enabled,
      siteLogsConfig.failedRequestsTracing,
      siteLogsConfig.detailedErrorMessages,
      siteLogsConfig.detailedErrorMessages.enabled, siteLogsConfig.id,
      siteLogsConfig.name, siteLogsConfig.kind, siteLogsConfig.location,
      siteLogsConfig.type, siteLogsConfig.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#updateSiteLogsConfigSlot~client'
      - 'Sites#updateSiteLogsConfigSlot~callback'
      - 'Sites#updateSiteLogsConfigSlot~options'
      - 'Sites#updateSiteLogsConfigSlot~requestUrl'
      - 'Sites#updateSiteLogsConfigSlot~requestUrl'
      - 'Sites#updateSiteLogsConfigSlot~requestUrl'
      - 'Sites#updateSiteLogsConfigSlot~requestUrl'
      - 'Sites#updateSiteLogsConfigSlot~requestUrl'
      - 'Sites#updateSiteLogsConfigSlot~queryParameters'
      - 'Sites#updateSiteLogsConfigSlot~requestUrl'
      - 'Sites#updateSiteLogsConfigSlot~regex'
      - 'Sites#updateSiteLogsConfigSlot~requestUrl'
      - 'Sites#updateSiteLogsConfigSlot~httpRequest'
      - 'Sites#updateSiteLogsConfigSlot~headerName'
      - 'Sites#updateSiteLogsConfigSlot~requestContent'
      - 'Sites#updateSiteLogsConfigSlot~requestModel'
      - 'Sites#updateSiteLogsConfigSlot~requestModelMapper'
      - 'Sites#updateSiteLogsConfigSlot~requestModel'
      - 'Sites#updateSiteLogsConfigSlot~requestContent'
      - 'Sites#updateSiteLogsConfigSlot~serializationError'
  - uid: 'Sites#listSitePremierAddOns'
    id: listSitePremierAddOns
    parent: Sites
    name: >-
      listSitePremierAddOns(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSitePremierAddOns(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSitePremierAddOns(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSitePremierAddOns~client'
      - 'Sites#listSitePremierAddOns~callback'
      - 'Sites#listSitePremierAddOns~options'
      - 'Sites#listSitePremierAddOns~requestUrl'
      - 'Sites#listSitePremierAddOns~requestUrl'
      - 'Sites#listSitePremierAddOns~requestUrl'
      - 'Sites#listSitePremierAddOns~requestUrl'
      - 'Sites#listSitePremierAddOns~queryParameters'
      - 'Sites#listSitePremierAddOns~requestUrl'
      - 'Sites#listSitePremierAddOns~regex'
      - 'Sites#listSitePremierAddOns~requestUrl'
      - 'Sites#listSitePremierAddOns~httpRequest'
      - 'Sites#listSitePremierAddOns~headerName'
  - uid: 'Sites#listSitePremierAddOnsSlot'
    id: listSitePremierAddOnsSlot
    parent: Sites
    name: >-
      listSitePremierAddOnsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: slot
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSitePremierAddOnsSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.listSitePremierAddOnsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSitePremierAddOnsSlot~client'
      - 'Sites#listSitePremierAddOnsSlot~callback'
      - 'Sites#listSitePremierAddOnsSlot~options'
      - 'Sites#listSitePremierAddOnsSlot~requestUrl'
      - 'Sites#listSitePremierAddOnsSlot~requestUrl'
      - 'Sites#listSitePremierAddOnsSlot~requestUrl'
      - 'Sites#listSitePremierAddOnsSlot~requestUrl'
      - 'Sites#listSitePremierAddOnsSlot~requestUrl'
      - 'Sites#listSitePremierAddOnsSlot~queryParameters'
      - 'Sites#listSitePremierAddOnsSlot~requestUrl'
      - 'Sites#listSitePremierAddOnsSlot~regex'
      - 'Sites#listSitePremierAddOnsSlot~requestUrl'
      - 'Sites#listSitePremierAddOnsSlot~httpRequest'
      - 'Sites#listSitePremierAddOnsSlot~headerName'
  - uid: 'Sites#getSitePremierAddOn'
    id: getSitePremierAddOn
    parent: Sites
    name: >-
      getSitePremierAddOn(resourceGroupName, name, premierAddOnName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: premierAddOnName
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSitePremierAddOn(resourceGroupName, name, premierAddOnName,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSitePremierAddOn(resourceGroupName, name, premierAddOnName,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSitePremierAddOn~client'
      - 'Sites#getSitePremierAddOn~callback'
      - 'Sites#getSitePremierAddOn~options'
      - 'Sites#getSitePremierAddOn~requestUrl'
      - 'Sites#getSitePremierAddOn~requestUrl'
      - 'Sites#getSitePremierAddOn~requestUrl'
      - 'Sites#getSitePremierAddOn~requestUrl'
      - 'Sites#getSitePremierAddOn~requestUrl'
      - 'Sites#getSitePremierAddOn~queryParameters'
      - 'Sites#getSitePremierAddOn~requestUrl'
      - 'Sites#getSitePremierAddOn~regex'
      - 'Sites#getSitePremierAddOn~requestUrl'
      - 'Sites#getSitePremierAddOn~httpRequest'
      - 'Sites#getSitePremierAddOn~headerName'
  - uid: 'Sites#addSitePremierAddOn'
    id: addSitePremierAddOn
    parent: Sites
    name: >-
      addSitePremierAddOn(resourceGroupName, name, premierAddOnName,
      premierAddOn, premierAddOn.location, premierAddOn.tags, premierAddOn.plan,
      premierAddOn.plan.name, premierAddOn.plan.publisher,
      premierAddOn.plan.product, premierAddOn.plan.promotionCode,
      premierAddOn.plan.version, premierAddOn.properties, premierAddOn.sku,
      premierAddOn.sku.name, premierAddOn.sku.tier, premierAddOn.sku.size,
      premierAddOn.sku.family, premierAddOn.sku.capacity, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: premierAddOnName
          type: string
        - id: premierAddOn
          type: object
        - id: premierAddOn.location
          type: string
          description: "Geo region resource belongs to e.g.\rSouthCentralUS, SouthEastAsia"
        - id: premierAddOn.tags
          type: object
          description: Tags associated with resource
        - id: premierAddOn.plan
          type: object
          description: Azure resource manager plan
        - id: premierAddOn.plan.name
          type: string
          description: The name
        - id: premierAddOn.plan.publisher
          type: string
          description: The publisher
        - id: premierAddOn.plan.product
          type: string
          description: The product
        - id: premierAddOn.plan.promotionCode
          type: string
          description: The promotion code
        - id: premierAddOn.plan.version
          type: string
          description: Version of product
        - id: premierAddOn.properties
          type: object
          description: Resource specific properties
        - id: premierAddOn.sku
          type: object
          description: Sku description of the resource
        - id: premierAddOn.sku.name
          type: string
          description: Name of the resource sku
        - id: premierAddOn.sku.tier
          type: string
          description: Service Tier of the resource sku
        - id: premierAddOn.sku.size
          type: string
          description: Size specifier of the resource sku
        - id: premierAddOn.sku.family
          type: string
          description: Family code of the resource sku
        - id: premierAddOn.sku.capacity
          type: number
          description: "Current number of instances\rassigned to the resource"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function addSitePremierAddOn(resourceGroupName, name, premierAddOnName,
        premierAddOn, premierAddOn.location, premierAddOn.tags,
        premierAddOn.plan, premierAddOn.plan.name, premierAddOn.plan.publisher,
        premierAddOn.plan.product, premierAddOn.plan.promotionCode,
        premierAddOn.plan.version, premierAddOn.properties, premierAddOn.sku,
        premierAddOn.sku.name, premierAddOn.sku.tier, premierAddOn.sku.size,
        premierAddOn.sku.family, premierAddOn.sku.capacity, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.addSitePremierAddOn(resourceGroupName, name, premierAddOnName,
      premierAddOn, premierAddOn.location, premierAddOn.tags, premierAddOn.plan,
      premierAddOn.plan.name, premierAddOn.plan.publisher,
      premierAddOn.plan.product, premierAddOn.plan.promotionCode,
      premierAddOn.plan.version, premierAddOn.properties, premierAddOn.sku,
      premierAddOn.sku.name, premierAddOn.sku.tier, premierAddOn.sku.size,
      premierAddOn.sku.family, premierAddOn.sku.capacity, options,
      options.customHeaders, callback)
    children:
      - 'Sites#addSitePremierAddOn~client'
      - 'Sites#addSitePremierAddOn~callback'
      - 'Sites#addSitePremierAddOn~options'
      - 'Sites#addSitePremierAddOn~requestUrl'
      - 'Sites#addSitePremierAddOn~requestUrl'
      - 'Sites#addSitePremierAddOn~requestUrl'
      - 'Sites#addSitePremierAddOn~requestUrl'
      - 'Sites#addSitePremierAddOn~requestUrl'
      - 'Sites#addSitePremierAddOn~queryParameters'
      - 'Sites#addSitePremierAddOn~requestUrl'
      - 'Sites#addSitePremierAddOn~regex'
      - 'Sites#addSitePremierAddOn~requestUrl'
      - 'Sites#addSitePremierAddOn~httpRequest'
      - 'Sites#addSitePremierAddOn~headerName'
      - 'Sites#addSitePremierAddOn~requestContent'
      - 'Sites#addSitePremierAddOn~requestModel'
      - 'Sites#addSitePremierAddOn~requestModelMapper'
      - 'Sites#addSitePremierAddOn~requestModel'
      - 'Sites#addSitePremierAddOn~requestContent'
      - 'Sites#addSitePremierAddOn~serializationError'
  - uid: 'Sites#deleteSitePremierAddOn'
    id: deleteSitePremierAddOn
    parent: Sites
    name: >-
      deleteSitePremierAddOn(resourceGroupName, name, premierAddOnName, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: premierAddOnName
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSitePremierAddOn(resourceGroupName, name,
        premierAddOnName, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSitePremierAddOn(resourceGroupName, name, premierAddOnName,
      options, options.customHeaders, callback)
    children:
      - 'Sites#deleteSitePremierAddOn~client'
      - 'Sites#deleteSitePremierAddOn~callback'
      - 'Sites#deleteSitePremierAddOn~options'
      - 'Sites#deleteSitePremierAddOn~requestUrl'
      - 'Sites#deleteSitePremierAddOn~requestUrl'
      - 'Sites#deleteSitePremierAddOn~requestUrl'
      - 'Sites#deleteSitePremierAddOn~requestUrl'
      - 'Sites#deleteSitePremierAddOn~requestUrl'
      - 'Sites#deleteSitePremierAddOn~queryParameters'
      - 'Sites#deleteSitePremierAddOn~requestUrl'
      - 'Sites#deleteSitePremierAddOn~regex'
      - 'Sites#deleteSitePremierAddOn~requestUrl'
      - 'Sites#deleteSitePremierAddOn~httpRequest'
      - 'Sites#deleteSitePremierAddOn~headerName'
  - uid: 'Sites#getSitePremierAddOnSlot'
    id: getSitePremierAddOnSlot
    parent: Sites
    name: >-
      getSitePremierAddOnSlot(resourceGroupName, name, premierAddOnName, slot,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: premierAddOnName
          type: string
        - id: slot
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSitePremierAddOnSlot(resourceGroupName, name,
        premierAddOnName, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSitePremierAddOnSlot(resourceGroupName, name, premierAddOnName,
      slot, options, options.customHeaders, callback)
    children:
      - 'Sites#getSitePremierAddOnSlot~client'
      - 'Sites#getSitePremierAddOnSlot~callback'
      - 'Sites#getSitePremierAddOnSlot~options'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~queryParameters'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~regex'
      - 'Sites#getSitePremierAddOnSlot~requestUrl'
      - 'Sites#getSitePremierAddOnSlot~httpRequest'
      - 'Sites#getSitePremierAddOnSlot~headerName'
  - uid: 'Sites#addSitePremierAddOnSlot'
    id: addSitePremierAddOnSlot
    parent: Sites
    name: >-
      addSitePremierAddOnSlot(resourceGroupName, name, premierAddOnName,
      premierAddOn, premierAddOn.location, premierAddOn.tags, premierAddOn.plan,
      premierAddOn.plan.name, premierAddOn.plan.publisher,
      premierAddOn.plan.product, premierAddOn.plan.promotionCode,
      premierAddOn.plan.version, premierAddOn.properties, premierAddOn.sku,
      premierAddOn.sku.name, premierAddOn.sku.tier, premierAddOn.sku.size,
      premierAddOn.sku.family, premierAddOn.sku.capacity, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: premierAddOnName
          type: string
        - id: premierAddOn
          type: object
        - id: premierAddOn.location
          type: string
          description: "Geo region resource belongs to e.g.\rSouthCentralUS, SouthEastAsia"
        - id: premierAddOn.tags
          type: object
          description: Tags associated with resource
        - id: premierAddOn.plan
          type: object
          description: Azure resource manager plan
        - id: premierAddOn.plan.name
          type: string
          description: The name
        - id: premierAddOn.plan.publisher
          type: string
          description: The publisher
        - id: premierAddOn.plan.product
          type: string
          description: The product
        - id: premierAddOn.plan.promotionCode
          type: string
          description: The promotion code
        - id: premierAddOn.plan.version
          type: string
          description: Version of product
        - id: premierAddOn.properties
          type: object
          description: Resource specific properties
        - id: premierAddOn.sku
          type: object
          description: Sku description of the resource
        - id: premierAddOn.sku.name
          type: string
          description: Name of the resource sku
        - id: premierAddOn.sku.tier
          type: string
          description: Service Tier of the resource sku
        - id: premierAddOn.sku.size
          type: string
          description: Size specifier of the resource sku
        - id: premierAddOn.sku.family
          type: string
          description: Family code of the resource sku
        - id: premierAddOn.sku.capacity
          type: number
          description: "Current number of instances\rassigned to the resource"
        - id: slot
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function addSitePremierAddOnSlot(resourceGroupName, name,
        premierAddOnName, premierAddOn, premierAddOn.location,
        premierAddOn.tags, premierAddOn.plan, premierAddOn.plan.name,
        premierAddOn.plan.publisher, premierAddOn.plan.product,
        premierAddOn.plan.promotionCode, premierAddOn.plan.version,
        premierAddOn.properties, premierAddOn.sku, premierAddOn.sku.name,
        premierAddOn.sku.tier, premierAddOn.sku.size, premierAddOn.sku.family,
        premierAddOn.sku.capacity, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.addSitePremierAddOnSlot(resourceGroupName, name, premierAddOnName,
      premierAddOn, premierAddOn.location, premierAddOn.tags, premierAddOn.plan,
      premierAddOn.plan.name, premierAddOn.plan.publisher,
      premierAddOn.plan.product, premierAddOn.plan.promotionCode,
      premierAddOn.plan.version, premierAddOn.properties, premierAddOn.sku,
      premierAddOn.sku.name, premierAddOn.sku.tier, premierAddOn.sku.size,
      premierAddOn.sku.family, premierAddOn.sku.capacity, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#addSitePremierAddOnSlot~client'
      - 'Sites#addSitePremierAddOnSlot~callback'
      - 'Sites#addSitePremierAddOnSlot~options'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~queryParameters'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~regex'
      - 'Sites#addSitePremierAddOnSlot~requestUrl'
      - 'Sites#addSitePremierAddOnSlot~httpRequest'
      - 'Sites#addSitePremierAddOnSlot~headerName'
      - 'Sites#addSitePremierAddOnSlot~requestContent'
      - 'Sites#addSitePremierAddOnSlot~requestModel'
      - 'Sites#addSitePremierAddOnSlot~requestModelMapper'
      - 'Sites#addSitePremierAddOnSlot~requestModel'
      - 'Sites#addSitePremierAddOnSlot~requestContent'
      - 'Sites#addSitePremierAddOnSlot~serializationError'
  - uid: 'Sites#deleteSitePremierAddOnSlot'
    id: deleteSitePremierAddOnSlot
    parent: Sites
    name: >-
      deleteSitePremierAddOnSlot(resourceGroupName, name, premierAddOnName,
      slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: premierAddOnName
          type: string
        - id: slot
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSitePremierAddOnSlot(resourceGroupName, name,
        premierAddOnName, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSitePremierAddOnSlot(resourceGroupName, name,
      premierAddOnName, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#deleteSitePremierAddOnSlot~client'
      - 'Sites#deleteSitePremierAddOnSlot~callback'
      - 'Sites#deleteSitePremierAddOnSlot~options'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~queryParameters'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~regex'
      - 'Sites#deleteSitePremierAddOnSlot~requestUrl'
      - 'Sites#deleteSitePremierAddOnSlot~httpRequest'
      - 'Sites#deleteSitePremierAddOnSlot~headerName'
  - uid: 'Sites#getSiteBackupConfiguration'
    id: getSiteBackupConfiguration
    parent: Sites
    name: >-
      getSiteBackupConfiguration(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupRequest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteBackupConfiguration(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteBackupConfiguration(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteBackupConfiguration~client'
      - 'Sites#getSiteBackupConfiguration~callback'
      - 'Sites#getSiteBackupConfiguration~options'
      - 'Sites#getSiteBackupConfiguration~requestUrl'
      - 'Sites#getSiteBackupConfiguration~requestUrl'
      - 'Sites#getSiteBackupConfiguration~requestUrl'
      - 'Sites#getSiteBackupConfiguration~requestUrl'
      - 'Sites#getSiteBackupConfiguration~queryParameters'
      - 'Sites#getSiteBackupConfiguration~requestUrl'
      - 'Sites#getSiteBackupConfiguration~regex'
      - 'Sites#getSiteBackupConfiguration~requestUrl'
      - 'Sites#getSiteBackupConfiguration~httpRequest'
      - 'Sites#getSiteBackupConfiguration~headerName'
  - uid: 'Sites#getSiteBackupConfigurationSlot'
    id: getSiteBackupConfigurationSlot
    parent: Sites
    name: >-
      getSiteBackupConfigurationSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupRequest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteBackupConfigurationSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteBackupConfigurationSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteBackupConfigurationSlot~client'
      - 'Sites#getSiteBackupConfigurationSlot~callback'
      - 'Sites#getSiteBackupConfigurationSlot~options'
      - 'Sites#getSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#getSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#getSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#getSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#getSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#getSiteBackupConfigurationSlot~queryParameters'
      - 'Sites#getSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#getSiteBackupConfigurationSlot~regex'
      - 'Sites#getSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#getSiteBackupConfigurationSlot~httpRequest'
      - 'Sites#getSiteBackupConfigurationSlot~headerName'
  - uid: 'Sites#updateSiteBackupConfiguration'
    id: updateSiteBackupConfiguration
    parent: Sites
    name: >-
      updateSiteBackupConfiguration(resourceGroupName, name, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: request
          type: object
          description: Information on backup request
        - id: request.backupRequestName
          type: string
          description: Name of the backup
        - id: request.enabled
          type: boolean
          description: "True if the backup schedule is enabled\r(must be included in that case), false if the backup schedule should be\rdisabled"
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.backupSchedule
          type: object
          description: "Schedule for the backup if it is\rexecuted periodically"
        - id: request.backupSchedule.frequencyInterval
          type: number
          description: "How often should\rbe the backup executed (e.g. for weekly backup, this should be set to 7\rand FrequencyUnit should be set to Day)"
        - id: request.backupSchedule.frequencyUnit
          type: string
          description: "How often should be\rthe backup executed (e.g. for weekly backup, this should be set to Day and\rFrequencyInterval should be set to 7). Possible values include: 'Day',\r'Hour'"
        - id: request.backupSchedule.keepAtLeastOneBackup
          type: boolean
          description: "True if the\rretention policy should always keep at least one backup in the storage\raccount, regardless how old it is; false otherwise."
        - id: request.backupSchedule.retentionPeriodInDays
          type: number
          description: "After how\rmany days backups should be deleted"
        - id: request.backupSchedule.startTime
          type: date
          description: "When the schedule should\rstart working"
        - id: request.backupSchedule.lastExecutionTime
          type: date
          description: "The last time when\rthis schedule was triggered"
        - id: request.databases
          type: array
          description: Databases included in the backup
        - id: request.backupRequestType
          type: string
          description: "Type of the backup. Possible\rvalues include: 'Default', 'Clone', 'Relocation'"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupRequest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteBackupConfiguration(resourceGroupName, name, request,
        request.backupRequestName, request.enabled, request.storageAccountUrl,
        request.backupSchedule, request.backupSchedule.frequencyInterval,
        request.backupSchedule.frequencyUnit,
        request.backupSchedule.keepAtLeastOneBackup,
        request.backupSchedule.retentionPeriodInDays,
        request.backupSchedule.startTime,
        request.backupSchedule.lastExecutionTime, request.databases,
        request.backupRequestType, request.id, request.name, request.kind,
        request.location, request.type, request.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteBackupConfiguration(resourceGroupName, name, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#updateSiteBackupConfiguration~client'
      - 'Sites#updateSiteBackupConfiguration~callback'
      - 'Sites#updateSiteBackupConfiguration~options'
      - 'Sites#updateSiteBackupConfiguration~requestUrl'
      - 'Sites#updateSiteBackupConfiguration~requestUrl'
      - 'Sites#updateSiteBackupConfiguration~requestUrl'
      - 'Sites#updateSiteBackupConfiguration~requestUrl'
      - 'Sites#updateSiteBackupConfiguration~queryParameters'
      - 'Sites#updateSiteBackupConfiguration~requestUrl'
      - 'Sites#updateSiteBackupConfiguration~regex'
      - 'Sites#updateSiteBackupConfiguration~requestUrl'
      - 'Sites#updateSiteBackupConfiguration~httpRequest'
      - 'Sites#updateSiteBackupConfiguration~headerName'
      - 'Sites#updateSiteBackupConfiguration~requestContent'
      - 'Sites#updateSiteBackupConfiguration~requestModel'
      - 'Sites#updateSiteBackupConfiguration~requestModelMapper'
      - 'Sites#updateSiteBackupConfiguration~requestModel'
      - 'Sites#updateSiteBackupConfiguration~requestContent'
      - 'Sites#updateSiteBackupConfiguration~serializationError'
  - uid: 'Sites#updateSiteBackupConfigurationSlot'
    id: updateSiteBackupConfigurationSlot
    parent: Sites
    name: >-
      updateSiteBackupConfigurationSlot(resourceGroupName, name, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: request
          type: object
          description: Information on backup request
        - id: request.backupRequestName
          type: string
          description: Name of the backup
        - id: request.enabled
          type: boolean
          description: "True if the backup schedule is enabled\r(must be included in that case), false if the backup schedule should be\rdisabled"
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.backupSchedule
          type: object
          description: "Schedule for the backup if it is\rexecuted periodically"
        - id: request.backupSchedule.frequencyInterval
          type: number
          description: "How often should\rbe the backup executed (e.g. for weekly backup, this should be set to 7\rand FrequencyUnit should be set to Day)"
        - id: request.backupSchedule.frequencyUnit
          type: string
          description: "How often should be\rthe backup executed (e.g. for weekly backup, this should be set to Day and\rFrequencyInterval should be set to 7). Possible values include: 'Day',\r'Hour'"
        - id: request.backupSchedule.keepAtLeastOneBackup
          type: boolean
          description: "True if the\rretention policy should always keep at least one backup in the storage\raccount, regardless how old it is; false otherwise."
        - id: request.backupSchedule.retentionPeriodInDays
          type: number
          description: "After how\rmany days backups should be deleted"
        - id: request.backupSchedule.startTime
          type: date
          description: "When the schedule should\rstart working"
        - id: request.backupSchedule.lastExecutionTime
          type: date
          description: "The last time when\rthis schedule was triggered"
        - id: request.databases
          type: array
          description: Databases included in the backup
        - id: request.backupRequestType
          type: string
          description: "Type of the backup. Possible\rvalues include: 'Default', 'Clone', 'Relocation'"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupRequest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteBackupConfigurationSlot(resourceGroupName, name,
        request, request.backupRequestName, request.enabled,
        request.storageAccountUrl, request.backupSchedule,
        request.backupSchedule.frequencyInterval,
        request.backupSchedule.frequencyUnit,
        request.backupSchedule.keepAtLeastOneBackup,
        request.backupSchedule.retentionPeriodInDays,
        request.backupSchedule.startTime,
        request.backupSchedule.lastExecutionTime, request.databases,
        request.backupRequestType, request.id, request.name, request.kind,
        request.location, request.type, request.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteBackupConfigurationSlot(resourceGroupName, name, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#updateSiteBackupConfigurationSlot~client'
      - 'Sites#updateSiteBackupConfigurationSlot~callback'
      - 'Sites#updateSiteBackupConfigurationSlot~options'
      - 'Sites#updateSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#updateSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#updateSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#updateSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#updateSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#updateSiteBackupConfigurationSlot~queryParameters'
      - 'Sites#updateSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#updateSiteBackupConfigurationSlot~regex'
      - 'Sites#updateSiteBackupConfigurationSlot~requestUrl'
      - 'Sites#updateSiteBackupConfigurationSlot~httpRequest'
      - 'Sites#updateSiteBackupConfigurationSlot~headerName'
      - 'Sites#updateSiteBackupConfigurationSlot~requestContent'
      - 'Sites#updateSiteBackupConfigurationSlot~requestModel'
      - 'Sites#updateSiteBackupConfigurationSlot~requestModelMapper'
      - 'Sites#updateSiteBackupConfigurationSlot~requestModel'
      - 'Sites#updateSiteBackupConfigurationSlot~requestContent'
      - 'Sites#updateSiteBackupConfigurationSlot~serializationError'
  - uid: 'Sites#backupSite'
    id: backupSite
    parent: Sites
    name: >-
      backupSite(resourceGroupName, name, request, request.backupRequestName,
      request.enabled, request.storageAccountUrl, request.backupSchedule,
      request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: request
          type: object
          description: Information on backup request
        - id: request.backupRequestName
          type: string
          description: Name of the backup
        - id: request.enabled
          type: boolean
          description: "True if the backup schedule is enabled\r(must be included in that case), false if the backup schedule should be\rdisabled"
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.backupSchedule
          type: object
          description: "Schedule for the backup if it is\rexecuted periodically"
        - id: request.backupSchedule.frequencyInterval
          type: number
          description: "How often should\rbe the backup executed (e.g. for weekly backup, this should be set to 7\rand FrequencyUnit should be set to Day)"
        - id: request.backupSchedule.frequencyUnit
          type: string
          description: "How often should be\rthe backup executed (e.g. for weekly backup, this should be set to Day and\rFrequencyInterval should be set to 7). Possible values include: 'Day',\r'Hour'"
        - id: request.backupSchedule.keepAtLeastOneBackup
          type: boolean
          description: "True if the\rretention policy should always keep at least one backup in the storage\raccount, regardless how old it is; false otherwise."
        - id: request.backupSchedule.retentionPeriodInDays
          type: number
          description: "After how\rmany days backups should be deleted"
        - id: request.backupSchedule.startTime
          type: date
          description: "When the schedule should\rstart working"
        - id: request.backupSchedule.lastExecutionTime
          type: date
          description: "The last time when\rthis schedule was triggered"
        - id: request.databases
          type: array
          description: Databases included in the backup
        - id: request.backupRequestType
          type: string
          description: "Type of the backup. Possible\rvalues include: 'Default', 'Clone', 'Relocation'"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function backupSite(resourceGroupName, name, request,
        request.backupRequestName, request.enabled, request.storageAccountUrl,
        request.backupSchedule, request.backupSchedule.frequencyInterval,
        request.backupSchedule.frequencyUnit,
        request.backupSchedule.keepAtLeastOneBackup,
        request.backupSchedule.retentionPeriodInDays,
        request.backupSchedule.startTime,
        request.backupSchedule.lastExecutionTime, request.databases,
        request.backupRequestType, request.id, request.name, request.kind,
        request.location, request.type, request.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.backupSite(resourceGroupName, name, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#backupSite~client'
      - 'Sites#backupSite~callback'
      - 'Sites#backupSite~options'
      - 'Sites#backupSite~requestUrl'
      - 'Sites#backupSite~requestUrl'
      - 'Sites#backupSite~requestUrl'
      - 'Sites#backupSite~requestUrl'
      - 'Sites#backupSite~queryParameters'
      - 'Sites#backupSite~requestUrl'
      - 'Sites#backupSite~regex'
      - 'Sites#backupSite~requestUrl'
      - 'Sites#backupSite~httpRequest'
      - 'Sites#backupSite~headerName'
      - 'Sites#backupSite~requestContent'
      - 'Sites#backupSite~requestModel'
      - 'Sites#backupSite~requestModelMapper'
      - 'Sites#backupSite~requestModel'
      - 'Sites#backupSite~requestContent'
      - 'Sites#backupSite~serializationError'
  - uid: 'Sites#backupSiteSlot'
    id: backupSiteSlot
    parent: Sites
    name: >-
      backupSiteSlot(resourceGroupName, name, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: request
          type: object
          description: Information on backup request
        - id: request.backupRequestName
          type: string
          description: Name of the backup
        - id: request.enabled
          type: boolean
          description: "True if the backup schedule is enabled\r(must be included in that case), false if the backup schedule should be\rdisabled"
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.backupSchedule
          type: object
          description: "Schedule for the backup if it is\rexecuted periodically"
        - id: request.backupSchedule.frequencyInterval
          type: number
          description: "How often should\rbe the backup executed (e.g. for weekly backup, this should be set to 7\rand FrequencyUnit should be set to Day)"
        - id: request.backupSchedule.frequencyUnit
          type: string
          description: "How often should be\rthe backup executed (e.g. for weekly backup, this should be set to Day and\rFrequencyInterval should be set to 7). Possible values include: 'Day',\r'Hour'"
        - id: request.backupSchedule.keepAtLeastOneBackup
          type: boolean
          description: "True if the\rretention policy should always keep at least one backup in the storage\raccount, regardless how old it is; false otherwise."
        - id: request.backupSchedule.retentionPeriodInDays
          type: number
          description: "After how\rmany days backups should be deleted"
        - id: request.backupSchedule.startTime
          type: date
          description: "When the schedule should\rstart working"
        - id: request.backupSchedule.lastExecutionTime
          type: date
          description: "The last time when\rthis schedule was triggered"
        - id: request.databases
          type: array
          description: Databases included in the backup
        - id: request.backupRequestType
          type: string
          description: "Type of the backup. Possible\rvalues include: 'Default', 'Clone', 'Relocation'"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function backupSiteSlot(resourceGroupName, name, request,
        request.backupRequestName, request.enabled, request.storageAccountUrl,
        request.backupSchedule, request.backupSchedule.frequencyInterval,
        request.backupSchedule.frequencyUnit,
        request.backupSchedule.keepAtLeastOneBackup,
        request.backupSchedule.retentionPeriodInDays,
        request.backupSchedule.startTime,
        request.backupSchedule.lastExecutionTime, request.databases,
        request.backupRequestType, request.id, request.name, request.kind,
        request.location, request.type, request.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.backupSiteSlot(resourceGroupName, name, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#backupSiteSlot~client'
      - 'Sites#backupSiteSlot~callback'
      - 'Sites#backupSiteSlot~options'
      - 'Sites#backupSiteSlot~requestUrl'
      - 'Sites#backupSiteSlot~requestUrl'
      - 'Sites#backupSiteSlot~requestUrl'
      - 'Sites#backupSiteSlot~requestUrl'
      - 'Sites#backupSiteSlot~requestUrl'
      - 'Sites#backupSiteSlot~queryParameters'
      - 'Sites#backupSiteSlot~requestUrl'
      - 'Sites#backupSiteSlot~regex'
      - 'Sites#backupSiteSlot~requestUrl'
      - 'Sites#backupSiteSlot~httpRequest'
      - 'Sites#backupSiteSlot~headerName'
      - 'Sites#backupSiteSlot~requestContent'
      - 'Sites#backupSiteSlot~requestModel'
      - 'Sites#backupSiteSlot~requestModelMapper'
      - 'Sites#backupSiteSlot~requestModel'
      - 'Sites#backupSiteSlot~requestContent'
      - 'Sites#backupSiteSlot~serializationError'
  - uid: 'Sites#discoverSiteRestore'
    id: discoverSiteRestore
    parent: Sites
    name: >-
      discoverSiteRestore(resourceGroupName, name, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: request
          type: object
          description: Information on restore request
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.blobName
          type: string
          description: Name of a blob which contains the backup
        - id: request.overwrite
          type: boolean
          description: "True if the restore operation can\roverwrite target site. \"True\" needed if trying to restore over an existing\rsite."
        - id: request.siteName
          type: string
          description: Name of a site (Web App)
        - id: request.databases
          type: array
          description: "Collection of databses which should be\rrestored. This list has to match the list of databases included in the\rbackup."
        - id: request.ignoreConflictingHostNames
          type: boolean
          description: "Changes a logic when\rrestoring a site with custom domains. If \"true\", custom domains are\rremoved automatically. If \"false\", custom domains are added to\rthe site object when it is being restored, but that might fail\rdue to conflicts during the operation."
        - id: request.operationType
          type: string
          description: "Operation type. Possible values\rinclude: 'Default', 'Clone', 'Relocation'"
        - id: request.adjustConnectionStrings
          type: boolean
          description: "Gets or sets a flag\rshowing if SiteConfig.ConnectionStrings should be set in new site"
        - id: request.hostingEnvironment
          type: string
          description: "App Service Environment name,\rif needed (only when restoring a site to an App Service Environment)"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RestoreRequest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function discoverSiteRestore(resourceGroupName, name, request,
        request.storageAccountUrl, request.blobName, request.overwrite,
        request.siteName, request.databases, request.ignoreConflictingHostNames,
        request.operationType, request.adjustConnectionStrings,
        request.hostingEnvironment, request.id, request.name, request.kind,
        request.location, request.type, request.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.discoverSiteRestore(resourceGroupName, name, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#discoverSiteRestore~client'
      - 'Sites#discoverSiteRestore~callback'
      - 'Sites#discoverSiteRestore~options'
      - 'Sites#discoverSiteRestore~requestUrl'
      - 'Sites#discoverSiteRestore~requestUrl'
      - 'Sites#discoverSiteRestore~requestUrl'
      - 'Sites#discoverSiteRestore~requestUrl'
      - 'Sites#discoverSiteRestore~queryParameters'
      - 'Sites#discoverSiteRestore~requestUrl'
      - 'Sites#discoverSiteRestore~regex'
      - 'Sites#discoverSiteRestore~requestUrl'
      - 'Sites#discoverSiteRestore~httpRequest'
      - 'Sites#discoverSiteRestore~headerName'
      - 'Sites#discoverSiteRestore~requestContent'
      - 'Sites#discoverSiteRestore~requestModel'
      - 'Sites#discoverSiteRestore~requestModelMapper'
      - 'Sites#discoverSiteRestore~requestModel'
      - 'Sites#discoverSiteRestore~requestContent'
      - 'Sites#discoverSiteRestore~serializationError'
  - uid: 'Sites#discoverSiteRestoreSlot'
    id: discoverSiteRestoreSlot
    parent: Sites
    name: >-
      discoverSiteRestoreSlot(resourceGroupName, name, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: request
          type: object
          description: Information on restore request
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.blobName
          type: string
          description: Name of a blob which contains the backup
        - id: request.overwrite
          type: boolean
          description: "True if the restore operation can\roverwrite target site. \"True\" needed if trying to restore over an existing\rsite."
        - id: request.siteName
          type: string
          description: Name of a site (Web App)
        - id: request.databases
          type: array
          description: "Collection of databses which should be\rrestored. This list has to match the list of databases included in the\rbackup."
        - id: request.ignoreConflictingHostNames
          type: boolean
          description: "Changes a logic when\rrestoring a site with custom domains. If \"true\", custom domains are\rremoved automatically. If \"false\", custom domains are added to\rthe site object when it is being restored, but that might fail\rdue to conflicts during the operation."
        - id: request.operationType
          type: string
          description: "Operation type. Possible values\rinclude: 'Default', 'Clone', 'Relocation'"
        - id: request.adjustConnectionStrings
          type: boolean
          description: "Gets or sets a flag\rshowing if SiteConfig.ConnectionStrings should be set in new site"
        - id: request.hostingEnvironment
          type: string
          description: "App Service Environment name,\rif needed (only when restoring a site to an App Service Environment)"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RestoreRequest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function discoverSiteRestoreSlot(resourceGroupName, name, request,
        request.storageAccountUrl, request.blobName, request.overwrite,
        request.siteName, request.databases, request.ignoreConflictingHostNames,
        request.operationType, request.adjustConnectionStrings,
        request.hostingEnvironment, request.id, request.name, request.kind,
        request.location, request.type, request.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.discoverSiteRestoreSlot(resourceGroupName, name, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#discoverSiteRestoreSlot~client'
      - 'Sites#discoverSiteRestoreSlot~callback'
      - 'Sites#discoverSiteRestoreSlot~options'
      - 'Sites#discoverSiteRestoreSlot~requestUrl'
      - 'Sites#discoverSiteRestoreSlot~requestUrl'
      - 'Sites#discoverSiteRestoreSlot~requestUrl'
      - 'Sites#discoverSiteRestoreSlot~requestUrl'
      - 'Sites#discoverSiteRestoreSlot~requestUrl'
      - 'Sites#discoverSiteRestoreSlot~queryParameters'
      - 'Sites#discoverSiteRestoreSlot~requestUrl'
      - 'Sites#discoverSiteRestoreSlot~regex'
      - 'Sites#discoverSiteRestoreSlot~requestUrl'
      - 'Sites#discoverSiteRestoreSlot~httpRequest'
      - 'Sites#discoverSiteRestoreSlot~headerName'
      - 'Sites#discoverSiteRestoreSlot~requestContent'
      - 'Sites#discoverSiteRestoreSlot~requestModel'
      - 'Sites#discoverSiteRestoreSlot~requestModelMapper'
      - 'Sites#discoverSiteRestoreSlot~requestModel'
      - 'Sites#discoverSiteRestoreSlot~requestContent'
      - 'Sites#discoverSiteRestoreSlot~serializationError'
  - uid: 'Sites#listSiteBackups'
    id: listSiteBackups
    parent: Sites
    name: >-
      listSiteBackups(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItemCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteBackups(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteBackups(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteBackups~client'
      - 'Sites#listSiteBackups~callback'
      - 'Sites#listSiteBackups~options'
      - 'Sites#listSiteBackups~requestUrl'
      - 'Sites#listSiteBackups~requestUrl'
      - 'Sites#listSiteBackups~requestUrl'
      - 'Sites#listSiteBackups~requestUrl'
      - 'Sites#listSiteBackups~queryParameters'
      - 'Sites#listSiteBackups~requestUrl'
      - 'Sites#listSiteBackups~regex'
      - 'Sites#listSiteBackups~requestUrl'
      - 'Sites#listSiteBackups~httpRequest'
      - 'Sites#listSiteBackups~headerName'
  - uid: 'Sites#listSiteBackupsSlot'
    id: listSiteBackupsSlot
    parent: Sites
    name: >-
      listSiteBackupsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItemCollection} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteBackupsSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.listSiteBackupsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteBackupsSlot~client'
      - 'Sites#listSiteBackupsSlot~callback'
      - 'Sites#listSiteBackupsSlot~options'
      - 'Sites#listSiteBackupsSlot~requestUrl'
      - 'Sites#listSiteBackupsSlot~requestUrl'
      - 'Sites#listSiteBackupsSlot~requestUrl'
      - 'Sites#listSiteBackupsSlot~requestUrl'
      - 'Sites#listSiteBackupsSlot~requestUrl'
      - 'Sites#listSiteBackupsSlot~queryParameters'
      - 'Sites#listSiteBackupsSlot~requestUrl'
      - 'Sites#listSiteBackupsSlot~regex'
      - 'Sites#listSiteBackupsSlot~requestUrl'
      - 'Sites#listSiteBackupsSlot~httpRequest'
      - 'Sites#listSiteBackupsSlot~headerName'
  - uid: 'Sites#getSiteBackupStatus'
    id: getSiteBackupStatus
    parent: Sites
    name: >-
      getSiteBackupStatus(resourceGroupName, name, backupId, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteBackupStatus(resourceGroupName, name, backupId, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteBackupStatus(resourceGroupName, name, backupId, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteBackupStatus~client'
      - 'Sites#getSiteBackupStatus~callback'
      - 'Sites#getSiteBackupStatus~options'
      - 'Sites#getSiteBackupStatus~requestUrl'
      - 'Sites#getSiteBackupStatus~requestUrl'
      - 'Sites#getSiteBackupStatus~requestUrl'
      - 'Sites#getSiteBackupStatus~requestUrl'
      - 'Sites#getSiteBackupStatus~requestUrl'
      - 'Sites#getSiteBackupStatus~queryParameters'
      - 'Sites#getSiteBackupStatus~requestUrl'
      - 'Sites#getSiteBackupStatus~regex'
      - 'Sites#getSiteBackupStatus~requestUrl'
      - 'Sites#getSiteBackupStatus~httpRequest'
      - 'Sites#getSiteBackupStatus~headerName'
  - uid: 'Sites#deleteBackup'
    id: deleteBackup
    parent: Sites
    name: >-
      deleteBackup(resourceGroupName, name, backupId, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteBackup(resourceGroupName, name, backupId, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.deleteBackup(resourceGroupName, name, backupId, options,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteBackup~client'
      - 'Sites#deleteBackup~callback'
      - 'Sites#deleteBackup~options'
      - 'Sites#deleteBackup~requestUrl'
      - 'Sites#deleteBackup~requestUrl'
      - 'Sites#deleteBackup~requestUrl'
      - 'Sites#deleteBackup~requestUrl'
      - 'Sites#deleteBackup~requestUrl'
      - 'Sites#deleteBackup~queryParameters'
      - 'Sites#deleteBackup~requestUrl'
      - 'Sites#deleteBackup~regex'
      - 'Sites#deleteBackup~requestUrl'
      - 'Sites#deleteBackup~httpRequest'
      - 'Sites#deleteBackup~headerName'
  - uid: 'Sites#getSiteBackupStatusSlot'
    id: getSiteBackupStatusSlot
    parent: Sites
    name: >-
      getSiteBackupStatusSlot(resourceGroupName, name, backupId, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteBackupStatusSlot(resourceGroupName, name, backupId,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteBackupStatusSlot(resourceGroupName, name, backupId, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteBackupStatusSlot~client'
      - 'Sites#getSiteBackupStatusSlot~callback'
      - 'Sites#getSiteBackupStatusSlot~options'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~queryParameters'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~regex'
      - 'Sites#getSiteBackupStatusSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSlot~httpRequest'
      - 'Sites#getSiteBackupStatusSlot~headerName'
  - uid: 'Sites#deleteBackupSlot'
    id: deleteBackupSlot
    parent: Sites
    name: >-
      deleteBackupSlot(resourceGroupName, name, backupId, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteBackupSlot(resourceGroupName, name, backupId, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteBackupSlot(resourceGroupName, name, backupId, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#deleteBackupSlot~client'
      - 'Sites#deleteBackupSlot~callback'
      - 'Sites#deleteBackupSlot~options'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~queryParameters'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~regex'
      - 'Sites#deleteBackupSlot~requestUrl'
      - 'Sites#deleteBackupSlot~httpRequest'
      - 'Sites#deleteBackupSlot~headerName'
  - uid: 'Sites#getSiteBackupStatusSecretsSlot'
    id: getSiteBackupStatusSecretsSlot
    parent: Sites
    name: >-
      getSiteBackupStatusSecretsSlot(resourceGroupName, name, backupId, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup
        - id: request
          type: object
          description: Information on backup request
        - id: request.backupRequestName
          type: string
          description: Name of the backup
        - id: request.enabled
          type: boolean
          description: "True if the backup schedule is enabled\r(must be included in that case), false if the backup schedule should be\rdisabled"
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.backupSchedule
          type: object
          description: "Schedule for the backup if it is\rexecuted periodically"
        - id: request.backupSchedule.frequencyInterval
          type: number
          description: "How often should\rbe the backup executed (e.g. for weekly backup, this should be set to 7\rand FrequencyUnit should be set to Day)"
        - id: request.backupSchedule.frequencyUnit
          type: string
          description: "How often should be\rthe backup executed (e.g. for weekly backup, this should be set to Day and\rFrequencyInterval should be set to 7). Possible values include: 'Day',\r'Hour'"
        - id: request.backupSchedule.keepAtLeastOneBackup
          type: boolean
          description: "True if the\rretention policy should always keep at least one backup in the storage\raccount, regardless how old it is; false otherwise."
        - id: request.backupSchedule.retentionPeriodInDays
          type: number
          description: "After how\rmany days backups should be deleted"
        - id: request.backupSchedule.startTime
          type: date
          description: "When the schedule should\rstart working"
        - id: request.backupSchedule.lastExecutionTime
          type: date
          description: "The last time when\rthis schedule was triggered"
        - id: request.databases
          type: array
          description: Databases included in the backup
        - id: request.backupRequestType
          type: string
          description: "Type of the backup. Possible\rvalues include: 'Default', 'Clone', 'Relocation'"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteBackupStatusSecretsSlot(resourceGroupName, name,
        backupId, request, request.backupRequestName, request.enabled,
        request.storageAccountUrl, request.backupSchedule,
        request.backupSchedule.frequencyInterval,
        request.backupSchedule.frequencyUnit,
        request.backupSchedule.keepAtLeastOneBackup,
        request.backupSchedule.retentionPeriodInDays,
        request.backupSchedule.startTime,
        request.backupSchedule.lastExecutionTime, request.databases,
        request.backupRequestType, request.id, request.name, request.kind,
        request.location, request.type, request.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteBackupStatusSecretsSlot(resourceGroupName, name, backupId,
      request, request.backupRequestName, request.enabled,
      request.storageAccountUrl, request.backupSchedule,
      request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteBackupStatusSecretsSlot~client'
      - 'Sites#getSiteBackupStatusSecretsSlot~callback'
      - 'Sites#getSiteBackupStatusSecretsSlot~options'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~queryParameters'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~regex'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestUrl'
      - 'Sites#getSiteBackupStatusSecretsSlot~httpRequest'
      - 'Sites#getSiteBackupStatusSecretsSlot~headerName'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestContent'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestModel'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestModelMapper'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestModel'
      - 'Sites#getSiteBackupStatusSecretsSlot~requestContent'
      - 'Sites#getSiteBackupStatusSecretsSlot~serializationError'
  - uid: 'Sites#getSiteBackupStatusSecrets'
    id: getSiteBackupStatusSecrets
    parent: Sites
    name: >-
      getSiteBackupStatusSecrets(resourceGroupName, name, backupId, request,
      request.backupRequestName, request.enabled, request.storageAccountUrl,
      request.backupSchedule, request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup
        - id: request
          type: object
          description: Information on backup request
        - id: request.backupRequestName
          type: string
          description: Name of the backup
        - id: request.enabled
          type: boolean
          description: "True if the backup schedule is enabled\r(must be included in that case), false if the backup schedule should be\rdisabled"
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.backupSchedule
          type: object
          description: "Schedule for the backup if it is\rexecuted periodically"
        - id: request.backupSchedule.frequencyInterval
          type: number
          description: "How often should\rbe the backup executed (e.g. for weekly backup, this should be set to 7\rand FrequencyUnit should be set to Day)"
        - id: request.backupSchedule.frequencyUnit
          type: string
          description: "How often should be\rthe backup executed (e.g. for weekly backup, this should be set to Day and\rFrequencyInterval should be set to 7). Possible values include: 'Day',\r'Hour'"
        - id: request.backupSchedule.keepAtLeastOneBackup
          type: boolean
          description: "True if the\rretention policy should always keep at least one backup in the storage\raccount, regardless how old it is; false otherwise."
        - id: request.backupSchedule.retentionPeriodInDays
          type: number
          description: "After how\rmany days backups should be deleted"
        - id: request.backupSchedule.startTime
          type: date
          description: "When the schedule should\rstart working"
        - id: request.backupSchedule.lastExecutionTime
          type: date
          description: "The last time when\rthis schedule was triggered"
        - id: request.databases
          type: array
          description: Databases included in the backup
        - id: request.backupRequestType
          type: string
          description: "Type of the backup. Possible\rvalues include: 'Default', 'Clone', 'Relocation'"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link BackupItem} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteBackupStatusSecrets(resourceGroupName, name, backupId,
        request, request.backupRequestName, request.enabled,
        request.storageAccountUrl, request.backupSchedule,
        request.backupSchedule.frequencyInterval,
        request.backupSchedule.frequencyUnit,
        request.backupSchedule.keepAtLeastOneBackup,
        request.backupSchedule.retentionPeriodInDays,
        request.backupSchedule.startTime,
        request.backupSchedule.lastExecutionTime, request.databases,
        request.backupRequestType, request.id, request.name, request.kind,
        request.location, request.type, request.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteBackupStatusSecrets(resourceGroupName, name, backupId,
      request, request.backupRequestName, request.enabled,
      request.storageAccountUrl, request.backupSchedule,
      request.backupSchedule.frequencyInterval,
      request.backupSchedule.frequencyUnit,
      request.backupSchedule.keepAtLeastOneBackup,
      request.backupSchedule.retentionPeriodInDays,
      request.backupSchedule.startTime,
      request.backupSchedule.lastExecutionTime, request.databases,
      request.backupRequestType, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteBackupStatusSecrets~client'
      - 'Sites#getSiteBackupStatusSecrets~callback'
      - 'Sites#getSiteBackupStatusSecrets~options'
      - 'Sites#getSiteBackupStatusSecrets~requestUrl'
      - 'Sites#getSiteBackupStatusSecrets~requestUrl'
      - 'Sites#getSiteBackupStatusSecrets~requestUrl'
      - 'Sites#getSiteBackupStatusSecrets~requestUrl'
      - 'Sites#getSiteBackupStatusSecrets~requestUrl'
      - 'Sites#getSiteBackupStatusSecrets~queryParameters'
      - 'Sites#getSiteBackupStatusSecrets~requestUrl'
      - 'Sites#getSiteBackupStatusSecrets~regex'
      - 'Sites#getSiteBackupStatusSecrets~requestUrl'
      - 'Sites#getSiteBackupStatusSecrets~httpRequest'
      - 'Sites#getSiteBackupStatusSecrets~headerName'
      - 'Sites#getSiteBackupStatusSecrets~requestContent'
      - 'Sites#getSiteBackupStatusSecrets~requestModel'
      - 'Sites#getSiteBackupStatusSecrets~requestModelMapper'
      - 'Sites#getSiteBackupStatusSecrets~requestModel'
      - 'Sites#getSiteBackupStatusSecrets~requestContent'
      - 'Sites#getSiteBackupStatusSecrets~serializationError'
  - uid: 'Sites#restoreSite'
    id: restoreSite
    parent: Sites
    name: >-
      restoreSite(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup to restore
        - id: request
          type: object
          description: Information on restore request
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.blobName
          type: string
          description: Name of a blob which contains the backup
        - id: request.overwrite
          type: boolean
          description: "True if the restore operation can\roverwrite target site. \"True\" needed if trying to restore over an existing\rsite."
        - id: request.siteName
          type: string
          description: Name of a site (Web App)
        - id: request.databases
          type: array
          description: "Collection of databses which should be\rrestored. This list has to match the list of databases included in the\rbackup."
        - id: request.ignoreConflictingHostNames
          type: boolean
          description: "Changes a logic when\rrestoring a site with custom domains. If \"true\", custom domains are\rremoved automatically. If \"false\", custom domains are added to\rthe site object when it is being restored, but that might fail\rdue to conflicts during the operation."
        - id: request.operationType
          type: string
          description: "Operation type. Possible values\rinclude: 'Default', 'Clone', 'Relocation'"
        - id: request.adjustConnectionStrings
          type: boolean
          description: "Gets or sets a flag\rshowing if SiteConfig.ConnectionStrings should be set in new site"
        - id: request.hostingEnvironment
          type: string
          description: "App Service Environment name,\rif needed (only when restoring a site to an App Service Environment)"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RestoreResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function restoreSite(resourceGroupName, name, backupId, request,
        request.storageAccountUrl, request.blobName, request.overwrite,
        request.siteName, request.databases, request.ignoreConflictingHostNames,
        request.operationType, request.adjustConnectionStrings,
        request.hostingEnvironment, request.id, request.name, request.kind,
        request.location, request.type, request.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.restoreSite(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#restoreSite~client'
      - 'Sites#restoreSite~callback'
      - 'Sites#restoreSite~options'
  - uid: 'Sites#beginRestoreSite'
    id: beginRestoreSite
    parent: Sites
    name: >-
      beginRestoreSite(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup to restore
        - id: request
          type: object
          description: Information on restore request
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.blobName
          type: string
          description: Name of a blob which contains the backup
        - id: request.overwrite
          type: boolean
          description: "True if the restore operation can\roverwrite target site. \"True\" needed if trying to restore over an existing\rsite."
        - id: request.siteName
          type: string
          description: Name of a site (Web App)
        - id: request.databases
          type: array
          description: "Collection of databses which should be\rrestored. This list has to match the list of databases included in the\rbackup."
        - id: request.ignoreConflictingHostNames
          type: boolean
          description: "Changes a logic when\rrestoring a site with custom domains. If \"true\", custom domains are\rremoved automatically. If \"false\", custom domains are added to\rthe site object when it is being restored, but that might fail\rdue to conflicts during the operation."
        - id: request.operationType
          type: string
          description: "Operation type. Possible values\rinclude: 'Default', 'Clone', 'Relocation'"
        - id: request.adjustConnectionStrings
          type: boolean
          description: "Gets or sets a flag\rshowing if SiteConfig.ConnectionStrings should be set in new site"
        - id: request.hostingEnvironment
          type: string
          description: "App Service Environment name,\rif needed (only when restoring a site to an App Service Environment)"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RestoreResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginRestoreSite(resourceGroupName, name, backupId, request,
        request.storageAccountUrl, request.blobName, request.overwrite,
        request.siteName, request.databases, request.ignoreConflictingHostNames,
        request.operationType, request.adjustConnectionStrings,
        request.hostingEnvironment, request.id, request.name, request.kind,
        request.location, request.type, request.tags, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.beginRestoreSite(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, options,
      options.customHeaders, callback)
    children:
      - 'Sites#beginRestoreSite~client'
      - 'Sites#beginRestoreSite~callback'
      - 'Sites#beginRestoreSite~options'
      - 'Sites#beginRestoreSite~requestUrl'
      - 'Sites#beginRestoreSite~requestUrl'
      - 'Sites#beginRestoreSite~requestUrl'
      - 'Sites#beginRestoreSite~requestUrl'
      - 'Sites#beginRestoreSite~requestUrl'
      - 'Sites#beginRestoreSite~queryParameters'
      - 'Sites#beginRestoreSite~requestUrl'
      - 'Sites#beginRestoreSite~regex'
      - 'Sites#beginRestoreSite~requestUrl'
      - 'Sites#beginRestoreSite~httpRequest'
      - 'Sites#beginRestoreSite~headerName'
      - 'Sites#beginRestoreSite~requestContent'
      - 'Sites#beginRestoreSite~requestModel'
      - 'Sites#beginRestoreSite~requestModelMapper'
      - 'Sites#beginRestoreSite~requestModel'
      - 'Sites#beginRestoreSite~requestContent'
      - 'Sites#beginRestoreSite~serializationError'
  - uid: 'Sites#restoreSiteSlot'
    id: restoreSiteSlot
    parent: Sites
    name: >-
      restoreSiteSlot(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup to restore
        - id: request
          type: object
          description: Information on restore request
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.blobName
          type: string
          description: Name of a blob which contains the backup
        - id: request.overwrite
          type: boolean
          description: "True if the restore operation can\roverwrite target site. \"True\" needed if trying to restore over an existing\rsite."
        - id: request.siteName
          type: string
          description: Name of a site (Web App)
        - id: request.databases
          type: array
          description: "Collection of databses which should be\rrestored. This list has to match the list of databases included in the\rbackup."
        - id: request.ignoreConflictingHostNames
          type: boolean
          description: "Changes a logic when\rrestoring a site with custom domains. If \"true\", custom domains are\rremoved automatically. If \"false\", custom domains are added to\rthe site object when it is being restored, but that might fail\rdue to conflicts during the operation."
        - id: request.operationType
          type: string
          description: "Operation type. Possible values\rinclude: 'Default', 'Clone', 'Relocation'"
        - id: request.adjustConnectionStrings
          type: boolean
          description: "Gets or sets a flag\rshowing if SiteConfig.ConnectionStrings should be set in new site"
        - id: request.hostingEnvironment
          type: string
          description: "App Service Environment name,\rif needed (only when restoring a site to an App Service Environment)"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RestoreResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function restoreSiteSlot(resourceGroupName, name, backupId, request,
        request.storageAccountUrl, request.blobName, request.overwrite,
        request.siteName, request.databases, request.ignoreConflictingHostNames,
        request.operationType, request.adjustConnectionStrings,
        request.hostingEnvironment, request.id, request.name, request.kind,
        request.location, request.type, request.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.restoreSiteSlot(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#restoreSiteSlot~client'
      - 'Sites#restoreSiteSlot~callback'
      - 'Sites#restoreSiteSlot~options'
  - uid: 'Sites#beginRestoreSiteSlot'
    id: beginRestoreSiteSlot
    parent: Sites
    name: >-
      beginRestoreSiteSlot(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: backupId
          type: string
          description: Id of backup to restore
        - id: request
          type: object
          description: Information on restore request
        - id: request.storageAccountUrl
          type: string
          description: SAS URL to the container
        - id: request.blobName
          type: string
          description: Name of a blob which contains the backup
        - id: request.overwrite
          type: boolean
          description: "True if the restore operation can\roverwrite target site. \"True\" needed if trying to restore over an existing\rsite."
        - id: request.siteName
          type: string
          description: Name of a site (Web App)
        - id: request.databases
          type: array
          description: "Collection of databses which should be\rrestored. This list has to match the list of databases included in the\rbackup."
        - id: request.ignoreConflictingHostNames
          type: boolean
          description: "Changes a logic when\rrestoring a site with custom domains. If \"true\", custom domains are\rremoved automatically. If \"false\", custom domains are added to\rthe site object when it is being restored, but that might fail\rdue to conflicts during the operation."
        - id: request.operationType
          type: string
          description: "Operation type. Possible values\rinclude: 'Default', 'Clone', 'Relocation'"
        - id: request.adjustConnectionStrings
          type: boolean
          description: "Gets or sets a flag\rshowing if SiteConfig.ConnectionStrings should be set in new site"
        - id: request.hostingEnvironment
          type: string
          description: "App Service Environment name,\rif needed (only when restoring a site to an App Service Environment)"
        - id: request.id
          type: string
          description: Resource Id
        - id: request.name
          type: string
          description: Resource Name
        - id: request.kind
          type: string
          description: Kind of resource
        - id: request.location
          type: string
          description: Resource Location
        - id: request.type
          type: string
          description: Resource type
        - id: request.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RestoreResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginRestoreSiteSlot(resourceGroupName, name, backupId,
        request, request.storageAccountUrl, request.blobName, request.overwrite,
        request.siteName, request.databases, request.ignoreConflictingHostNames,
        request.operationType, request.adjustConnectionStrings,
        request.hostingEnvironment, request.id, request.name, request.kind,
        request.location, request.type, request.tags, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.beginRestoreSiteSlot(resourceGroupName, name, backupId, request,
      request.storageAccountUrl, request.blobName, request.overwrite,
      request.siteName, request.databases, request.ignoreConflictingHostNames,
      request.operationType, request.adjustConnectionStrings,
      request.hostingEnvironment, request.id, request.name, request.kind,
      request.location, request.type, request.tags, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#beginRestoreSiteSlot~client'
      - 'Sites#beginRestoreSiteSlot~callback'
      - 'Sites#beginRestoreSiteSlot~options'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~queryParameters'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~regex'
      - 'Sites#beginRestoreSiteSlot~requestUrl'
      - 'Sites#beginRestoreSiteSlot~httpRequest'
      - 'Sites#beginRestoreSiteSlot~headerName'
      - 'Sites#beginRestoreSiteSlot~requestContent'
      - 'Sites#beginRestoreSiteSlot~requestModel'
      - 'Sites#beginRestoreSiteSlot~requestModelMapper'
      - 'Sites#beginRestoreSiteSlot~requestModel'
      - 'Sites#beginRestoreSiteSlot~requestContent'
      - 'Sites#beginRestoreSiteSlot~serializationError'
  - uid: 'Sites#getSiteUsages'
    id: getSiteUsages
    parent: Sites
    name: >-
      getSiteUsages(resourceGroupName, name, options, options.filter,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.filter
          type: string
          description: "Return only usages specified in the\rfilter. Filter is specified by using OData syntax. Example:\r$filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime\req '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and\rtimeGrain eq duration'[Hour|Minute|Day]'."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CsmUsageQuotaCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteUsages(resourceGroupName, name, options, options.filter,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteUsages(resourceGroupName, name, options, options.filter,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteUsages~client'
      - 'Sites#getSiteUsages~callback'
      - 'Sites#getSiteUsages~options'
      - 'Sites#getSiteUsages~filter'
      - 'Sites#getSiteUsages~requestUrl'
      - 'Sites#getSiteUsages~requestUrl'
      - 'Sites#getSiteUsages~requestUrl'
      - 'Sites#getSiteUsages~requestUrl'
      - 'Sites#getSiteUsages~queryParameters'
      - 'Sites#getSiteUsages~requestUrl'
      - 'Sites#getSiteUsages~regex'
      - 'Sites#getSiteUsages~requestUrl'
      - 'Sites#getSiteUsages~httpRequest'
      - 'Sites#getSiteUsages~headerName'
  - uid: 'Sites#getSiteUsagesSlot'
    id: getSiteUsagesSlot
    parent: Sites
    name: >-
      getSiteUsagesSlot(resourceGroupName, name, slot, options, options.filter,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.filter
          type: string
          description: "Return only usages specified in the\rfilter. Filter is specified by using OData syntax. Example:\r$filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime\req '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and\rtimeGrain eq duration'[Hour|Minute|Day]'."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CsmUsageQuotaCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteUsagesSlot(resourceGroupName, name, slot, options,
        options.filter, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteUsagesSlot(resourceGroupName, name, slot, options,
      options.filter, options.customHeaders, callback)
    children:
      - 'Sites#getSiteUsagesSlot~client'
      - 'Sites#getSiteUsagesSlot~callback'
      - 'Sites#getSiteUsagesSlot~options'
      - 'Sites#getSiteUsagesSlot~filter'
      - 'Sites#getSiteUsagesSlot~requestUrl'
      - 'Sites#getSiteUsagesSlot~requestUrl'
      - 'Sites#getSiteUsagesSlot~requestUrl'
      - 'Sites#getSiteUsagesSlot~requestUrl'
      - 'Sites#getSiteUsagesSlot~requestUrl'
      - 'Sites#getSiteUsagesSlot~queryParameters'
      - 'Sites#getSiteUsagesSlot~requestUrl'
      - 'Sites#getSiteUsagesSlot~regex'
      - 'Sites#getSiteUsagesSlot~requestUrl'
      - 'Sites#getSiteUsagesSlot~httpRequest'
      - 'Sites#getSiteUsagesSlot~headerName'
  - uid: 'Sites#getSiteMetrics'
    id: getSiteMetrics
    parent: Sites
    name: >-
      getSiteMetrics(resourceGroupName, name, options, options.details,
      options.filter, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.details
          type: boolean
          description: "If true, metric details are included in\rresponse"
        - id: options.filter
          type: string
          description: "Return only usages/metrics specified in\rthe filter. Filter conforms to odata syntax. Example: $filter=(name.value\req 'Metric1' or name.value eq 'Metric2') and startTime eq\r'2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain\req duration'[Hour|Minute|Day]'."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ResourceMetricCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteMetrics(resourceGroupName, name, options,
        options.details, options.filter, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteMetrics(resourceGroupName, name, options, options.details,
      options.filter, options.customHeaders, callback)
    children:
      - 'Sites#getSiteMetrics~client'
      - 'Sites#getSiteMetrics~callback'
      - 'Sites#getSiteMetrics~options'
      - 'Sites#getSiteMetrics~details'
      - 'Sites#getSiteMetrics~filter'
      - 'Sites#getSiteMetrics~requestUrl'
      - 'Sites#getSiteMetrics~requestUrl'
      - 'Sites#getSiteMetrics~requestUrl'
      - 'Sites#getSiteMetrics~requestUrl'
      - 'Sites#getSiteMetrics~queryParameters'
      - 'Sites#getSiteMetrics~requestUrl'
      - 'Sites#getSiteMetrics~regex'
      - 'Sites#getSiteMetrics~requestUrl'
      - 'Sites#getSiteMetrics~httpRequest'
      - 'Sites#getSiteMetrics~headerName'
  - uid: 'Sites#getSiteMetricsSlot'
    id: getSiteMetricsSlot
    parent: Sites
    name: >-
      getSiteMetricsSlot(resourceGroupName, name, slot, options,
      options.details, options.filter, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.details
          type: boolean
          description: "If true, metric details are included in\rresponse"
        - id: options.filter
          type: string
          description: "Return only usages/metrics specified in\rthe filter. Filter conforms to odata syntax. Example: $filter=(name.value\req 'Metric1' or name.value eq 'Metric2') and startTime eq\r'2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain\req duration'[Hour|Minute|Day]'."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ResourceMetricCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteMetricsSlot(resourceGroupName, name, slot, options,
        options.details, options.filter, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteMetricsSlot(resourceGroupName, name, slot, options,
      options.details, options.filter, options.customHeaders, callback)
    children:
      - 'Sites#getSiteMetricsSlot~client'
      - 'Sites#getSiteMetricsSlot~callback'
      - 'Sites#getSiteMetricsSlot~options'
      - 'Sites#getSiteMetricsSlot~details'
      - 'Sites#getSiteMetricsSlot~filter'
      - 'Sites#getSiteMetricsSlot~requestUrl'
      - 'Sites#getSiteMetricsSlot~requestUrl'
      - 'Sites#getSiteMetricsSlot~requestUrl'
      - 'Sites#getSiteMetricsSlot~requestUrl'
      - 'Sites#getSiteMetricsSlot~requestUrl'
      - 'Sites#getSiteMetricsSlot~queryParameters'
      - 'Sites#getSiteMetricsSlot~requestUrl'
      - 'Sites#getSiteMetricsSlot~regex'
      - 'Sites#getSiteMetricsSlot~requestUrl'
      - 'Sites#getSiteMetricsSlot~httpRequest'
      - 'Sites#getSiteMetricsSlot~headerName'
  - uid: 'Sites#getSiteMetricDefinitionsSlot'
    id: getSiteMetricDefinitionsSlot
    parent: Sites
    name: >-
      getSiteMetricDefinitionsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link MetricDefinitionCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteMetricDefinitionsSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteMetricDefinitionsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteMetricDefinitionsSlot~client'
      - 'Sites#getSiteMetricDefinitionsSlot~callback'
      - 'Sites#getSiteMetricDefinitionsSlot~options'
      - 'Sites#getSiteMetricDefinitionsSlot~requestUrl'
      - 'Sites#getSiteMetricDefinitionsSlot~requestUrl'
      - 'Sites#getSiteMetricDefinitionsSlot~requestUrl'
      - 'Sites#getSiteMetricDefinitionsSlot~requestUrl'
      - 'Sites#getSiteMetricDefinitionsSlot~requestUrl'
      - 'Sites#getSiteMetricDefinitionsSlot~queryParameters'
      - 'Sites#getSiteMetricDefinitionsSlot~requestUrl'
      - 'Sites#getSiteMetricDefinitionsSlot~regex'
      - 'Sites#getSiteMetricDefinitionsSlot~requestUrl'
      - 'Sites#getSiteMetricDefinitionsSlot~httpRequest'
      - 'Sites#getSiteMetricDefinitionsSlot~headerName'
  - uid: 'Sites#getSiteMetricDefinitions'
    id: getSiteMetricDefinitions
    parent: Sites
    name: >-
      getSiteMetricDefinitions(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link MetricDefinitionCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteMetricDefinitions(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteMetricDefinitions(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteMetricDefinitions~client'
      - 'Sites#getSiteMetricDefinitions~callback'
      - 'Sites#getSiteMetricDefinitions~options'
      - 'Sites#getSiteMetricDefinitions~requestUrl'
      - 'Sites#getSiteMetricDefinitions~requestUrl'
      - 'Sites#getSiteMetricDefinitions~requestUrl'
      - 'Sites#getSiteMetricDefinitions~requestUrl'
      - 'Sites#getSiteMetricDefinitions~queryParameters'
      - 'Sites#getSiteMetricDefinitions~requestUrl'
      - 'Sites#getSiteMetricDefinitions~regex'
      - 'Sites#getSiteMetricDefinitions~requestUrl'
      - 'Sites#getSiteMetricDefinitions~httpRequest'
      - 'Sites#getSiteMetricDefinitions~headerName'
  - uid: 'Sites#listSitePublishingProfileXml'
    id: listSitePublishingProfileXml
    parent: Sites
    name: >-
      listSitePublishingProfileXml(resourceGroupName, name, options,
      options.format, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.format
          type: string
          description: "Name of the format. Valid values are:\rFileZilla3\rWebDeploy -- default\rFtp"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSitePublishingProfileXml(resourceGroupName, name, options,
        options.format, options.customHeaders, callback);
    fullName: >-
      Sites.listSitePublishingProfileXml(resourceGroupName, name, options,
      options.format, options.customHeaders, callback)
    children:
      - 'Sites#listSitePublishingProfileXml~client'
      - 'Sites#listSitePublishingProfileXml~callback'
      - 'Sites#listSitePublishingProfileXml~options'
      - 'Sites#listSitePublishingProfileXml~format'
      - 'Sites#listSitePublishingProfileXml~options'
      - 'Sites#listSitePublishingProfileXml~options'
      - 'Sites#listSitePublishingProfileXml~requestUrl'
      - 'Sites#listSitePublishingProfileXml~requestUrl'
      - 'Sites#listSitePublishingProfileXml~requestUrl'
      - 'Sites#listSitePublishingProfileXml~requestUrl'
      - 'Sites#listSitePublishingProfileXml~queryParameters'
      - 'Sites#listSitePublishingProfileXml~requestUrl'
      - 'Sites#listSitePublishingProfileXml~regex'
      - 'Sites#listSitePublishingProfileXml~requestUrl'
      - 'Sites#listSitePublishingProfileXml~httpRequest'
      - 'Sites#listSitePublishingProfileXml~headerName'
      - 'Sites#listSitePublishingProfileXml~requestContent'
      - 'Sites#listSitePublishingProfileXml~requestModel'
      - 'Sites#listSitePublishingProfileXml~requestModelMapper'
      - 'Sites#listSitePublishingProfileXml~requestModel'
      - 'Sites#listSitePublishingProfileXml~requestContent'
      - 'Sites#listSitePublishingProfileXml~serializationError'
  - uid: 'Sites#listSitePublishingProfileXmlSlot'
    id: listSitePublishingProfileXmlSlot
    parent: Sites
    name: >-
      listSitePublishingProfileXmlSlot(resourceGroupName, name, slot, options,
      options.format, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.format
          type: string
          description: "Name of the format. Valid values are:\rFileZilla3\rWebDeploy -- default\rFtp"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSitePublishingProfileXmlSlot(resourceGroupName, name, slot,
        options, options.format, options.customHeaders, callback);
    fullName: >-
      Sites.listSitePublishingProfileXmlSlot(resourceGroupName, name, slot,
      options, options.format, options.customHeaders, callback)
    children:
      - 'Sites#listSitePublishingProfileXmlSlot~client'
      - 'Sites#listSitePublishingProfileXmlSlot~callback'
      - 'Sites#listSitePublishingProfileXmlSlot~options'
      - 'Sites#listSitePublishingProfileXmlSlot~format'
      - 'Sites#listSitePublishingProfileXmlSlot~options'
      - 'Sites#listSitePublishingProfileXmlSlot~options'
      - 'Sites#listSitePublishingProfileXmlSlot~requestUrl'
      - 'Sites#listSitePublishingProfileXmlSlot~requestUrl'
      - 'Sites#listSitePublishingProfileXmlSlot~requestUrl'
      - 'Sites#listSitePublishingProfileXmlSlot~requestUrl'
      - 'Sites#listSitePublishingProfileXmlSlot~requestUrl'
      - 'Sites#listSitePublishingProfileXmlSlot~queryParameters'
      - 'Sites#listSitePublishingProfileXmlSlot~requestUrl'
      - 'Sites#listSitePublishingProfileXmlSlot~regex'
      - 'Sites#listSitePublishingProfileXmlSlot~requestUrl'
      - 'Sites#listSitePublishingProfileXmlSlot~httpRequest'
      - 'Sites#listSitePublishingProfileXmlSlot~headerName'
      - 'Sites#listSitePublishingProfileXmlSlot~requestContent'
      - 'Sites#listSitePublishingProfileXmlSlot~requestModel'
      - 'Sites#listSitePublishingProfileXmlSlot~requestModelMapper'
      - 'Sites#listSitePublishingProfileXmlSlot~requestModel'
      - 'Sites#listSitePublishingProfileXmlSlot~requestContent'
      - 'Sites#listSitePublishingProfileXmlSlot~serializationError'
  - uid: 'Sites#restartSiteSlot'
    id: restartSiteSlot
    parent: Sites
    name: >-
      restartSiteSlot(resourceGroupName, name, slot, options,
      options.softRestart, options.synchronous, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.softRestart
          type: boolean
          description: "Soft restart applies the\rconfiguration settings and restarts the app if necessary. Hard restart\ralways restarts and reprovisions the app"
        - id: options.synchronous
          type: boolean
          description: "If true then the API will block\runtil the app has been restarted"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function restartSiteSlot(resourceGroupName, name, slot, options,
        options.softRestart, options.synchronous, options.customHeaders,
        callback);
    fullName: >-
      Sites.restartSiteSlot(resourceGroupName, name, slot, options,
      options.softRestart, options.synchronous, options.customHeaders, callback)
    children:
      - 'Sites#restartSiteSlot~client'
      - 'Sites#restartSiteSlot~callback'
      - 'Sites#restartSiteSlot~options'
      - 'Sites#restartSiteSlot~softRestart'
      - 'Sites#restartSiteSlot~synchronous'
      - 'Sites#restartSiteSlot~requestUrl'
      - 'Sites#restartSiteSlot~requestUrl'
      - 'Sites#restartSiteSlot~requestUrl'
      - 'Sites#restartSiteSlot~requestUrl'
      - 'Sites#restartSiteSlot~requestUrl'
      - 'Sites#restartSiteSlot~queryParameters'
      - 'Sites#restartSiteSlot~requestUrl'
      - 'Sites#restartSiteSlot~regex'
      - 'Sites#restartSiteSlot~requestUrl'
      - 'Sites#restartSiteSlot~httpRequest'
      - 'Sites#restartSiteSlot~headerName'
  - uid: 'Sites#restartSite'
    id: restartSite
    parent: Sites
    name: >-
      restartSite(resourceGroupName, name, options, options.softRestart,
      options.synchronous, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.softRestart
          type: boolean
          description: "Soft restart applies the\rconfiguration settings and restarts the app if necessary. Hard restart\ralways restarts and reprovisions the app"
        - id: options.synchronous
          type: boolean
          description: "If true then the API will block\runtil the app has been restarted"
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function restartSite(resourceGroupName, name, options,
        options.softRestart, options.synchronous, options.customHeaders,
        callback);
    fullName: >-
      Sites.restartSite(resourceGroupName, name, options, options.softRestart,
      options.synchronous, options.customHeaders, callback)
    children:
      - 'Sites#restartSite~client'
      - 'Sites#restartSite~callback'
      - 'Sites#restartSite~options'
      - 'Sites#restartSite~softRestart'
      - 'Sites#restartSite~synchronous'
      - 'Sites#restartSite~requestUrl'
      - 'Sites#restartSite~requestUrl'
      - 'Sites#restartSite~requestUrl'
      - 'Sites#restartSite~requestUrl'
      - 'Sites#restartSite~queryParameters'
      - 'Sites#restartSite~requestUrl'
      - 'Sites#restartSite~regex'
      - 'Sites#restartSite~requestUrl'
      - 'Sites#restartSite~httpRequest'
      - 'Sites#restartSite~headerName'
  - uid: 'Sites#startSite'
    id: startSite
    parent: Sites
    name: >-
      startSite(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function startSite(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.startSite(resourceGroupName, name, options, options.customHeaders,
      callback)
    children:
      - 'Sites#startSite~client'
      - 'Sites#startSite~callback'
      - 'Sites#startSite~options'
      - 'Sites#startSite~requestUrl'
      - 'Sites#startSite~requestUrl'
      - 'Sites#startSite~requestUrl'
      - 'Sites#startSite~requestUrl'
      - 'Sites#startSite~queryParameters'
      - 'Sites#startSite~requestUrl'
      - 'Sites#startSite~regex'
      - 'Sites#startSite~requestUrl'
      - 'Sites#startSite~httpRequest'
      - 'Sites#startSite~headerName'
  - uid: 'Sites#startSiteSlot'
    id: startSiteSlot
    parent: Sites
    name: >-
      startSiteSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function startSiteSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.startSiteSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#startSiteSlot~client'
      - 'Sites#startSiteSlot~callback'
      - 'Sites#startSiteSlot~options'
      - 'Sites#startSiteSlot~requestUrl'
      - 'Sites#startSiteSlot~requestUrl'
      - 'Sites#startSiteSlot~requestUrl'
      - 'Sites#startSiteSlot~requestUrl'
      - 'Sites#startSiteSlot~requestUrl'
      - 'Sites#startSiteSlot~queryParameters'
      - 'Sites#startSiteSlot~requestUrl'
      - 'Sites#startSiteSlot~regex'
      - 'Sites#startSiteSlot~requestUrl'
      - 'Sites#startSiteSlot~httpRequest'
      - 'Sites#startSiteSlot~headerName'
  - uid: 'Sites#stopSite'
    id: stopSite
    parent: Sites
    name: >-
      stopSite(resourceGroupName, name, options, options.customHeaders,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function stopSite(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.stopSite(resourceGroupName, name, options, options.customHeaders,
      callback)
    children:
      - 'Sites#stopSite~client'
      - 'Sites#stopSite~callback'
      - 'Sites#stopSite~options'
      - 'Sites#stopSite~requestUrl'
      - 'Sites#stopSite~requestUrl'
      - 'Sites#stopSite~requestUrl'
      - 'Sites#stopSite~requestUrl'
      - 'Sites#stopSite~queryParameters'
      - 'Sites#stopSite~requestUrl'
      - 'Sites#stopSite~regex'
      - 'Sites#stopSite~requestUrl'
      - 'Sites#stopSite~httpRequest'
      - 'Sites#stopSite~headerName'
  - uid: 'Sites#stopSiteSlot'
    id: stopSiteSlot
    parent: Sites
    name: >-
      stopSiteSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function stopSiteSlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.stopSiteSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#stopSiteSlot~client'
      - 'Sites#stopSiteSlot~callback'
      - 'Sites#stopSiteSlot~options'
      - 'Sites#stopSiteSlot~requestUrl'
      - 'Sites#stopSiteSlot~requestUrl'
      - 'Sites#stopSiteSlot~requestUrl'
      - 'Sites#stopSiteSlot~requestUrl'
      - 'Sites#stopSiteSlot~requestUrl'
      - 'Sites#stopSiteSlot~queryParameters'
      - 'Sites#stopSiteSlot~requestUrl'
      - 'Sites#stopSiteSlot~regex'
      - 'Sites#stopSiteSlot~requestUrl'
      - 'Sites#stopSiteSlot~httpRequest'
      - 'Sites#stopSiteSlot~headerName'
  - uid: 'Sites#syncSiteRepository'
    id: syncSiteRepository
    parent: Sites
    name: >-
      syncSiteRepository(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function syncSiteRepository(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.syncSiteRepository(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#syncSiteRepository~client'
      - 'Sites#syncSiteRepository~callback'
      - 'Sites#syncSiteRepository~options'
      - 'Sites#syncSiteRepository~requestUrl'
      - 'Sites#syncSiteRepository~requestUrl'
      - 'Sites#syncSiteRepository~requestUrl'
      - 'Sites#syncSiteRepository~requestUrl'
      - 'Sites#syncSiteRepository~queryParameters'
      - 'Sites#syncSiteRepository~requestUrl'
      - 'Sites#syncSiteRepository~regex'
      - 'Sites#syncSiteRepository~requestUrl'
      - 'Sites#syncSiteRepository~httpRequest'
      - 'Sites#syncSiteRepository~headerName'
  - uid: 'Sites#syncSiteRepositorySlot'
    id: syncSiteRepositorySlot
    parent: Sites
    name: >-
      syncSiteRepositorySlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
        - id: name
          type: string
        - id: slot
          type: string
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function syncSiteRepositorySlot(resourceGroupName, name, slot, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.syncSiteRepositorySlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#syncSiteRepositorySlot~client'
      - 'Sites#syncSiteRepositorySlot~callback'
      - 'Sites#syncSiteRepositorySlot~options'
      - 'Sites#syncSiteRepositorySlot~requestUrl'
      - 'Sites#syncSiteRepositorySlot~requestUrl'
      - 'Sites#syncSiteRepositorySlot~requestUrl'
      - 'Sites#syncSiteRepositorySlot~requestUrl'
      - 'Sites#syncSiteRepositorySlot~requestUrl'
      - 'Sites#syncSiteRepositorySlot~queryParameters'
      - 'Sites#syncSiteRepositorySlot~requestUrl'
      - 'Sites#syncSiteRepositorySlot~regex'
      - 'Sites#syncSiteRepositorySlot~requestUrl'
      - 'Sites#syncSiteRepositorySlot~httpRequest'
      - 'Sites#syncSiteRepositorySlot~headerName'
  - uid: 'Sites#generateNewSitePublishingPasswordSlot'
    id: generateNewSitePublishingPasswordSlot
    parent: Sites
    name: >-
      generateNewSitePublishingPasswordSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: slot
          type: string
          description: "Name of web app slot. If not specified then will\rdefault to production slot."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName, name,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.generateNewSitePublishingPasswordSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#generateNewSitePublishingPasswordSlot~client'
      - 'Sites#generateNewSitePublishingPasswordSlot~callback'
      - 'Sites#generateNewSitePublishingPasswordSlot~options'
      - 'Sites#generateNewSitePublishingPasswordSlot~requestUrl'
      - 'Sites#generateNewSitePublishingPasswordSlot~requestUrl'
      - 'Sites#generateNewSitePublishingPasswordSlot~requestUrl'
      - 'Sites#generateNewSitePublishingPasswordSlot~requestUrl'
      - 'Sites#generateNewSitePublishingPasswordSlot~requestUrl'
      - 'Sites#generateNewSitePublishingPasswordSlot~queryParameters'
      - 'Sites#generateNewSitePublishingPasswordSlot~requestUrl'
      - 'Sites#generateNewSitePublishingPasswordSlot~regex'
      - 'Sites#generateNewSitePublishingPasswordSlot~requestUrl'
      - 'Sites#generateNewSitePublishingPasswordSlot~httpRequest'
      - 'Sites#generateNewSitePublishingPasswordSlot~headerName'
  - uid: 'Sites#generateNewSitePublishingPassword'
    id: generateNewSitePublishingPassword
    parent: Sites
    name: >-
      generateNewSitePublishingPassword(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group
        - id: name
          type: string
          description: Name of web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName, name,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.generateNewSitePublishingPassword(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#generateNewSitePublishingPassword~client'
      - 'Sites#generateNewSitePublishingPassword~callback'
      - 'Sites#generateNewSitePublishingPassword~options'
      - 'Sites#generateNewSitePublishingPassword~requestUrl'
      - 'Sites#generateNewSitePublishingPassword~requestUrl'
      - 'Sites#generateNewSitePublishingPassword~requestUrl'
      - 'Sites#generateNewSitePublishingPassword~requestUrl'
      - 'Sites#generateNewSitePublishingPassword~queryParameters'
      - 'Sites#generateNewSitePublishingPassword~requestUrl'
      - 'Sites#generateNewSitePublishingPassword~regex'
      - 'Sites#generateNewSitePublishingPassword~requestUrl'
      - 'Sites#generateNewSitePublishingPassword~httpRequest'
      - 'Sites#generateNewSitePublishingPassword~headerName'
  - uid: 'Sites#getSiteRelayServiceConnection'
    id: getSiteRelayServiceConnection
    parent: Sites
    name: >-
      getSiteRelayServiceConnection(resourceGroupName, name, entityName,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteRelayServiceConnection(resourceGroupName, name,
        entityName, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteRelayServiceConnection(resourceGroupName, name, entityName,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteRelayServiceConnection~client'
      - 'Sites#getSiteRelayServiceConnection~callback'
      - 'Sites#getSiteRelayServiceConnection~options'
      - 'Sites#getSiteRelayServiceConnection~requestUrl'
      - 'Sites#getSiteRelayServiceConnection~requestUrl'
      - 'Sites#getSiteRelayServiceConnection~requestUrl'
      - 'Sites#getSiteRelayServiceConnection~requestUrl'
      - 'Sites#getSiteRelayServiceConnection~requestUrl'
      - 'Sites#getSiteRelayServiceConnection~queryParameters'
      - 'Sites#getSiteRelayServiceConnection~requestUrl'
      - 'Sites#getSiteRelayServiceConnection~regex'
      - 'Sites#getSiteRelayServiceConnection~requestUrl'
      - 'Sites#getSiteRelayServiceConnection~httpRequest'
      - 'Sites#getSiteRelayServiceConnection~headerName'
  - uid: 'Sites#createOrUpdateSiteRelayServiceConnection'
    id: createOrUpdateSiteRelayServiceConnection
    parent: Sites
    name: >-
      createOrUpdateSiteRelayServiceConnection(resourceGroupName, name,
      entityName, connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: connectionEnvelope
          type: object
          description: The details of the Hybrid Connection
        - id: connectionEnvelope.entityName
          type: string
        - id: connectionEnvelope.entityConnectionString
          type: string
        - id: connectionEnvelope.resourceType
          type: string
        - id: connectionEnvelope.resourceConnectionString
          type: string
        - id: connectionEnvelope.hostname
          type: string
        - id: connectionEnvelope.port
          type: number
        - id: connectionEnvelope.biztalkUri
          type: string
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteRelayServiceConnection(resourceGroupName,
        name, entityName, connectionEnvelope, connectionEnvelope.entityName,
        connectionEnvelope.entityConnectionString,
        connectionEnvelope.resourceType,
        connectionEnvelope.resourceConnectionString,
        connectionEnvelope.hostname, connectionEnvelope.port,
        connectionEnvelope.biztalkUri, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteRelayServiceConnection(resourceGroupName, name,
      entityName, connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteRelayServiceConnection~client'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~callback'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~options'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~queryParameters'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~regex'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~httpRequest'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~headerName'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestContent'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestModel'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestModelMapper'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestModel'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~requestContent'
      - 'Sites#createOrUpdateSiteRelayServiceConnection~serializationError'
  - uid: 'Sites#deleteSiteRelayServiceConnection'
    id: deleteSiteRelayServiceConnection
    parent: Sites
    name: >-
      deleteSiteRelayServiceConnection(resourceGroupName, name, entityName,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteRelayServiceConnection(resourceGroupName, name,
        entityName, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteRelayServiceConnection(resourceGroupName, name,
      entityName, options, options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteRelayServiceConnection~client'
      - 'Sites#deleteSiteRelayServiceConnection~callback'
      - 'Sites#deleteSiteRelayServiceConnection~options'
      - 'Sites#deleteSiteRelayServiceConnection~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnection~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnection~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnection~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnection~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnection~queryParameters'
      - 'Sites#deleteSiteRelayServiceConnection~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnection~regex'
      - 'Sites#deleteSiteRelayServiceConnection~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnection~httpRequest'
      - 'Sites#deleteSiteRelayServiceConnection~headerName'
  - uid: 'Sites#updateSiteRelayServiceConnection'
    id: updateSiteRelayServiceConnection
    parent: Sites
    name: >-
      updateSiteRelayServiceConnection(resourceGroupName, name, entityName,
      connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: connectionEnvelope
          type: object
          description: The details of the Hybrid Connection
        - id: connectionEnvelope.entityName
          type: string
        - id: connectionEnvelope.entityConnectionString
          type: string
        - id: connectionEnvelope.resourceType
          type: string
        - id: connectionEnvelope.resourceConnectionString
          type: string
        - id: connectionEnvelope.hostname
          type: string
        - id: connectionEnvelope.port
          type: number
        - id: connectionEnvelope.biztalkUri
          type: string
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteRelayServiceConnection(resourceGroupName, name,
        entityName, connectionEnvelope, connectionEnvelope.entityName,
        connectionEnvelope.entityConnectionString,
        connectionEnvelope.resourceType,
        connectionEnvelope.resourceConnectionString,
        connectionEnvelope.hostname, connectionEnvelope.port,
        connectionEnvelope.biztalkUri, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteRelayServiceConnection(resourceGroupName, name,
      entityName, connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteRelayServiceConnection~client'
      - 'Sites#updateSiteRelayServiceConnection~callback'
      - 'Sites#updateSiteRelayServiceConnection~options'
      - 'Sites#updateSiteRelayServiceConnection~requestUrl'
      - 'Sites#updateSiteRelayServiceConnection~requestUrl'
      - 'Sites#updateSiteRelayServiceConnection~requestUrl'
      - 'Sites#updateSiteRelayServiceConnection~requestUrl'
      - 'Sites#updateSiteRelayServiceConnection~requestUrl'
      - 'Sites#updateSiteRelayServiceConnection~queryParameters'
      - 'Sites#updateSiteRelayServiceConnection~requestUrl'
      - 'Sites#updateSiteRelayServiceConnection~regex'
      - 'Sites#updateSiteRelayServiceConnection~requestUrl'
      - 'Sites#updateSiteRelayServiceConnection~httpRequest'
      - 'Sites#updateSiteRelayServiceConnection~headerName'
      - 'Sites#updateSiteRelayServiceConnection~requestContent'
      - 'Sites#updateSiteRelayServiceConnection~requestModel'
      - 'Sites#updateSiteRelayServiceConnection~requestModelMapper'
      - 'Sites#updateSiteRelayServiceConnection~requestModel'
      - 'Sites#updateSiteRelayServiceConnection~requestContent'
      - 'Sites#updateSiteRelayServiceConnection~serializationError'
  - uid: 'Sites#getSiteRelayServiceConnectionSlot'
    id: getSiteRelayServiceConnectionSlot
    parent: Sites
    name: >-
      getSiteRelayServiceConnectionSlot(resourceGroupName, name, entityName,
      slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteRelayServiceConnectionSlot(resourceGroupName, name,
        entityName, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteRelayServiceConnectionSlot(resourceGroupName, name,
      entityName, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteRelayServiceConnectionSlot~client'
      - 'Sites#getSiteRelayServiceConnectionSlot~callback'
      - 'Sites#getSiteRelayServiceConnectionSlot~options'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~queryParameters'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~regex'
      - 'Sites#getSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#getSiteRelayServiceConnectionSlot~httpRequest'
      - 'Sites#getSiteRelayServiceConnectionSlot~headerName'
  - uid: 'Sites#createOrUpdateSiteRelayServiceConnectionSlot'
    id: createOrUpdateSiteRelayServiceConnectionSlot
    parent: Sites
    name: >-
      createOrUpdateSiteRelayServiceConnectionSlot(resourceGroupName, name,
      entityName, connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: connectionEnvelope
          type: object
          description: The details of the Hybrid Connection
        - id: connectionEnvelope.entityName
          type: string
        - id: connectionEnvelope.entityConnectionString
          type: string
        - id: connectionEnvelope.resourceType
          type: string
        - id: connectionEnvelope.resourceConnectionString
          type: string
        - id: connectionEnvelope.hostname
          type: string
        - id: connectionEnvelope.port
          type: number
        - id: connectionEnvelope.biztalkUri
          type: string
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteRelayServiceConnectionSlot(resourceGroupName,
        name, entityName, connectionEnvelope, connectionEnvelope.entityName,
        connectionEnvelope.entityConnectionString,
        connectionEnvelope.resourceType,
        connectionEnvelope.resourceConnectionString,
        connectionEnvelope.hostname, connectionEnvelope.port,
        connectionEnvelope.biztalkUri, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.createOrUpdateSiteRelayServiceConnectionSlot(resourceGroupName,
      name, entityName, connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~client'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~callback'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~options'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~queryParameters'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~regex'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~httpRequest'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~headerName'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestContent'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestModel'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestModelMapper'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestModel'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~requestContent'
      - 'Sites#createOrUpdateSiteRelayServiceConnectionSlot~serializationError'
  - uid: 'Sites#deleteSiteRelayServiceConnectionSlot'
    id: deleteSiteRelayServiceConnectionSlot
    parent: Sites
    name: >-
      deleteSiteRelayServiceConnectionSlot(resourceGroupName, name, entityName,
      slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteSiteRelayServiceConnectionSlot(resourceGroupName, name,
        entityName, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.deleteSiteRelayServiceConnectionSlot(resourceGroupName, name,
      entityName, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#deleteSiteRelayServiceConnectionSlot~client'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~callback'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~options'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~queryParameters'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~regex'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~httpRequest'
      - 'Sites#deleteSiteRelayServiceConnectionSlot~headerName'
  - uid: 'Sites#updateSiteRelayServiceConnectionSlot'
    id: updateSiteRelayServiceConnectionSlot
    parent: Sites
    name: >-
      updateSiteRelayServiceConnectionSlot(resourceGroupName, name, entityName,
      connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: entityName
          type: string
          description: "The name by which the Hybrid Connection is\ridentified"
        - id: connectionEnvelope
          type: object
          description: The details of the Hybrid Connection
        - id: connectionEnvelope.entityName
          type: string
        - id: connectionEnvelope.entityConnectionString
          type: string
        - id: connectionEnvelope.resourceType
          type: string
        - id: connectionEnvelope.resourceConnectionString
          type: string
        - id: connectionEnvelope.hostname
          type: string
        - id: connectionEnvelope.port
          type: number
        - id: connectionEnvelope.biztalkUri
          type: string
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteRelayServiceConnectionSlot(resourceGroupName, name,
        entityName, connectionEnvelope, connectionEnvelope.entityName,
        connectionEnvelope.entityConnectionString,
        connectionEnvelope.resourceType,
        connectionEnvelope.resourceConnectionString,
        connectionEnvelope.hostname, connectionEnvelope.port,
        connectionEnvelope.biztalkUri, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.updateSiteRelayServiceConnectionSlot(resourceGroupName, name,
      entityName, connectionEnvelope, connectionEnvelope.entityName,
      connectionEnvelope.entityConnectionString,
      connectionEnvelope.resourceType,
      connectionEnvelope.resourceConnectionString, connectionEnvelope.hostname,
      connectionEnvelope.port, connectionEnvelope.biztalkUri,
      connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteRelayServiceConnectionSlot~client'
      - 'Sites#updateSiteRelayServiceConnectionSlot~callback'
      - 'Sites#updateSiteRelayServiceConnectionSlot~options'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~queryParameters'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~regex'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestUrl'
      - 'Sites#updateSiteRelayServiceConnectionSlot~httpRequest'
      - 'Sites#updateSiteRelayServiceConnectionSlot~headerName'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestContent'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestModel'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestModelMapper'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestModel'
      - 'Sites#updateSiteRelayServiceConnectionSlot~requestContent'
      - 'Sites#updateSiteRelayServiceConnectionSlot~serializationError'
  - uid: 'Sites#listSiteRelayServiceConnectionsSlot'
    id: listSiteRelayServiceConnectionsSlot
    parent: Sites
    name: >-
      listSiteRelayServiceConnectionsSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteRelayServiceConnectionsSlot(resourceGroupName, name,
        slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.listSiteRelayServiceConnectionsSlot(resourceGroupName, name, slot,
      options, options.customHeaders, callback)
    children:
      - 'Sites#listSiteRelayServiceConnectionsSlot~client'
      - 'Sites#listSiteRelayServiceConnectionsSlot~callback'
      - 'Sites#listSiteRelayServiceConnectionsSlot~options'
      - 'Sites#listSiteRelayServiceConnectionsSlot~requestUrl'
      - 'Sites#listSiteRelayServiceConnectionsSlot~requestUrl'
      - 'Sites#listSiteRelayServiceConnectionsSlot~requestUrl'
      - 'Sites#listSiteRelayServiceConnectionsSlot~requestUrl'
      - 'Sites#listSiteRelayServiceConnectionsSlot~requestUrl'
      - 'Sites#listSiteRelayServiceConnectionsSlot~queryParameters'
      - 'Sites#listSiteRelayServiceConnectionsSlot~requestUrl'
      - 'Sites#listSiteRelayServiceConnectionsSlot~regex'
      - 'Sites#listSiteRelayServiceConnectionsSlot~requestUrl'
      - 'Sites#listSiteRelayServiceConnectionsSlot~httpRequest'
      - 'Sites#listSiteRelayServiceConnectionsSlot~headerName'
  - uid: 'Sites#listSiteRelayServiceConnections'
    id: listSiteRelayServiceConnections
    parent: Sites
    name: >-
      listSiteRelayServiceConnections(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link RelayServiceConnectionEntity} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listSiteRelayServiceConnections(resourceGroupName, name,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.listSiteRelayServiceConnections(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#listSiteRelayServiceConnections~client'
      - 'Sites#listSiteRelayServiceConnections~callback'
      - 'Sites#listSiteRelayServiceConnections~options'
      - 'Sites#listSiteRelayServiceConnections~requestUrl'
      - 'Sites#listSiteRelayServiceConnections~requestUrl'
      - 'Sites#listSiteRelayServiceConnections~requestUrl'
      - 'Sites#listSiteRelayServiceConnections~requestUrl'
      - 'Sites#listSiteRelayServiceConnections~queryParameters'
      - 'Sites#listSiteRelayServiceConnections~requestUrl'
      - 'Sites#listSiteRelayServiceConnections~regex'
      - 'Sites#listSiteRelayServiceConnections~requestUrl'
      - 'Sites#listSiteRelayServiceConnections~httpRequest'
      - 'Sites#listSiteRelayServiceConnections~headerName'
  - uid: 'Sites#getSiteVnetGatewaySlot'
    id: getSiteVnetGatewaySlot
    parent: Sites
    name: >-
      getSiteVnetGatewaySlot(resourceGroupName, name, vnetName, gatewayName,
      slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: gatewayName
          type: string
          description: "The name of the gateway. The only gateway that\rexists presently is \"primary\""
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteVnetGatewaySlot(resourceGroupName, name, vnetName,
        gatewayName, slot, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteVnetGatewaySlot(resourceGroupName, name, vnetName,
      gatewayName, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteVnetGatewaySlot~client'
      - 'Sites#getSiteVnetGatewaySlot~callback'
      - 'Sites#getSiteVnetGatewaySlot~options'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~queryParameters'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~regex'
      - 'Sites#getSiteVnetGatewaySlot~requestUrl'
      - 'Sites#getSiteVnetGatewaySlot~httpRequest'
      - 'Sites#getSiteVnetGatewaySlot~headerName'
  - uid: 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot'
    id: createOrUpdateSiteVNETConnectionGatewaySlot
    parent: Sites
    name: >-
      createOrUpdateSiteVNETConnectionGatewaySlot(resourceGroupName, name,
      vnetName, gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: gatewayName
          type: string
          description: "The name of the gateway. The only gateway that\rexists presently is \"primary\""
        - id: connectionEnvelope
          type: object
          description: "The properties to update this gateway\rwith."
        - id: connectionEnvelope.vnetName
          type: string
          description: The VNET name.
        - id: connectionEnvelope.vpnPackageUri
          type: string
          description: "The URI where the Vpn\rpackage can be downloaded"
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetGateway} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteVNETConnectionGatewaySlot(resourceGroupName,
        name, vnetName, gatewayName, connectionEnvelope,
        connectionEnvelope.vnetName, connectionEnvelope.vpnPackageUri,
        connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.createOrUpdateSiteVNETConnectionGatewaySlot(resourceGroupName, name,
      vnetName, gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~client'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~callback'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~options'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~queryParameters'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~regex'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~httpRequest'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~headerName'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestModelMapper'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnectionGatewaySlot~serializationError'
  - uid: 'Sites#updateSiteVNETConnectionGatewaySlot'
    id: updateSiteVNETConnectionGatewaySlot
    parent: Sites
    name: >-
      updateSiteVNETConnectionGatewaySlot(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: gatewayName
          type: string
          description: "The name of the gateway. The only gateway that\rexists presently is \"primary\""
        - id: connectionEnvelope
          type: object
          description: "The properties to update this gateway\rwith."
        - id: connectionEnvelope.vnetName
          type: string
          description: The VNET name.
        - id: connectionEnvelope.vpnPackageUri
          type: string
          description: "The URI where the Vpn\rpackage can be downloaded"
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetGateway} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteVNETConnectionGatewaySlot(resourceGroupName, name,
        vnetName, gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
        connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, slot, options, options.customHeaders,
        callback);
    fullName: >-
      Sites.updateSiteVNETConnectionGatewaySlot(resourceGroupName, name,
      vnetName, gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, slot, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteVNETConnectionGatewaySlot~client'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~callback'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~options'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~queryParameters'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~regex'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestUrl'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~httpRequest'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~headerName'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestContent'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestModel'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestModelMapper'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestModel'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~requestContent'
      - 'Sites#updateSiteVNETConnectionGatewaySlot~serializationError'
  - uid: 'Sites#getSiteVnetGateway'
    id: getSiteVnetGateway
    parent: Sites
    name: >-
      getSiteVnetGateway(resourceGroupName, name, vnetName, gatewayName,
      options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: gatewayName
          type: string
          description: "The name of the gateway. The only gateway that\rexists presently is \"primary\""
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteVnetGateway(resourceGroupName, name, vnetName,
        gatewayName, options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteVnetGateway(resourceGroupName, name, vnetName, gatewayName,
      options, options.customHeaders, callback)
    children:
      - 'Sites#getSiteVnetGateway~client'
      - 'Sites#getSiteVnetGateway~callback'
      - 'Sites#getSiteVnetGateway~options'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~queryParameters'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~regex'
      - 'Sites#getSiteVnetGateway~requestUrl'
      - 'Sites#getSiteVnetGateway~httpRequest'
      - 'Sites#getSiteVnetGateway~headerName'
  - uid: 'Sites#createOrUpdateSiteVNETConnectionGateway'
    id: createOrUpdateSiteVNETConnectionGateway
    parent: Sites
    name: >-
      createOrUpdateSiteVNETConnectionGateway(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: gatewayName
          type: string
          description: "The name of the gateway. The only gateway that\rexists presently is \"primary\""
        - id: connectionEnvelope
          type: object
          description: "The properties to update this gateway\rwith."
        - id: connectionEnvelope.vnetName
          type: string
          description: The VNET name.
        - id: connectionEnvelope.vpnPackageUri
          type: string
          description: "The URI where the Vpn\rpackage can be downloaded"
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetGateway} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdateSiteVNETConnectionGateway(resourceGroupName,
        name, vnetName, gatewayName, connectionEnvelope,
        connectionEnvelope.vnetName, connectionEnvelope.vpnPackageUri,
        connectionEnvelope.id, connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.createOrUpdateSiteVNETConnectionGateway(resourceGroupName, name,
      vnetName, gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~client'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~callback'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~options'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~queryParameters'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~regex'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~httpRequest'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~headerName'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestModelMapper'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestModel'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~requestContent'
      - 'Sites#createOrUpdateSiteVNETConnectionGateway~serializationError'
  - uid: 'Sites#updateSiteVNETConnectionGateway'
    id: updateSiteVNETConnectionGateway
    parent: Sites
    name: >-
      updateSiteVNETConnectionGateway(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: vnetName
          type: string
          description: The name of the Virtual Network
        - id: gatewayName
          type: string
          description: "The name of the gateway. The only gateway that\rexists presently is \"primary\""
        - id: connectionEnvelope
          type: object
          description: "The properties to update this gateway\rwith."
        - id: connectionEnvelope.vnetName
          type: string
          description: The VNET name.
        - id: connectionEnvelope.vpnPackageUri
          type: string
          description: "The URI where the Vpn\rpackage can be downloaded"
        - id: connectionEnvelope.id
          type: string
          description: Resource Id
        - id: connectionEnvelope.name
          type: string
          description: Resource Name
        - id: connectionEnvelope.kind
          type: string
          description: Kind of resource
        - id: connectionEnvelope.location
          type: string
          description: Resource Location
        - id: connectionEnvelope.type
          type: string
          description: Resource type
        - id: connectionEnvelope.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link VnetGateway} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function updateSiteVNETConnectionGateway(resourceGroupName, name,
        vnetName, gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
        connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
        connectionEnvelope.name, connectionEnvelope.kind,
        connectionEnvelope.location, connectionEnvelope.type,
        connectionEnvelope.tags, options, options.customHeaders, callback);
    fullName: >-
      Sites.updateSiteVNETConnectionGateway(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, connectionEnvelope.vnetName,
      connectionEnvelope.vpnPackageUri, connectionEnvelope.id,
      connectionEnvelope.name, connectionEnvelope.kind,
      connectionEnvelope.location, connectionEnvelope.type,
      connectionEnvelope.tags, options, options.customHeaders, callback)
    children:
      - 'Sites#updateSiteVNETConnectionGateway~client'
      - 'Sites#updateSiteVNETConnectionGateway~callback'
      - 'Sites#updateSiteVNETConnectionGateway~options'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~queryParameters'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~regex'
      - 'Sites#updateSiteVNETConnectionGateway~requestUrl'
      - 'Sites#updateSiteVNETConnectionGateway~httpRequest'
      - 'Sites#updateSiteVNETConnectionGateway~headerName'
      - 'Sites#updateSiteVNETConnectionGateway~requestContent'
      - 'Sites#updateSiteVNETConnectionGateway~requestModel'
      - 'Sites#updateSiteVNETConnectionGateway~requestModelMapper'
      - 'Sites#updateSiteVNETConnectionGateway~requestModel'
      - 'Sites#updateSiteVNETConnectionGateway~requestContent'
      - 'Sites#updateSiteVNETConnectionGateway~serializationError'
  - uid: 'Sites#getSiteVNETConnections'
    id: getSiteVNETConnections
    parent: Sites
    name: >-
      getSiteVNETConnections(resourceGroupName, name, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteVNETConnections(resourceGroupName, name, options,
        options.customHeaders, callback);
    fullName: >-
      Sites.getSiteVNETConnections(resourceGroupName, name, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteVNETConnections~client'
      - 'Sites#getSiteVNETConnections~callback'
      - 'Sites#getSiteVNETConnections~options'
      - 'Sites#getSiteVNETConnections~requestUrl'
      - 'Sites#getSiteVNETConnections~requestUrl'
      - 'Sites#getSiteVNETConnections~requestUrl'
      - 'Sites#getSiteVNETConnections~requestUrl'
      - 'Sites#getSiteVNETConnections~queryParameters'
      - 'Sites#getSiteVNETConnections~requestUrl'
      - 'Sites#getSiteVNETConnections~regex'
      - 'Sites#getSiteVNETConnections~requestUrl'
      - 'Sites#getSiteVNETConnections~httpRequest'
      - 'Sites#getSiteVNETConnections~headerName'
  - uid: 'Sites#getSiteVNETConnectionsSlot'
    id: getSiteVNETConnectionsSlot
    parent: Sites
    name: >-
      getSiteVNETConnectionsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group name
        - id: name
          type: string
          description: The name of the web app
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getSiteVNETConnectionsSlot(resourceGroupName, name, slot,
        options, options.customHeaders, callback);
    fullName: >-
      Sites.getSiteVNETConnectionsSlot(resourceGroupName, name, slot, options,
      options.customHeaders, callback)
    children:
      - 'Sites#getSiteVNETConnectionsSlot~client'
      - 'Sites#getSiteVNETConnectionsSlot~callback'
      - 'Sites#getSiteVNETConnectionsSlot~options'
      - 'Sites#getSiteVNETConnectionsSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionsSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionsSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionsSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionsSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionsSlot~queryParameters'
      - 'Sites#getSiteVNETConnectionsSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionsSlot~regex'
      - 'Sites#getSiteVNETConnectionsSlot~requestUrl'
      - 'Sites#getSiteVNETConnectionsSlot~httpRequest'
      - 'Sites#getSiteVNETConnectionsSlot~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: false

items:
  - uid: LoadBalancers
    id: LoadBalancers
    name: LoadBalancers
    type: Class
    syntax:
      content: LoadBalancers
    fullName: LoadBalancers
    children:
      - 'LoadBalancers#client'
      - 'LoadBalancers#deleteMethod'
      - 'LoadBalancers#beginDeleteMethod'
      - 'LoadBalancers#get'
      - 'LoadBalancers#createOrUpdate'
      - 'LoadBalancers#beginCreateOrUpdate'
      - 'LoadBalancers#listAll'
      - 'LoadBalancers#list'
      - 'LoadBalancers#listAllNext'
      - 'LoadBalancers#listNext'
  - uid: 'LoadBalancers#client'
    id: client
    parent: LoadBalancers
    name: client
    type: Field
    syntax:
      content: client
    fullName: LoadBalancers.client
  - uid: 'LoadBalancers#deleteMethod'
    id: deleteMethod
    parent: LoadBalancers
    name: 'deleteMethod(resourceGroupName, loadBalancerName, options, callback)'
    summary: The delete loadbalancer operation deletes the specified loadbalancer.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the loadBalancer.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(resourceGroupName, loadBalancerName, options,
        callback);
    fullName: >-
      LoadBalancers.deleteMethod(resourceGroupName, loadBalancerName, options,
      callback)
    children:
      - 'LoadBalancers#deleteMethod~client'
      - 'LoadBalancers#deleteMethod~callback'
      - 'LoadBalancers#deleteMethod~options'
  - uid: 'LoadBalancers#beginDeleteMethod'
    id: beginDeleteMethod
    parent: LoadBalancers
    name: 'beginDeleteMethod(resourceGroupName, loadBalancerName, options, callback)'
    summary: The delete loadbalancer operation deletes the specified loadbalancer.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the loadBalancer.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginDeleteMethod(resourceGroupName, loadBalancerName, options,
        callback);
    fullName: >-
      LoadBalancers.beginDeleteMethod(resourceGroupName, loadBalancerName,
      options, callback)
    children:
      - 'LoadBalancers#beginDeleteMethod~client'
      - 'LoadBalancers#beginDeleteMethod~callback'
      - 'LoadBalancers#beginDeleteMethod~options'
      - 'LoadBalancers#beginDeleteMethod~requestUrl'
      - 'LoadBalancers#beginDeleteMethod~requestUrl'
      - 'LoadBalancers#beginDeleteMethod~requestUrl'
      - 'LoadBalancers#beginDeleteMethod~requestUrl'
      - 'LoadBalancers#beginDeleteMethod~queryParameters'
      - 'LoadBalancers#beginDeleteMethod~requestUrl'
      - 'LoadBalancers#beginDeleteMethod~regex'
      - 'LoadBalancers#beginDeleteMethod~requestUrl'
      - 'LoadBalancers#beginDeleteMethod~httpRequest'
      - 'LoadBalancers#beginDeleteMethod~headerName'
  - uid: 'LoadBalancers#get'
    id: get
    parent: LoadBalancers
    name: 'get(resourceGroupName, loadBalancerName, options, callback)'
    summary: "The Get ntework interface operation retreives information about the\rspecified network interface."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the loadBalancer.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.expand
          type: string
          description: expand references resources.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link LoadBalancer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function get(resourceGroupName, loadBalancerName, options, callback);'
    fullName: 'LoadBalancers.get(resourceGroupName, loadBalancerName, options, callback)'
    children:
      - 'LoadBalancers#get~client'
      - 'LoadBalancers#get~callback'
      - 'LoadBalancers#get~options'
      - 'LoadBalancers#get~expand'
      - 'LoadBalancers#get~requestUrl'
      - 'LoadBalancers#get~requestUrl'
      - 'LoadBalancers#get~requestUrl'
      - 'LoadBalancers#get~requestUrl'
      - 'LoadBalancers#get~queryParameters'
      - 'LoadBalancers#get~requestUrl'
      - 'LoadBalancers#get~regex'
      - 'LoadBalancers#get~requestUrl'
      - 'LoadBalancers#get~httpRequest'
      - 'LoadBalancers#get~headerName'
  - uid: 'LoadBalancers#createOrUpdate'
    id: createOrUpdate
    parent: LoadBalancers
    name: >-
      createOrUpdate(resourceGroupName, loadBalancerName, parameters, options,
      callback)
    summary: The Put LoadBalancer operation creates/updates a LoadBalancer
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the loadBalancer.
        - id: parameters
          type: object
          description: "Parameters supplied to the create/delete\rLoadBalancer operation"
        - id: parameters.frontendIPConfigurations
          type: array
          description: "Gets or sets frontend\rIP addresses of the load balancer"
        - id: parameters.backendAddressPools
          type: array
          description: "Gets or sets Pools of\rbackend IP addresseses"
        - id: parameters.loadBalancingRules
          type: array
          description: "Gets or sets loadbalancing\rrules"
        - id: parameters.probes
          type: array
          description: Gets or sets list of Load balancer probes
        - id: parameters.inboundNatRules
          type: array
          description: "Gets or sets list of inbound\rrules"
        - id: parameters.inboundNatPools
          type: array
          description: Gets or sets inbound NAT pools
        - id: parameters.outboundNatRules
          type: array
          description: Gets or sets outbound NAT rules
        - id: parameters.resourceGuid
          type: string
          description: "Gets or sets resource guid\rproperty of the Load balancer resource"
        - id: parameters.provisioningState
          type: string
          description: "Gets or sets Provisioning\rstate of the PublicIP resource Updating/Deleting/Failed"
        - id: parameters.etag
          type: string
          description: "Gets a unique read-only string that\rchanges whenever the resource is updated"
        - id: parameters.id
          type: string
          description: Resource Id
        - id: parameters.location
          type: string
          description: Resource location
        - id: parameters.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link LoadBalancer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdate(resourceGroupName, loadBalancerName, parameters,
        options, callback);
    fullName: >-
      LoadBalancers.createOrUpdate(resourceGroupName, loadBalancerName,
      parameters, options, callback)
    children:
      - 'LoadBalancers#createOrUpdate~client'
      - 'LoadBalancers#createOrUpdate~callback'
      - 'LoadBalancers#createOrUpdate~options'
  - uid: 'LoadBalancers#beginCreateOrUpdate'
    id: beginCreateOrUpdate
    parent: LoadBalancers
    name: >-
      beginCreateOrUpdate(resourceGroupName, loadBalancerName, parameters,
      options, callback)
    summary: The Put LoadBalancer operation creates/updates a LoadBalancer
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the loadBalancer.
        - id: parameters
          type: object
          description: "Parameters supplied to the create/delete\rLoadBalancer operation"
        - id: parameters.frontendIPConfigurations
          type: array
          description: "Gets or sets frontend\rIP addresses of the load balancer"
        - id: parameters.backendAddressPools
          type: array
          description: "Gets or sets Pools of\rbackend IP addresseses"
        - id: parameters.loadBalancingRules
          type: array
          description: "Gets or sets loadbalancing\rrules"
        - id: parameters.probes
          type: array
          description: Gets or sets list of Load balancer probes
        - id: parameters.inboundNatRules
          type: array
          description: "Gets or sets list of inbound\rrules"
        - id: parameters.inboundNatPools
          type: array
          description: Gets or sets inbound NAT pools
        - id: parameters.outboundNatRules
          type: array
          description: Gets or sets outbound NAT rules
        - id: parameters.resourceGuid
          type: string
          description: "Gets or sets resource guid\rproperty of the Load balancer resource"
        - id: parameters.provisioningState
          type: string
          description: "Gets or sets Provisioning\rstate of the PublicIP resource Updating/Deleting/Failed"
        - id: parameters.etag
          type: string
          description: "Gets a unique read-only string that\rchanges whenever the resource is updated"
        - id: parameters.id
          type: string
          description: Resource Id
        - id: parameters.location
          type: string
          description: Resource location
        - id: parameters.tags
          type: object
          description: Resource tags
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link LoadBalancer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdate(resourceGroupName, loadBalancerName,
        parameters, options, callback);
    fullName: >-
      LoadBalancers.beginCreateOrUpdate(resourceGroupName, loadBalancerName,
      parameters, options, callback)
    children:
      - 'LoadBalancers#beginCreateOrUpdate~client'
      - 'LoadBalancers#beginCreateOrUpdate~callback'
      - 'LoadBalancers#beginCreateOrUpdate~options'
      - 'LoadBalancers#beginCreateOrUpdate~requestUrl'
      - 'LoadBalancers#beginCreateOrUpdate~requestUrl'
      - 'LoadBalancers#beginCreateOrUpdate~requestUrl'
      - 'LoadBalancers#beginCreateOrUpdate~requestUrl'
      - 'LoadBalancers#beginCreateOrUpdate~queryParameters'
      - 'LoadBalancers#beginCreateOrUpdate~requestUrl'
      - 'LoadBalancers#beginCreateOrUpdate~regex'
      - 'LoadBalancers#beginCreateOrUpdate~requestUrl'
      - 'LoadBalancers#beginCreateOrUpdate~httpRequest'
      - 'LoadBalancers#beginCreateOrUpdate~headerName'
      - 'LoadBalancers#beginCreateOrUpdate~requestContent'
      - 'LoadBalancers#beginCreateOrUpdate~requestModel'
      - 'LoadBalancers#beginCreateOrUpdate~requestModelMapper'
      - 'LoadBalancers#beginCreateOrUpdate~requestModel'
      - 'LoadBalancers#beginCreateOrUpdate~requestContent'
      - 'LoadBalancers#beginCreateOrUpdate~serializationError'
  - uid: 'LoadBalancers#listAll'
    id: listAll
    parent: LoadBalancers
    name: 'listAll(options, callback)'
    summary: "The List loadBalancer opertion retrieves all the loadbalancers in a\rsubscription."
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link LoadBalancerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listAll(options, callback);'
    fullName: 'LoadBalancers.listAll(options, callback)'
    children:
      - 'LoadBalancers#listAll~client'
      - 'LoadBalancers#listAll~callback'
      - 'LoadBalancers#listAll~options'
      - 'LoadBalancers#listAll~requestUrl'
      - 'LoadBalancers#listAll~requestUrl'
      - 'LoadBalancers#listAll~queryParameters'
      - 'LoadBalancers#listAll~requestUrl'
      - 'LoadBalancers#listAll~regex'
      - 'LoadBalancers#listAll~requestUrl'
      - 'LoadBalancers#listAll~httpRequest'
      - 'LoadBalancers#listAll~headerName'
  - uid: 'LoadBalancers#list'
    id: list
    parent: LoadBalancers
    name: 'list(resourceGroupName, options, callback)'
    summary: "The List loadBalancer opertion retrieves all the loadbalancers in a\rresource group."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link LoadBalancerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(resourceGroupName, options, callback);'
    fullName: 'LoadBalancers.list(resourceGroupName, options, callback)'
    children:
      - 'LoadBalancers#list~client'
      - 'LoadBalancers#list~callback'
      - 'LoadBalancers#list~options'
      - 'LoadBalancers#list~requestUrl'
      - 'LoadBalancers#list~requestUrl'
      - 'LoadBalancers#list~requestUrl'
      - 'LoadBalancers#list~queryParameters'
      - 'LoadBalancers#list~requestUrl'
      - 'LoadBalancers#list~regex'
      - 'LoadBalancers#list~requestUrl'
      - 'LoadBalancers#list~httpRequest'
      - 'LoadBalancers#list~headerName'
  - uid: 'LoadBalancers#listAllNext'
    id: listAllNext
    parent: LoadBalancers
    name: 'listAllNext(nextPageLink, options, callback)'
    summary: "The List loadBalancer opertion retrieves all the loadbalancers in a\rsubscription."
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link LoadBalancerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listAllNext(nextPageLink, options, callback);'
    fullName: 'LoadBalancers.listAllNext(nextPageLink, options, callback)'
    children:
      - 'LoadBalancers#listAllNext~client'
      - 'LoadBalancers#listAllNext~callback'
      - 'LoadBalancers#listAllNext~options'
      - 'LoadBalancers#listAllNext~requestUrl'
      - 'LoadBalancers#listAllNext~requestUrl'
      - 'LoadBalancers#listAllNext~regex'
      - 'LoadBalancers#listAllNext~requestUrl'
      - 'LoadBalancers#listAllNext~httpRequest'
      - 'LoadBalancers#listAllNext~headerName'
  - uid: 'LoadBalancers#listNext'
    id: listNext
    parent: LoadBalancers
    name: 'listNext(nextPageLink, options, callback)'
    summary: "The List loadBalancer opertion retrieves all the loadbalancers in a\rresource group."
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link LoadBalancerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listNext(nextPageLink, options, callback);'
    fullName: 'LoadBalancers.listNext(nextPageLink, options, callback)'
    children:
      - 'LoadBalancers#listNext~client'
      - 'LoadBalancers#listNext~callback'
      - 'LoadBalancers#listNext~options'
      - 'LoadBalancers#listNext~requestUrl'
      - 'LoadBalancers#listNext~requestUrl'
      - 'LoadBalancers#listNext~regex'
      - 'LoadBalancers#listNext~requestUrl'
      - 'LoadBalancers#listNext~httpRequest'
      - 'LoadBalancers#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: array
    name: array
    fullName: array
    isExternal: true

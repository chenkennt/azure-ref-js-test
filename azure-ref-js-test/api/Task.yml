items:
  - uid: Task
    id: Task
    name: Task
    type: Class
    syntax:
      content: Task
    fullName: Task
    children:
      - 'Task#client'
      - 'Task#add'
      - 'Task#list'
      - 'Task#addCollection'
      - 'Task#deleteMethod'
      - 'Task#get'
      - 'Task#update'
      - 'Task#listSubtasks'
      - 'Task#terminate'
      - 'Task#listNext'
  - uid: 'Task#client'
    id: client
    parent: Task
    name: client
    type: Field
    syntax:
      content: client
    fullName: Task.client
  - uid: 'Task#add'
    id: add
    parent: Task
    name: 'add(jobId, task, options, callback)'
    summary: Adds a task to the specified job.
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: The id of the job to which the task is to be added.
        - id: task
          type: object
          description: The task to be added.
        - id: task.id
          type: string
          description: "A string that uniquely identifies the task within\rthe job. The id can contain any combination of alphanumeric characters\rincluding hyphens and underscores, and cannot contain more than 64\rcharacters."
        - id: task.displayName
          type: string
          description: A display name for the task.
        - id: task.commandLine
          type: string
          description: "The command line of the task. For\rmulti-instance tasks, the command line is executed on the primary subtask\rafter all the subtasks have finished executing the coordianation command\rline."
        - id: task.resourceFiles
          type: array
          description: "A list of files that the Batch service\rwill download to the compute node before running the command line. For\rmulti-instance tasks, the resource files will only be downloaded to the\rcompute node on which the primary subtask is executed."
        - id: task.environmentSettings
          type: array
          description: "A list of environment variable\rsettings for the task."
        - id: task.affinityInfo
          type: object
          description: "A locality hint that can be used by the\rBatch service to select a compute node on which to start the new task."
        - id: task.affinityInfo.affinityId
          type: string
          description: "An opaque string\rrepresenting the location of a compute node or a task that has run\rpreviously. You can pass the AffinityId of a compute node or task to\rindicate that this task needs to be placed close to the node or task."
        - id: task.constraints
          type: object
          description: "The execution constraints that apply to\rthis task."
        - id: task.constraints.maxWallClockTime
          type: moment.duration
          description: "The maximum\relapsed time that the task may run, measured from the time the task\rstarts. If the task does not complete within the time limit, the Batch\rservice terminates it."
        - id: task.constraints.retentionTime
          type: moment.duration
          description: "The minimum time\rto retain the working directory for the task on the compute node where it\rran, from the time it completes execution. After this time, the Batch\rservice may delete the working directory and all its contents. The default\ris infinite."
        - id: task.constraints.maxTaskRetryCount
          type: number
          description: "The maximum number of\rtimes the task may be retried. The Batch service retries a task if its\rexit code is nonzero."
        - id: task.runElevated
          type: boolean
          description: "Whether to run the task in elevated\rmode."
        - id: task.multiInstanceSettings
          type: object
          description: "Information about how to run\rthe multi-instance task."
        - id: task.multiInstanceSettings.numberOfInstances
          type: number
          description: "The number\rof compute nodes required by the multi-instance task."
        - id: task.multiInstanceSettings.coordinationCommandLine
          type: string
          description: "The\rcommand to run on the compute node instances for coordinating among the\rsubtasks."
        - id: task.multiInstanceSettings.commonResourceFiles
          type: array
          description: "A list of\rfiles that the Batch service will download before running the coordination\rcommand line. The difference between common resource files and task\rresource files is that common resource files are downloaded for all\rsubtasks including the primary, whereas task resource files are downloaded\ronly for the primary."
        - id: task.dependsOn
          type: object
          description: Any other tasks that this task depends on.
        - id: task.dependsOn.taskIds
          type: array
          description: "The list of task ids that must\rcomplete before this task can be scheduled."
        - id: task.dependsOn.taskIdRanges
          type: array
          description: "The list of task ranges that\rmust complete before this task can be scheduled."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskAddOptions
          type: object
          description: "Additional parameters for the\roperation"
        - id: options.taskAddOptions.timeout
          type: number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
        - id: options.taskAddOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskAddOptions.returnClientRequestId
          type: boolean
          description: "Whether the\rserver should return the client-request-id identifier in the response."
        - id: options.taskAddOptions.ocpDate
          type: date
          description: "The time the request was\rissued. If not specified, this header will be automatically populated with\rthe current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function add(jobId, task, options, callback);'
    fullName: 'Task.add(jobId, task, options, callback)'
    children:
      - 'Task#add~client'
      - 'Task#add~callback'
      - 'Task#add~options'
      - 'Task#add~taskAddOptions'
      - 'Task#add~timeout'
      - 'Task#add~clientRequestId'
      - 'Task#add~returnClientRequestId'
      - 'Task#add~ocpDate'
      - 'Task#add~timeout'
      - 'Task#add~clientRequestId'
      - 'Task#add~returnClientRequestId'
      - 'Task#add~ocpDate'
      - 'Task#add~requestUrl'
      - 'Task#add~requestUrl'
      - 'Task#add~queryParameters'
      - 'Task#add~requestUrl'
      - 'Task#add~regex'
      - 'Task#add~requestUrl'
      - 'Task#add~httpRequest'
      - 'Task#add~headerName'
      - 'Task#add~requestContent'
      - 'Task#add~requestModel'
      - 'Task#add~requestModelMapper'
      - 'Task#add~requestModel'
      - 'Task#add~requestContent'
      - 'Task#add~serializationError'
  - uid: 'Task#list'
    id: list
    parent: Task
    name: 'list(jobId, options, callback)'
    summary: Lists all of the tasks that are associated with the specified job.
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: The id of the job.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskListOptions
          type: object
          description: "Additional parameters for the\roperation"
        - id: options.taskListOptions.filter
          type: string
          description: An OData $filter clause.
        - id: options.taskListOptions.select
          type: string
          description: An OData $select clause.
        - id: options.taskListOptions.expand
          type: string
          description: An OData $expand clause.
        - id: options.taskListOptions.maxResults
          type: number
          description: "The maximum number of\ritems to return in the response."
        - id: options.taskListOptions.timeout
          type: number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
        - id: options.taskListOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskListOptions.returnClientRequestId
          type: boolean
          description: "Whether\rthe server should return the client-request-id identifier in the response."
        - id: options.taskListOptions.ocpDate
          type: date
          description: "The time the request was\rissued. If not specified, this header will be automatically populated with\rthe current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CloudTaskListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(jobId, options, callback);'
    fullName: 'Task.list(jobId, options, callback)'
    children:
      - 'Task#list~client'
      - 'Task#list~callback'
      - 'Task#list~options'
      - 'Task#list~taskListOptions'
      - 'Task#list~filter'
      - 'Task#list~select'
      - 'Task#list~expand'
      - 'Task#list~maxResults'
      - 'Task#list~timeout'
      - 'Task#list~clientRequestId'
      - 'Task#list~returnClientRequestId'
      - 'Task#list~ocpDate'
      - 'Task#list~filter'
      - 'Task#list~select'
      - 'Task#list~expand'
      - 'Task#list~maxResults'
      - 'Task#list~timeout'
      - 'Task#list~clientRequestId'
      - 'Task#list~returnClientRequestId'
      - 'Task#list~ocpDate'
      - 'Task#list~requestUrl'
      - 'Task#list~requestUrl'
      - 'Task#list~queryParameters'
      - 'Task#list~requestUrl'
      - 'Task#list~regex'
      - 'Task#list~requestUrl'
      - 'Task#list~httpRequest'
      - 'Task#list~headerName'
  - uid: 'Task#addCollection'
    id: addCollection
    parent: Task
    name: 'addCollection(jobId, value, options, callback)'
    summary: Adds a collection of tasks to the specified job.
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: "The id of the job to which the task collection is to\rbe added."
        - id: value
          type: array
          description: The collection of tasks to add.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskAddCollectionOptions
          type: object
          description: "Additional parameters\rfor the operation"
        - id: options.taskAddCollectionOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.taskAddCollectionOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskAddCollectionOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.taskAddCollectionOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link TaskAddCollectionResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function addCollection(jobId, value, options, callback);'
    fullName: 'Task.addCollection(jobId, value, options, callback)'
    children:
      - 'Task#addCollection~client'
      - 'Task#addCollection~callback'
      - 'Task#addCollection~options'
      - 'Task#addCollection~taskAddCollectionOptions'
      - 'Task#addCollection~timeout'
      - 'Task#addCollection~clientRequestId'
      - 'Task#addCollection~returnClientRequestId'
      - 'Task#addCollection~ocpDate'
      - 'Task#addCollection~taskCollection'
      - 'Task#addCollection~timeout'
      - 'Task#addCollection~clientRequestId'
      - 'Task#addCollection~returnClientRequestId'
      - 'Task#addCollection~ocpDate'
      - 'Task#addCollection~requestUrl'
      - 'Task#addCollection~requestUrl'
      - 'Task#addCollection~queryParameters'
      - 'Task#addCollection~requestUrl'
      - 'Task#addCollection~regex'
      - 'Task#addCollection~requestUrl'
      - 'Task#addCollection~httpRequest'
      - 'Task#addCollection~headerName'
      - 'Task#addCollection~requestContent'
      - 'Task#addCollection~requestModel'
      - 'Task#addCollection~requestModelMapper'
      - 'Task#addCollection~requestModel'
      - 'Task#addCollection~requestContent'
      - 'Task#addCollection~serializationError'
  - uid: 'Task#deleteMethod'
    id: deleteMethod
    parent: Task
    name: 'deleteMethod(jobId, taskId, options, callback)'
    summary: Deletes a task from the specified job.
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: The id of the job from which to delete the task.
        - id: taskId
          type: string
          description: The id of the task to delete.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskDeleteMethodOptions
          type: object
          description: "Additional parameters for\rthe operation"
        - id: options.taskDeleteMethodOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.taskDeleteMethodOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskDeleteMethodOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.taskDeleteMethodOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.taskDeleteMethodOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.taskDeleteMethodOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.taskDeleteMethodOptions.ifModifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has been\rmodified since the specified date/time."
        - id: options.taskDeleteMethodOptions.ifUnmodifiedSince
          type: date
          description: "Specify\rthis header to perform the operation only if the resource has not been\rmodified since the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function deleteMethod(jobId, taskId, options, callback);'
    fullName: 'Task.deleteMethod(jobId, taskId, options, callback)'
    children:
      - 'Task#deleteMethod~client'
      - 'Task#deleteMethod~callback'
      - 'Task#deleteMethod~options'
      - 'Task#deleteMethod~taskDeleteMethodOptions'
      - 'Task#deleteMethod~timeout'
      - 'Task#deleteMethod~clientRequestId'
      - 'Task#deleteMethod~returnClientRequestId'
      - 'Task#deleteMethod~ocpDate'
      - 'Task#deleteMethod~ifMatch'
      - 'Task#deleteMethod~ifNoneMatch'
      - 'Task#deleteMethod~ifModifiedSince'
      - 'Task#deleteMethod~ifUnmodifiedSince'
      - 'Task#deleteMethod~timeout'
      - 'Task#deleteMethod~clientRequestId'
      - 'Task#deleteMethod~returnClientRequestId'
      - 'Task#deleteMethod~ocpDate'
      - 'Task#deleteMethod~ifMatch'
      - 'Task#deleteMethod~ifNoneMatch'
      - 'Task#deleteMethod~ifModifiedSince'
      - 'Task#deleteMethod~ifUnmodifiedSince'
      - 'Task#deleteMethod~requestUrl'
      - 'Task#deleteMethod~requestUrl'
      - 'Task#deleteMethod~requestUrl'
      - 'Task#deleteMethod~queryParameters'
      - 'Task#deleteMethod~requestUrl'
      - 'Task#deleteMethod~regex'
      - 'Task#deleteMethod~requestUrl'
      - 'Task#deleteMethod~httpRequest'
      - 'Task#deleteMethod~headerName'
  - uid: 'Task#get'
    id: get
    parent: Task
    name: 'get(jobId, taskId, options, callback)'
    summary: Gets information about the specified task.
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: The id of the job that contains the task.
        - id: taskId
          type: string
          description: The id of the task to get information about.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskGetOptions
          type: object
          description: "Additional parameters for the\roperation"
        - id: options.taskGetOptions.select
          type: string
          description: An OData $select clause.
        - id: options.taskGetOptions.expand
          type: string
          description: An OData $expand clause.
        - id: options.taskGetOptions.timeout
          type: number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
        - id: options.taskGetOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskGetOptions.returnClientRequestId
          type: boolean
          description: "Whether the\rserver should return the client-request-id identifier in the response."
        - id: options.taskGetOptions.ocpDate
          type: date
          description: "The time the request was\rissued. If not specified, this header will be automatically populated with\rthe current system clock time."
        - id: options.taskGetOptions.ifMatch
          type: string
          description: "An ETag is specified.\rSpecify this header to perform the operation only if the resource's ETag\ris an exact match as specified."
        - id: options.taskGetOptions.ifNoneMatch
          type: string
          description: "An ETag is specified.\rSpecify this header to perform the operation only if the resource's ETag\rdoes not match the specified ETag."
        - id: options.taskGetOptions.ifModifiedSince
          type: date
          description: "Specify this header\rto perform the operation only if the resource has been modified since the\rspecified date/time."
        - id: options.taskGetOptions.ifUnmodifiedSince
          type: date
          description: "Specify this\rheader to perform the operation only if the resource has not been modified\rsince the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CloudTask} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function get(jobId, taskId, options, callback);'
    fullName: 'Task.get(jobId, taskId, options, callback)'
    children:
      - 'Task#get~client'
      - 'Task#get~callback'
      - 'Task#get~options'
      - 'Task#get~taskGetOptions'
      - 'Task#get~select'
      - 'Task#get~expand'
      - 'Task#get~timeout'
      - 'Task#get~clientRequestId'
      - 'Task#get~returnClientRequestId'
      - 'Task#get~ocpDate'
      - 'Task#get~ifMatch'
      - 'Task#get~ifNoneMatch'
      - 'Task#get~ifModifiedSince'
      - 'Task#get~ifUnmodifiedSince'
      - 'Task#get~select'
      - 'Task#get~expand'
      - 'Task#get~timeout'
      - 'Task#get~clientRequestId'
      - 'Task#get~returnClientRequestId'
      - 'Task#get~ocpDate'
      - 'Task#get~ifMatch'
      - 'Task#get~ifNoneMatch'
      - 'Task#get~ifModifiedSince'
      - 'Task#get~ifUnmodifiedSince'
      - 'Task#get~requestUrl'
      - 'Task#get~requestUrl'
      - 'Task#get~requestUrl'
      - 'Task#get~queryParameters'
      - 'Task#get~requestUrl'
      - 'Task#get~regex'
      - 'Task#get~requestUrl'
      - 'Task#get~httpRequest'
      - 'Task#get~headerName'
  - uid: 'Task#update'
    id: update
    parent: Task
    name: 'update(jobId, taskId, options, callback)'
    summary: Updates the properties of the specified task.
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: The id of the job containing the task.
        - id: taskId
          type: string
          description: The id of the task to update.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.constraints
          type: object
          description: "Constraints that apply to this task.\rIf omitted, the task is given the default constraints."
        - id: options.constraints.maxWallClockTime
          type: moment.duration
          description: "The maximum\relapsed time that the task may run, measured from the time the task\rstarts. If the task does not complete within the time limit, the Batch\rservice terminates it."
        - id: options.constraints.retentionTime
          type: moment.duration
          description: "The minimum\rtime to retain the working directory for the task on the compute node\rwhere it ran, from the time it completes execution. After this time, the\rBatch service may delete the working directory and all its contents. The\rdefault is infinite."
        - id: options.constraints.maxTaskRetryCount
          type: number
          description: "The maximum number\rof times the task may be retried. The Batch service retries a task if its\rexit code is nonzero."
        - id: options.taskUpdateOptions
          type: object
          description: "Additional parameters for the\roperation"
        - id: options.taskUpdateOptions.timeout
          type: number
          description: "The maximum time that\rthe server can spend processing the request, in seconds. The default is 30\rseconds."
        - id: options.taskUpdateOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskUpdateOptions.returnClientRequestId
          type: boolean
          description: "Whether\rthe server should return the client-request-id identifier in the response."
        - id: options.taskUpdateOptions.ocpDate
          type: date
          description: "The time the request was\rissued. If not specified, this header will be automatically populated with\rthe current system clock time."
        - id: options.taskUpdateOptions.ifMatch
          type: string
          description: "An ETag is specified.\rSpecify this header to perform the operation only if the resource's ETag\ris an exact match as specified."
        - id: options.taskUpdateOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.taskUpdateOptions.ifModifiedSince
          type: date
          description: "Specify this\rheader to perform the operation only if the resource has been modified\rsince the specified date/time."
        - id: options.taskUpdateOptions.ifUnmodifiedSince
          type: date
          description: "Specify this\rheader to perform the operation only if the resource has not been modified\rsince the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function update(jobId, taskId, options, callback);'
    fullName: 'Task.update(jobId, taskId, options, callback)'
    children:
      - 'Task#update~client'
      - 'Task#update~callback'
      - 'Task#update~options'
      - 'Task#update~constraints'
      - 'Task#update~taskUpdateOptions'
      - 'Task#update~timeout'
      - 'Task#update~clientRequestId'
      - 'Task#update~returnClientRequestId'
      - 'Task#update~ocpDate'
      - 'Task#update~ifMatch'
      - 'Task#update~ifNoneMatch'
      - 'Task#update~ifModifiedSince'
      - 'Task#update~ifUnmodifiedSince'
      - 'Task#update~taskUpdateParameter'
      - 'Task#update~timeout'
      - 'Task#update~clientRequestId'
      - 'Task#update~returnClientRequestId'
      - 'Task#update~ocpDate'
      - 'Task#update~ifMatch'
      - 'Task#update~ifNoneMatch'
      - 'Task#update~ifModifiedSince'
      - 'Task#update~ifUnmodifiedSince'
      - 'Task#update~requestUrl'
      - 'Task#update~requestUrl'
      - 'Task#update~requestUrl'
      - 'Task#update~queryParameters'
      - 'Task#update~requestUrl'
      - 'Task#update~regex'
      - 'Task#update~requestUrl'
      - 'Task#update~httpRequest'
      - 'Task#update~headerName'
      - 'Task#update~requestContent'
      - 'Task#update~requestModel'
      - 'Task#update~requestModelMapper'
      - 'Task#update~requestModel'
      - 'Task#update~requestContent'
      - 'Task#update~serializationError'
  - uid: 'Task#listSubtasks'
    id: listSubtasks
    parent: Task
    name: 'listSubtasks(jobId, taskId, options, callback)'
    summary: "Lists all of the subtasks that are associated with the specified\rmulti-instance task."
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: The id of the job.
        - id: taskId
          type: string
          description: The id of the task.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskListSubtasksOptions
          type: object
          description: "Additional parameters for\rthe operation"
        - id: options.taskListSubtasksOptions.select
          type: string
          description: "An OData $select\rclause."
        - id: options.taskListSubtasksOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.taskListSubtasksOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskListSubtasksOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.taskListSubtasksOptions.ocpDate
          type: date
          description: "The time the\rrequest was issued. If not specified, this header will be automatically\rpopulated with the current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CloudTaskListSubtasksResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listSubtasks(jobId, taskId, options, callback);'
    fullName: 'Task.listSubtasks(jobId, taskId, options, callback)'
    children:
      - 'Task#listSubtasks~client'
      - 'Task#listSubtasks~callback'
      - 'Task#listSubtasks~options'
      - 'Task#listSubtasks~taskListSubtasksOptions'
      - 'Task#listSubtasks~select'
      - 'Task#listSubtasks~timeout'
      - 'Task#listSubtasks~clientRequestId'
      - 'Task#listSubtasks~returnClientRequestId'
      - 'Task#listSubtasks~ocpDate'
      - 'Task#listSubtasks~select'
      - 'Task#listSubtasks~timeout'
      - 'Task#listSubtasks~clientRequestId'
      - 'Task#listSubtasks~returnClientRequestId'
      - 'Task#listSubtasks~ocpDate'
      - 'Task#listSubtasks~requestUrl'
      - 'Task#listSubtasks~requestUrl'
      - 'Task#listSubtasks~requestUrl'
      - 'Task#listSubtasks~queryParameters'
      - 'Task#listSubtasks~requestUrl'
      - 'Task#listSubtasks~regex'
      - 'Task#listSubtasks~requestUrl'
      - 'Task#listSubtasks~httpRequest'
      - 'Task#listSubtasks~headerName'
  - uid: 'Task#terminate'
    id: terminate
    parent: Task
    name: 'terminate(jobId, taskId, options, callback)'
    summary: Terminates the specified task.
    type: Method
    syntax:
      parameters:
        - id: jobId
          type: string
          description: The id of the job containing the task.
        - id: taskId
          type: string
          description: The id of the task to terminate.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskTerminateOptions
          type: object
          description: "Additional parameters for\rthe operation"
        - id: options.taskTerminateOptions.timeout
          type: number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default\ris 30 seconds."
        - id: options.taskTerminateOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskTerminateOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.taskTerminateOptions.ocpDate
          type: date
          description: "The time the request\rwas issued. If not specified, this header will be automatically populated\rwith the current system clock time."
        - id: options.taskTerminateOptions.ifMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag is an exact match as specified."
        - id: options.taskTerminateOptions.ifNoneMatch
          type: string
          description: "An ETag is\rspecified. Specify this header to perform the operation only if the\rresource's ETag does not match the specified ETag."
        - id: options.taskTerminateOptions.ifModifiedSince
          type: date
          description: "Specify this\rheader to perform the operation only if the resource has been modified\rsince the specified date/time."
        - id: options.taskTerminateOptions.ifUnmodifiedSince
          type: date
          description: "Specify this\rheader to perform the operation only if the resource has not been modified\rsince the specified date/time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function terminate(jobId, taskId, options, callback);'
    fullName: 'Task.terminate(jobId, taskId, options, callback)'
    children:
      - 'Task#terminate~client'
      - 'Task#terminate~callback'
      - 'Task#terminate~options'
      - 'Task#terminate~taskTerminateOptions'
      - 'Task#terminate~timeout'
      - 'Task#terminate~clientRequestId'
      - 'Task#terminate~returnClientRequestId'
      - 'Task#terminate~ocpDate'
      - 'Task#terminate~ifMatch'
      - 'Task#terminate~ifNoneMatch'
      - 'Task#terminate~ifModifiedSince'
      - 'Task#terminate~ifUnmodifiedSince'
      - 'Task#terminate~timeout'
      - 'Task#terminate~clientRequestId'
      - 'Task#terminate~returnClientRequestId'
      - 'Task#terminate~ocpDate'
      - 'Task#terminate~ifMatch'
      - 'Task#terminate~ifNoneMatch'
      - 'Task#terminate~ifModifiedSince'
      - 'Task#terminate~ifUnmodifiedSince'
      - 'Task#terminate~requestUrl'
      - 'Task#terminate~requestUrl'
      - 'Task#terminate~requestUrl'
      - 'Task#terminate~queryParameters'
      - 'Task#terminate~requestUrl'
      - 'Task#terminate~regex'
      - 'Task#terminate~requestUrl'
      - 'Task#terminate~httpRequest'
      - 'Task#terminate~headerName'
  - uid: 'Task#listNext'
    id: listNext
    parent: Task
    name: 'listNext(nextPageLink, options, callback)'
    summary: Lists all of the tasks that are associated with the specified job.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.taskListNextOptions
          type: object
          description: "Additional parameters for the\roperation"
        - id: options.taskListNextOptions.clientRequestId
          type: string
          description: "The\rcaller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
        - id: options.taskListNextOptions.returnClientRequestId
          type: boolean
          description: "Whether the server should return the client-request-id identifier in the\rresponse."
        - id: options.taskListNextOptions.ocpDate
          type: date
          description: "The time the request\rwas issued. If not specified, this header will be automatically populated\rwith the current system clock time."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CloudTaskListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listNext(nextPageLink, options, callback);'
    fullName: 'Task.listNext(nextPageLink, options, callback)'
    children:
      - 'Task#listNext~client'
      - 'Task#listNext~callback'
      - 'Task#listNext~options'
      - 'Task#listNext~taskListNextOptions'
      - 'Task#listNext~clientRequestId'
      - 'Task#listNext~returnClientRequestId'
      - 'Task#listNext~ocpDate'
      - 'Task#listNext~clientRequestId'
      - 'Task#listNext~returnClientRequestId'
      - 'Task#listNext~ocpDate'
      - 'Task#listNext~requestUrl'
      - 'Task#listNext~requestUrl'
      - 'Task#listNext~regex'
      - 'Task#listNext~requestUrl'
      - 'Task#listNext~httpRequest'
      - 'Task#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: moment.duration
    name: moment.duration
    fullName: moment.duration
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false

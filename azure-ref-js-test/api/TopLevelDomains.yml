items:
  - uid: TopLevelDomains
    id: TopLevelDomains
    name: TopLevelDomains
    type: Class
    syntax:
      content: TopLevelDomains
    fullName: TopLevelDomains
    children:
      - 'TopLevelDomains#client'
      - 'TopLevelDomains#getGetTopLevelDomains'
      - 'TopLevelDomains#getTopLevelDomain'
      - 'TopLevelDomains#listTopLevelDomainAgreements'
  - uid: 'TopLevelDomains#client'
    id: client
    parent: TopLevelDomains
    name: client
    type: Field
    syntax:
      content: client
    fullName: TopLevelDomains.client
  - uid: 'TopLevelDomains#getGetTopLevelDomains'
    id: getGetTopLevelDomains
    parent: TopLevelDomains
    name: 'getGetTopLevelDomains(options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link TopLevelDomainCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getGetTopLevelDomains(options, options.customHeaders,
        callback);
    fullName: >-
      TopLevelDomains.getGetTopLevelDomains(options, options.customHeaders,
      callback)
    children:
      - 'TopLevelDomains#getGetTopLevelDomains~client'
      - 'TopLevelDomains#getGetTopLevelDomains~callback'
      - 'TopLevelDomains#getGetTopLevelDomains~options'
      - 'TopLevelDomains#getGetTopLevelDomains~requestUrl'
      - 'TopLevelDomains#getGetTopLevelDomains~requestUrl'
      - 'TopLevelDomains#getGetTopLevelDomains~queryParameters'
      - 'TopLevelDomains#getGetTopLevelDomains~requestUrl'
      - 'TopLevelDomains#getGetTopLevelDomains~regex'
      - 'TopLevelDomains#getGetTopLevelDomains~requestUrl'
      - 'TopLevelDomains#getGetTopLevelDomains~httpRequest'
      - 'TopLevelDomains#getGetTopLevelDomains~headerName'
  - uid: 'TopLevelDomains#getTopLevelDomain'
    id: getTopLevelDomain
    parent: TopLevelDomains
    name: 'getTopLevelDomain(name, options, options.customHeaders, callback)'
    type: Method
    syntax:
      parameters:
        - id: name
          type: string
          description: Name of the top level domain
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link TopLevelDomain} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function getTopLevelDomain(name, options, options.customHeaders,
        callback);
    fullName: >-
      TopLevelDomains.getTopLevelDomain(name, options, options.customHeaders,
      callback)
    children:
      - 'TopLevelDomains#getTopLevelDomain~client'
      - 'TopLevelDomains#getTopLevelDomain~callback'
      - 'TopLevelDomains#getTopLevelDomain~options'
      - 'TopLevelDomains#getTopLevelDomain~requestUrl'
      - 'TopLevelDomains#getTopLevelDomain~requestUrl'
      - 'TopLevelDomains#getTopLevelDomain~requestUrl'
      - 'TopLevelDomains#getTopLevelDomain~queryParameters'
      - 'TopLevelDomains#getTopLevelDomain~requestUrl'
      - 'TopLevelDomains#getTopLevelDomain~regex'
      - 'TopLevelDomains#getTopLevelDomain~requestUrl'
      - 'TopLevelDomains#getTopLevelDomain~httpRequest'
      - 'TopLevelDomains#getTopLevelDomain~headerName'
  - uid: 'TopLevelDomains#listTopLevelDomainAgreements'
    id: listTopLevelDomainAgreements
    parent: TopLevelDomains
    name: >-
      listTopLevelDomainAgreements(name, options, options.includePrivacy,
      options.customHeaders, callback)
    type: Method
    syntax:
      parameters:
        - id: name
          type: string
          description: Name of the top level domain
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.includePrivacy
          type: boolean
          description: "If true then the list of\ragreements will inclue agreements for domain privacy as well."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link TldLegalAgreementCollection} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listTopLevelDomainAgreements(name, options,
        options.includePrivacy, options.customHeaders, callback);
    fullName: >-
      TopLevelDomains.listTopLevelDomainAgreements(name, options,
      options.includePrivacy, options.customHeaders, callback)
    children:
      - 'TopLevelDomains#listTopLevelDomainAgreements~client'
      - 'TopLevelDomains#listTopLevelDomainAgreements~callback'
      - 'TopLevelDomains#listTopLevelDomainAgreements~options'
      - 'TopLevelDomains#listTopLevelDomainAgreements~includePrivacy'
      - 'TopLevelDomains#listTopLevelDomainAgreements~agreementOption'
      - 'TopLevelDomains#listTopLevelDomainAgreements~agreementOption'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestUrl'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestUrl'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestUrl'
      - 'TopLevelDomains#listTopLevelDomainAgreements~queryParameters'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestUrl'
      - 'TopLevelDomains#listTopLevelDomainAgreements~regex'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestUrl'
      - 'TopLevelDomains#listTopLevelDomainAgreements~httpRequest'
      - 'TopLevelDomains#listTopLevelDomainAgreements~headerName'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestContent'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestModel'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestModelMapper'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestModel'
      - 'TopLevelDomains#listTopLevelDomainAgreements~requestContent'
      - 'TopLevelDomains#listTopLevelDomainAgreements~serializationError'
references:
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true

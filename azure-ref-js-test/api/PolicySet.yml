items:
  - uid: PolicySet
    id: PolicySet
    name: PolicySet
    type: Class
    syntax:
      content: PolicySet
    fullName: PolicySet
    children:
      - 'PolicySet#client'
      - 'PolicySet#evaluatePolicies'
  - uid: 'PolicySet#client'
    id: client
    parent: PolicySet
    name: client
    type: Field
    syntax:
      content: client
    fullName: PolicySet.client
  - uid: 'PolicySet#evaluatePolicies'
    id: evaluatePolicies
    parent: PolicySet
    name: >-
      evaluatePolicies(resourceGroupName, labName, name,
      evaluatePoliciesRequest, options, callback)
    summary: Evaluates Lab Policy.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: labName
          type: string
          description: The name of the lab.
        - id: name
          type: string
          description: The name of the policy set.
        - id: evaluatePoliciesRequest
          type: object
        - id: evaluatePoliciesRequest.policies
          type: array
          description: Policies to evaluate.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link EvaluatePoliciesResponse} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function evaluatePolicies(resourceGroupName, labName, name,
        evaluatePoliciesRequest, options, callback);
    fullName: >-
      PolicySet.evaluatePolicies(resourceGroupName, labName, name,
      evaluatePoliciesRequest, options, callback)
    children:
      - 'PolicySet#evaluatePolicies~client'
      - 'PolicySet#evaluatePolicies~callback'
      - 'PolicySet#evaluatePolicies~options'
      - 'PolicySet#evaluatePolicies~requestUrl'
      - 'PolicySet#evaluatePolicies~requestUrl'
      - 'PolicySet#evaluatePolicies~requestUrl'
      - 'PolicySet#evaluatePolicies~requestUrl'
      - 'PolicySet#evaluatePolicies~requestUrl'
      - 'PolicySet#evaluatePolicies~queryParameters'
      - 'PolicySet#evaluatePolicies~requestUrl'
      - 'PolicySet#evaluatePolicies~regex'
      - 'PolicySet#evaluatePolicies~requestUrl'
      - 'PolicySet#evaluatePolicies~httpRequest'
      - 'PolicySet#evaluatePolicies~headerName'
      - 'PolicySet#evaluatePolicies~requestContent'
      - 'PolicySet#evaluatePolicies~requestModel'
      - 'PolicySet#evaluatePolicies~requestModelMapper'
      - 'PolicySet#evaluatePolicies~requestModel'
      - 'PolicySet#evaluatePolicies~requestContent'
      - 'PolicySet#evaluatePolicies~serializationError'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: false

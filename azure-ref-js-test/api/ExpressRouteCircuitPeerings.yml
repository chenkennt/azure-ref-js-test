items:
  - uid: ExpressRouteCircuitPeerings
    id: ExpressRouteCircuitPeerings
    name: ExpressRouteCircuitPeerings
    type: Class
    syntax:
      content: ExpressRouteCircuitPeerings
    fullName: ExpressRouteCircuitPeerings
    children:
      - 'ExpressRouteCircuitPeerings#client'
      - 'ExpressRouteCircuitPeerings#deleteMethod'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod'
      - 'ExpressRouteCircuitPeerings#get'
      - 'ExpressRouteCircuitPeerings#createOrUpdate'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate'
      - 'ExpressRouteCircuitPeerings#list'
      - 'ExpressRouteCircuitPeerings#listNext'
  - uid: 'ExpressRouteCircuitPeerings#client'
    id: client
    parent: ExpressRouteCircuitPeerings
    name: client
    type: Field
    syntax:
      content: client
    fullName: ExpressRouteCircuitPeerings.client
  - uid: 'ExpressRouteCircuitPeerings#deleteMethod'
    id: deleteMethod
    parent: ExpressRouteCircuitPeerings
    name: >-
      deleteMethod(resourceGroupName, circuitName, peeringName, options,
      callback)
    summary: "The delete peering operation deletes the specified peering from the\rExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: peeringName
          type: string
          description: The name of the peering.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(resourceGroupName, circuitName, peeringName,
        options, callback);
    fullName: >-
      ExpressRouteCircuitPeerings.deleteMethod(resourceGroupName, circuitName,
      peeringName, options, callback)
    children:
      - 'ExpressRouteCircuitPeerings#deleteMethod~client'
      - 'ExpressRouteCircuitPeerings#deleteMethod~callback'
      - 'ExpressRouteCircuitPeerings#deleteMethod~options'
  - uid: 'ExpressRouteCircuitPeerings#beginDeleteMethod'
    id: beginDeleteMethod
    parent: ExpressRouteCircuitPeerings
    name: >-
      beginDeleteMethod(resourceGroupName, circuitName, peeringName, options,
      callback)
    summary: "The delete peering operation deletes the specified peering from the\rExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: peeringName
          type: string
          description: The name of the peering.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginDeleteMethod(resourceGroupName, circuitName, peeringName,
        options, callback);
    fullName: >-
      ExpressRouteCircuitPeerings.beginDeleteMethod(resourceGroupName,
      circuitName, peeringName, options, callback)
    children:
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~client'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~callback'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~options'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~queryParameters'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~regex'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~httpRequest'
      - 'ExpressRouteCircuitPeerings#beginDeleteMethod~headerName'
  - uid: 'ExpressRouteCircuitPeerings#get'
    id: get
    parent: ExpressRouteCircuitPeerings
    name: 'get(resourceGroupName, circuitName, peeringName, options, callback)'
    summary: "The GET peering operation retrieves the specified authorization from the\rExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: peeringName
          type: string
          description: The name of the peering.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function get(resourceGroupName, circuitName, peeringName, options,
        callback);
    fullName: >-
      ExpressRouteCircuitPeerings.get(resourceGroupName, circuitName,
      peeringName, options, callback)
    children:
      - 'ExpressRouteCircuitPeerings#get~client'
      - 'ExpressRouteCircuitPeerings#get~callback'
      - 'ExpressRouteCircuitPeerings#get~options'
      - 'ExpressRouteCircuitPeerings#get~requestUrl'
      - 'ExpressRouteCircuitPeerings#get~requestUrl'
      - 'ExpressRouteCircuitPeerings#get~requestUrl'
      - 'ExpressRouteCircuitPeerings#get~requestUrl'
      - 'ExpressRouteCircuitPeerings#get~requestUrl'
      - 'ExpressRouteCircuitPeerings#get~queryParameters'
      - 'ExpressRouteCircuitPeerings#get~requestUrl'
      - 'ExpressRouteCircuitPeerings#get~regex'
      - 'ExpressRouteCircuitPeerings#get~requestUrl'
      - 'ExpressRouteCircuitPeerings#get~httpRequest'
      - 'ExpressRouteCircuitPeerings#get~headerName'
  - uid: 'ExpressRouteCircuitPeerings#createOrUpdate'
    id: createOrUpdate
    parent: ExpressRouteCircuitPeerings
    name: >-
      createOrUpdate(resourceGroupName, circuitName, peeringName,
      peeringParameters, options, callback)
    summary: "The Put Pering operation creates/updates an peering in the specified\rExpressRouteCircuits"
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: peeringName
          type: string
          description: The name of the peering.
        - id: peeringParameters
          type: object
          description: "Parameters supplied to the create/update\rExpressRouteCircuit Peering operation"
        - id: peeringParameters.peeringType
          type: string
          description: "Gets or sets PeeringType.\rPossible values include: 'AzurePublicPeering', 'AzurePrivatePeering',\r'MicrosoftPeering'"
        - id: peeringParameters.state
          type: string
          description: "Gets or sets state of Peering.\rPossible values include: 'Disabled', 'Enabled'"
        - id: peeringParameters.azureASN
          type: number
          description: Gets or sets the azure ASN
        - id: peeringParameters.peerASN
          type: number
          description: Gets or sets the peer ASN
        - id: peeringParameters.primaryPeerAddressPrefix
          type: string
          description: "Gets or sets\rthe primary address prefix"
        - id: peeringParameters.secondaryPeerAddressPrefix
          type: string
          description: "Gets or sets\rthe secondary address prefix"
        - id: peeringParameters.primaryAzurePort
          type: string
          description: "Gets or sets the\rprimary port"
        - id: peeringParameters.secondaryAzurePort
          type: string
          description: "Gets or sets the\rsecondary port"
        - id: peeringParameters.sharedKey
          type: string
          description: Gets or sets the shared key
        - id: peeringParameters.vlanId
          type: number
          description: Gets or sets the vlan id
        - id: peeringParameters.microsoftPeeringConfig
          type: object
          description: "Gets or sets the\rmircosoft peering config"
        - id: peeringParameters.microsoftPeeringConfig.advertisedPublicPrefixes
          type: array
          description: "Gets\ror sets the reference of AdvertisedPublicPrefixes"
        - id: >-
            peeringParameters.microsoftPeeringConfig.advertisedPublicPrefixesState
          type: string
          description: "Gets or sets AdvertisedPublicPrefixState of the Peering resource .\rPossible values include: 'NotConfigured', 'Configuring', 'Configured',\r'ValidationNeeded'"
        - id: peeringParameters.microsoftPeeringConfig.customerASN
          type: number
          description: "Gets\ror Sets CustomerAsn of the peering."
        - id: peeringParameters.microsoftPeeringConfig.routingRegistryName
          type: string
          description: "Gets or\rSets RoutingRegistryName of the config."
        - id: peeringParameters.stats
          type: object
          description: Gets or peering stats
        - id: peeringParameters.stats.primarybytesIn
          type: number
          description: "Gets BytesIn of\rthe peering."
        - id: peeringParameters.stats.primarybytesOut
          type: number
          description: "Gets BytesOut of\rthe peering."
        - id: peeringParameters.stats.secondarybytesIn
          type: number
          description: "Gets BytesIn of\rthe peering."
        - id: peeringParameters.stats.secondarybytesOut
          type: number
          description: "Gets BytesOut\rof the peering."
        - id: peeringParameters.provisioningState
          type: string
          description: "Gets or sets\rProvisioning state of the PublicIP resource Updating/Deleting/Failed"
        - id: peeringParameters.name
          type: string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource"
        - id: peeringParameters.etag
          type: string
          description: "A unique read-only string that\rchanges whenever the resource is updated"
        - id: peeringParameters.id
          type: string
          description: Resource Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdate(resourceGroupName, circuitName, peeringName,
        peeringParameters, options, callback);
    fullName: >-
      ExpressRouteCircuitPeerings.createOrUpdate(resourceGroupName, circuitName,
      peeringName, peeringParameters, options, callback)
    children:
      - 'ExpressRouteCircuitPeerings#createOrUpdate~client'
      - 'ExpressRouteCircuitPeerings#createOrUpdate~callback'
      - 'ExpressRouteCircuitPeerings#createOrUpdate~options'
  - uid: 'ExpressRouteCircuitPeerings#beginCreateOrUpdate'
    id: beginCreateOrUpdate
    parent: ExpressRouteCircuitPeerings
    name: >-
      beginCreateOrUpdate(resourceGroupName, circuitName, peeringName,
      peeringParameters, options, callback)
    summary: "The Put Pering operation creates/updates an peering in the specified\rExpressRouteCircuits"
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the express route circuit.
        - id: peeringName
          type: string
          description: The name of the peering.
        - id: peeringParameters
          type: object
          description: "Parameters supplied to the create/update\rExpressRouteCircuit Peering operation"
        - id: peeringParameters.peeringType
          type: string
          description: "Gets or sets PeeringType.\rPossible values include: 'AzurePublicPeering', 'AzurePrivatePeering',\r'MicrosoftPeering'"
        - id: peeringParameters.state
          type: string
          description: "Gets or sets state of Peering.\rPossible values include: 'Disabled', 'Enabled'"
        - id: peeringParameters.azureASN
          type: number
          description: Gets or sets the azure ASN
        - id: peeringParameters.peerASN
          type: number
          description: Gets or sets the peer ASN
        - id: peeringParameters.primaryPeerAddressPrefix
          type: string
          description: "Gets or sets\rthe primary address prefix"
        - id: peeringParameters.secondaryPeerAddressPrefix
          type: string
          description: "Gets or sets\rthe secondary address prefix"
        - id: peeringParameters.primaryAzurePort
          type: string
          description: "Gets or sets the\rprimary port"
        - id: peeringParameters.secondaryAzurePort
          type: string
          description: "Gets or sets the\rsecondary port"
        - id: peeringParameters.sharedKey
          type: string
          description: Gets or sets the shared key
        - id: peeringParameters.vlanId
          type: number
          description: Gets or sets the vlan id
        - id: peeringParameters.microsoftPeeringConfig
          type: object
          description: "Gets or sets the\rmircosoft peering config"
        - id: peeringParameters.microsoftPeeringConfig.advertisedPublicPrefixes
          type: array
          description: "Gets\ror sets the reference of AdvertisedPublicPrefixes"
        - id: >-
            peeringParameters.microsoftPeeringConfig.advertisedPublicPrefixesState
          type: string
          description: "Gets or sets AdvertisedPublicPrefixState of the Peering resource .\rPossible values include: 'NotConfigured', 'Configuring', 'Configured',\r'ValidationNeeded'"
        - id: peeringParameters.microsoftPeeringConfig.customerASN
          type: number
          description: "Gets\ror Sets CustomerAsn of the peering."
        - id: peeringParameters.microsoftPeeringConfig.routingRegistryName
          type: string
          description: "Gets or\rSets RoutingRegistryName of the config."
        - id: peeringParameters.stats
          type: object
          description: Gets or peering stats
        - id: peeringParameters.stats.primarybytesIn
          type: number
          description: "Gets BytesIn of\rthe peering."
        - id: peeringParameters.stats.primarybytesOut
          type: number
          description: "Gets BytesOut of\rthe peering."
        - id: peeringParameters.stats.secondarybytesIn
          type: number
          description: "Gets BytesIn of\rthe peering."
        - id: peeringParameters.stats.secondarybytesOut
          type: number
          description: "Gets BytesOut\rof the peering."
        - id: peeringParameters.provisioningState
          type: string
          description: "Gets or sets\rProvisioning state of the PublicIP resource Updating/Deleting/Failed"
        - id: peeringParameters.name
          type: string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource"
        - id: peeringParameters.etag
          type: string
          description: "A unique read-only string that\rchanges whenever the resource is updated"
        - id: peeringParameters.id
          type: string
          description: Resource Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdate(resourceGroupName, circuitName,
        peeringName, peeringParameters, options, callback);
    fullName: >-
      ExpressRouteCircuitPeerings.beginCreateOrUpdate(resourceGroupName,
      circuitName, peeringName, peeringParameters, options, callback)
    children:
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~client'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~callback'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~options'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~queryParameters'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~regex'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestUrl'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~httpRequest'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~headerName'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestContent'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestModel'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestModelMapper'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestModel'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~requestContent'
      - 'ExpressRouteCircuitPeerings#beginCreateOrUpdate~serializationError'
  - uid: 'ExpressRouteCircuitPeerings#list'
    id: list
    parent: ExpressRouteCircuitPeerings
    name: 'list(resourceGroupName, circuitName, options, callback)'
    summary: "The List peering operation retrieves all the peerings in an\rExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: circuitName
          type: string
          description: The name of the curcuit.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitPeeringListResult} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(resourceGroupName, circuitName, options, callback);'
    fullName: >-
      ExpressRouteCircuitPeerings.list(resourceGroupName, circuitName, options,
      callback)
    children:
      - 'ExpressRouteCircuitPeerings#list~client'
      - 'ExpressRouteCircuitPeerings#list~callback'
      - 'ExpressRouteCircuitPeerings#list~options'
      - 'ExpressRouteCircuitPeerings#list~requestUrl'
      - 'ExpressRouteCircuitPeerings#list~requestUrl'
      - 'ExpressRouteCircuitPeerings#list~requestUrl'
      - 'ExpressRouteCircuitPeerings#list~requestUrl'
      - 'ExpressRouteCircuitPeerings#list~queryParameters'
      - 'ExpressRouteCircuitPeerings#list~requestUrl'
      - 'ExpressRouteCircuitPeerings#list~regex'
      - 'ExpressRouteCircuitPeerings#list~requestUrl'
      - 'ExpressRouteCircuitPeerings#list~httpRequest'
      - 'ExpressRouteCircuitPeerings#list~headerName'
  - uid: 'ExpressRouteCircuitPeerings#listNext'
    id: listNext
    parent: ExpressRouteCircuitPeerings
    name: 'listNext(nextPageLink, options, callback)'
    summary: "The List peering operation retrieves all the peerings in an\rExpressRouteCircuit."
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link ExpressRouteCircuitPeeringListResult} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listNext(nextPageLink, options, callback);'
    fullName: 'ExpressRouteCircuitPeerings.listNext(nextPageLink, options, callback)'
    children:
      - 'ExpressRouteCircuitPeerings#listNext~client'
      - 'ExpressRouteCircuitPeerings#listNext~callback'
      - 'ExpressRouteCircuitPeerings#listNext~options'
      - 'ExpressRouteCircuitPeerings#listNext~requestUrl'
      - 'ExpressRouteCircuitPeerings#listNext~requestUrl'
      - 'ExpressRouteCircuitPeerings#listNext~regex'
      - 'ExpressRouteCircuitPeerings#listNext~requestUrl'
      - 'ExpressRouteCircuitPeerings#listNext~httpRequest'
      - 'ExpressRouteCircuitPeerings#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true

items:
  - uid: Subnets
    id: Subnets
    name: Subnets
    type: Class
    syntax:
      content: Subnets
    fullName: Subnets
    children:
      - 'Subnets#client'
      - 'Subnets#deleteMethod'
      - 'Subnets#beginDeleteMethod'
      - 'Subnets#get'
      - 'Subnets#createOrUpdate'
      - 'Subnets#beginCreateOrUpdate'
      - 'Subnets#list'
      - 'Subnets#listNext'
  - uid: 'Subnets#client'
    id: client
    parent: Subnets
    name: client
    type: Field
    syntax:
      content: client
    fullName: Subnets.client
  - uid: 'Subnets#deleteMethod'
    id: deleteMethod
    parent: Subnets
    name: >-
      deleteMethod(resourceGroupName, virtualNetworkName, subnetName, options,
      options.customHeaders, callback)
    summary: The delete subnet operation deletes the specified subnet.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: subnetName
          type: string
          description: The name of the subnet.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(resourceGroupName, virtualNetworkName, subnetName,
        options, options.customHeaders, callback);
    fullName: >-
      Subnets.deleteMethod(resourceGroupName, virtualNetworkName, subnetName,
      options, options.customHeaders, callback)
    children:
      - 'Subnets#deleteMethod~client'
      - 'Subnets#deleteMethod~callback'
      - 'Subnets#deleteMethod~options'
  - uid: 'Subnets#beginDeleteMethod'
    id: beginDeleteMethod
    parent: Subnets
    name: >-
      beginDeleteMethod(resourceGroupName, virtualNetworkName, subnetName,
      options, options.customHeaders, callback)
    summary: The delete subnet operation deletes the specified subnet.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: subnetName
          type: string
          description: The name of the subnet.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginDeleteMethod(resourceGroupName, virtualNetworkName,
        subnetName, options, options.customHeaders, callback);
    fullName: >-
      Subnets.beginDeleteMethod(resourceGroupName, virtualNetworkName,
      subnetName, options, options.customHeaders, callback)
    children:
      - 'Subnets#beginDeleteMethod~client'
      - 'Subnets#beginDeleteMethod~callback'
      - 'Subnets#beginDeleteMethod~options'
      - 'Subnets#beginDeleteMethod~requestUrl'
      - 'Subnets#beginDeleteMethod~requestUrl'
      - 'Subnets#beginDeleteMethod~requestUrl'
      - 'Subnets#beginDeleteMethod~requestUrl'
      - 'Subnets#beginDeleteMethod~requestUrl'
      - 'Subnets#beginDeleteMethod~queryParameters'
      - 'Subnets#beginDeleteMethod~requestUrl'
      - 'Subnets#beginDeleteMethod~regex'
      - 'Subnets#beginDeleteMethod~requestUrl'
      - 'Subnets#beginDeleteMethod~httpRequest'
      - 'Subnets#beginDeleteMethod~headerName'
  - uid: 'Subnets#get'
    id: get
    parent: Subnets
    name: >-
      get(resourceGroupName, virtualNetworkName, subnetName, options,
      options.expand, options.customHeaders, callback)
    summary: The Get subnet operation retreives information about the specified subnet.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: subnetName
          type: string
          description: The name of the subnet.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.expand
          type: string
          description: expand references resources.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Subnet} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function get(resourceGroupName, virtualNetworkName, subnetName, options,
        options.expand, options.customHeaders, callback);
    fullName: >-
      Subnets.get(resourceGroupName, virtualNetworkName, subnetName, options,
      options.expand, options.customHeaders, callback)
    children:
      - 'Subnets#get~client'
      - 'Subnets#get~callback'
      - 'Subnets#get~options'
      - 'Subnets#get~expand'
      - 'Subnets#get~requestUrl'
      - 'Subnets#get~requestUrl'
      - 'Subnets#get~requestUrl'
      - 'Subnets#get~requestUrl'
      - 'Subnets#get~requestUrl'
      - 'Subnets#get~queryParameters'
      - 'Subnets#get~requestUrl'
      - 'Subnets#get~regex'
      - 'Subnets#get~requestUrl'
      - 'Subnets#get~httpRequest'
      - 'Subnets#get~headerName'
  - uid: 'Subnets#createOrUpdate'
    id: createOrUpdate
    parent: Subnets
    name: >-
      createOrUpdate(resourceGroupName, virtualNetworkName, subnetName,
      subnetParameters, subnetParameters.addressPrefix,
      subnetParameters.networkSecurityGroup,
      subnetParameters.networkSecurityGroup.securityRules,
      subnetParameters.networkSecurityGroup.defaultSecurityRules,
      subnetParameters.networkSecurityGroup.networkInterfaces,
      subnetParameters.networkSecurityGroup.subnets,
      subnetParameters.networkSecurityGroup.resourceGuid,
      subnetParameters.networkSecurityGroup.provisioningState,
      subnetParameters.networkSecurityGroup.etag,
      subnetParameters.networkSecurityGroup.id,
      subnetParameters.networkSecurityGroup.location,
      subnetParameters.networkSecurityGroup.tags, subnetParameters.routeTable,
      subnetParameters.routeTable.routes, subnetParameters.routeTable.subnets,
      subnetParameters.routeTable.provisioningState,
      subnetParameters.routeTable.etag, subnetParameters.routeTable.id,
      subnetParameters.routeTable.location, subnetParameters.routeTable.tags,
      subnetParameters.ipConfigurations, subnetParameters.provisioningState,
      subnetParameters.name, subnetParameters.etag, subnetParameters.id,
      options, options.customHeaders, callback)
    summary: "The Put Subnet operation creates/updates a subnet in thespecified virtual\rnetwork"
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: subnetName
          type: string
          description: The name of the subnet.
        - id: subnetParameters
          type: object
          description: "Parameters supplied to the create/update\rSubnet operation"
        - id: subnetParameters.addressPrefix
          type: string
          description: "Gets or sets Address\rprefix for the subnet."
        - id: subnetParameters.networkSecurityGroup
          type: object
          description: "Gets or sets the\rreference of the NetworkSecurityGroup resource"
        - id: subnetParameters.networkSecurityGroup.securityRules
          type: array
          description: "Gets\ror sets Security rules of network security group"
        - id: subnetParameters.networkSecurityGroup.defaultSecurityRules
          type: array
          description: Gets or sets Default security rules of network security group
        - id: subnetParameters.networkSecurityGroup.networkInterfaces
          type: array
          description: Gets collection of references to Network Interfaces
        - id: subnetParameters.networkSecurityGroup.subnets
          type: array
          description: "Gets\rcollection of references to subnets"
        - id: subnetParameters.networkSecurityGroup.resourceGuid
          type: string
          description: "Gets\ror sets resource guid property of the network security group resource"
        - id: subnetParameters.networkSecurityGroup.provisioningState
          type: string
          description: "Gets or sets Provisioning state of the PublicIP resource\rUpdating/Deleting/Failed"
        - id: subnetParameters.networkSecurityGroup.etag
          type: string
          description: "Gets a unique\rread-only string that changes whenever the resource is updated"
        - id: subnetParameters.networkSecurityGroup.id
          type: string
          description: Resource Id
        - id: subnetParameters.networkSecurityGroup.location
          type: string
          description: "Resource\rlocation"
        - id: subnetParameters.networkSecurityGroup.tags
          type: object
          description: Resource tags
        - id: subnetParameters.routeTable
          type: object
          description: "Gets or sets the reference of\rthe RouteTable resource"
        - id: subnetParameters.routeTable.routes
          type: array
          description: "Gets or sets Routes in\ra Route Table"
        - id: subnetParameters.routeTable.subnets
          type: array
          description: "Gets collection of\rreferences to subnets"
        - id: subnetParameters.routeTable.provisioningState
          type: string
          description: "Gets or\rsets Provisioning state of the resource Updating/Deleting/Failed"
        - id: subnetParameters.routeTable.etag
          type: string
          description: "Gets a unique read-only\rstring that changes whenever the resource is updated"
        - id: subnetParameters.routeTable.id
          type: string
          description: Resource Id
        - id: subnetParameters.routeTable.location
          type: string
          description: Resource location
        - id: subnetParameters.routeTable.tags
          type: object
          description: Resource tags
        - id: subnetParameters.ipConfigurations
          type: array
          description: "Gets array of references\rto the network interface IP configurations using subnet"
        - id: subnetParameters.provisioningState
          type: string
          description: "Gets or sets\rProvisioning state of the PublicIP resource Updating/Deleting/Failed"
        - id: subnetParameters.name
          type: string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource"
        - id: subnetParameters.etag
          type: string
          description: "A unique read-only string that\rchanges whenever the resource is updated"
        - id: subnetParameters.id
          type: string
          description: Resource Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Subnet} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdate(resourceGroupName, virtualNetworkName,
        subnetName, subnetParameters, subnetParameters.addressPrefix,
        subnetParameters.networkSecurityGroup,
        subnetParameters.networkSecurityGroup.securityRules,
        subnetParameters.networkSecurityGroup.defaultSecurityRules,
        subnetParameters.networkSecurityGroup.networkInterfaces,
        subnetParameters.networkSecurityGroup.subnets,
        subnetParameters.networkSecurityGroup.resourceGuid,
        subnetParameters.networkSecurityGroup.provisioningState,
        subnetParameters.networkSecurityGroup.etag,
        subnetParameters.networkSecurityGroup.id,
        subnetParameters.networkSecurityGroup.location,
        subnetParameters.networkSecurityGroup.tags, subnetParameters.routeTable,
        subnetParameters.routeTable.routes, subnetParameters.routeTable.subnets,
        subnetParameters.routeTable.provisioningState,
        subnetParameters.routeTable.etag, subnetParameters.routeTable.id,
        subnetParameters.routeTable.location, subnetParameters.routeTable.tags,
        subnetParameters.ipConfigurations, subnetParameters.provisioningState,
        subnetParameters.name, subnetParameters.etag, subnetParameters.id,
        options, options.customHeaders, callback);
    fullName: >-
      Subnets.createOrUpdate(resourceGroupName, virtualNetworkName, subnetName,
      subnetParameters, subnetParameters.addressPrefix,
      subnetParameters.networkSecurityGroup,
      subnetParameters.networkSecurityGroup.securityRules,
      subnetParameters.networkSecurityGroup.defaultSecurityRules,
      subnetParameters.networkSecurityGroup.networkInterfaces,
      subnetParameters.networkSecurityGroup.subnets,
      subnetParameters.networkSecurityGroup.resourceGuid,
      subnetParameters.networkSecurityGroup.provisioningState,
      subnetParameters.networkSecurityGroup.etag,
      subnetParameters.networkSecurityGroup.id,
      subnetParameters.networkSecurityGroup.location,
      subnetParameters.networkSecurityGroup.tags, subnetParameters.routeTable,
      subnetParameters.routeTable.routes, subnetParameters.routeTable.subnets,
      subnetParameters.routeTable.provisioningState,
      subnetParameters.routeTable.etag, subnetParameters.routeTable.id,
      subnetParameters.routeTable.location, subnetParameters.routeTable.tags,
      subnetParameters.ipConfigurations, subnetParameters.provisioningState,
      subnetParameters.name, subnetParameters.etag, subnetParameters.id,
      options, options.customHeaders, callback)
    children:
      - 'Subnets#createOrUpdate~client'
      - 'Subnets#createOrUpdate~callback'
      - 'Subnets#createOrUpdate~options'
  - uid: 'Subnets#beginCreateOrUpdate'
    id: beginCreateOrUpdate
    parent: Subnets
    name: >-
      beginCreateOrUpdate(resourceGroupName, virtualNetworkName, subnetName,
      subnetParameters, subnetParameters.addressPrefix,
      subnetParameters.networkSecurityGroup,
      subnetParameters.networkSecurityGroup.securityRules,
      subnetParameters.networkSecurityGroup.defaultSecurityRules,
      subnetParameters.networkSecurityGroup.networkInterfaces,
      subnetParameters.networkSecurityGroup.subnets,
      subnetParameters.networkSecurityGroup.resourceGuid,
      subnetParameters.networkSecurityGroup.provisioningState,
      subnetParameters.networkSecurityGroup.etag,
      subnetParameters.networkSecurityGroup.id,
      subnetParameters.networkSecurityGroup.location,
      subnetParameters.networkSecurityGroup.tags, subnetParameters.routeTable,
      subnetParameters.routeTable.routes, subnetParameters.routeTable.subnets,
      subnetParameters.routeTable.provisioningState,
      subnetParameters.routeTable.etag, subnetParameters.routeTable.id,
      subnetParameters.routeTable.location, subnetParameters.routeTable.tags,
      subnetParameters.ipConfigurations, subnetParameters.provisioningState,
      subnetParameters.name, subnetParameters.etag, subnetParameters.id,
      options, options.customHeaders, callback)
    summary: "The Put Subnet operation creates/updates a subnet in thespecified virtual\rnetwork"
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: subnetName
          type: string
          description: The name of the subnet.
        - id: subnetParameters
          type: object
          description: "Parameters supplied to the create/update\rSubnet operation"
        - id: subnetParameters.addressPrefix
          type: string
          description: "Gets or sets Address\rprefix for the subnet."
        - id: subnetParameters.networkSecurityGroup
          type: object
          description: "Gets or sets the\rreference of the NetworkSecurityGroup resource"
        - id: subnetParameters.networkSecurityGroup.securityRules
          type: array
          description: "Gets\ror sets Security rules of network security group"
        - id: subnetParameters.networkSecurityGroup.defaultSecurityRules
          type: array
          description: Gets or sets Default security rules of network security group
        - id: subnetParameters.networkSecurityGroup.networkInterfaces
          type: array
          description: Gets collection of references to Network Interfaces
        - id: subnetParameters.networkSecurityGroup.subnets
          type: array
          description: "Gets\rcollection of references to subnets"
        - id: subnetParameters.networkSecurityGroup.resourceGuid
          type: string
          description: "Gets\ror sets resource guid property of the network security group resource"
        - id: subnetParameters.networkSecurityGroup.provisioningState
          type: string
          description: "Gets or sets Provisioning state of the PublicIP resource\rUpdating/Deleting/Failed"
        - id: subnetParameters.networkSecurityGroup.etag
          type: string
          description: "Gets a unique\rread-only string that changes whenever the resource is updated"
        - id: subnetParameters.networkSecurityGroup.id
          type: string
          description: Resource Id
        - id: subnetParameters.networkSecurityGroup.location
          type: string
          description: "Resource\rlocation"
        - id: subnetParameters.networkSecurityGroup.tags
          type: object
          description: Resource tags
        - id: subnetParameters.routeTable
          type: object
          description: "Gets or sets the reference of\rthe RouteTable resource"
        - id: subnetParameters.routeTable.routes
          type: array
          description: "Gets or sets Routes in\ra Route Table"
        - id: subnetParameters.routeTable.subnets
          type: array
          description: "Gets collection of\rreferences to subnets"
        - id: subnetParameters.routeTable.provisioningState
          type: string
          description: "Gets or\rsets Provisioning state of the resource Updating/Deleting/Failed"
        - id: subnetParameters.routeTable.etag
          type: string
          description: "Gets a unique read-only\rstring that changes whenever the resource is updated"
        - id: subnetParameters.routeTable.id
          type: string
          description: Resource Id
        - id: subnetParameters.routeTable.location
          type: string
          description: Resource location
        - id: subnetParameters.routeTable.tags
          type: object
          description: Resource tags
        - id: subnetParameters.ipConfigurations
          type: array
          description: "Gets array of references\rto the network interface IP configurations using subnet"
        - id: subnetParameters.provisioningState
          type: string
          description: "Gets or sets\rProvisioning state of the PublicIP resource Updating/Deleting/Failed"
        - id: subnetParameters.name
          type: string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource"
        - id: subnetParameters.etag
          type: string
          description: "A unique read-only string that\rchanges whenever the resource is updated"
        - id: subnetParameters.id
          type: string
          description: Resource Id
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link Subnet} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdate(resourceGroupName, virtualNetworkName,
        subnetName, subnetParameters, subnetParameters.addressPrefix,
        subnetParameters.networkSecurityGroup,
        subnetParameters.networkSecurityGroup.securityRules,
        subnetParameters.networkSecurityGroup.defaultSecurityRules,
        subnetParameters.networkSecurityGroup.networkInterfaces,
        subnetParameters.networkSecurityGroup.subnets,
        subnetParameters.networkSecurityGroup.resourceGuid,
        subnetParameters.networkSecurityGroup.provisioningState,
        subnetParameters.networkSecurityGroup.etag,
        subnetParameters.networkSecurityGroup.id,
        subnetParameters.networkSecurityGroup.location,
        subnetParameters.networkSecurityGroup.tags, subnetParameters.routeTable,
        subnetParameters.routeTable.routes, subnetParameters.routeTable.subnets,
        subnetParameters.routeTable.provisioningState,
        subnetParameters.routeTable.etag, subnetParameters.routeTable.id,
        subnetParameters.routeTable.location, subnetParameters.routeTable.tags,
        subnetParameters.ipConfigurations, subnetParameters.provisioningState,
        subnetParameters.name, subnetParameters.etag, subnetParameters.id,
        options, options.customHeaders, callback);
    fullName: >-
      Subnets.beginCreateOrUpdate(resourceGroupName, virtualNetworkName,
      subnetName, subnetParameters, subnetParameters.addressPrefix,
      subnetParameters.networkSecurityGroup,
      subnetParameters.networkSecurityGroup.securityRules,
      subnetParameters.networkSecurityGroup.defaultSecurityRules,
      subnetParameters.networkSecurityGroup.networkInterfaces,
      subnetParameters.networkSecurityGroup.subnets,
      subnetParameters.networkSecurityGroup.resourceGuid,
      subnetParameters.networkSecurityGroup.provisioningState,
      subnetParameters.networkSecurityGroup.etag,
      subnetParameters.networkSecurityGroup.id,
      subnetParameters.networkSecurityGroup.location,
      subnetParameters.networkSecurityGroup.tags, subnetParameters.routeTable,
      subnetParameters.routeTable.routes, subnetParameters.routeTable.subnets,
      subnetParameters.routeTable.provisioningState,
      subnetParameters.routeTable.etag, subnetParameters.routeTable.id,
      subnetParameters.routeTable.location, subnetParameters.routeTable.tags,
      subnetParameters.ipConfigurations, subnetParameters.provisioningState,
      subnetParameters.name, subnetParameters.etag, subnetParameters.id,
      options, options.customHeaders, callback)
    children:
      - 'Subnets#beginCreateOrUpdate~client'
      - 'Subnets#beginCreateOrUpdate~callback'
      - 'Subnets#beginCreateOrUpdate~options'
      - 'Subnets#beginCreateOrUpdate~requestUrl'
      - 'Subnets#beginCreateOrUpdate~requestUrl'
      - 'Subnets#beginCreateOrUpdate~requestUrl'
      - 'Subnets#beginCreateOrUpdate~requestUrl'
      - 'Subnets#beginCreateOrUpdate~requestUrl'
      - 'Subnets#beginCreateOrUpdate~queryParameters'
      - 'Subnets#beginCreateOrUpdate~requestUrl'
      - 'Subnets#beginCreateOrUpdate~regex'
      - 'Subnets#beginCreateOrUpdate~requestUrl'
      - 'Subnets#beginCreateOrUpdate~httpRequest'
      - 'Subnets#beginCreateOrUpdate~headerName'
      - 'Subnets#beginCreateOrUpdate~requestContent'
      - 'Subnets#beginCreateOrUpdate~requestModel'
      - 'Subnets#beginCreateOrUpdate~requestModelMapper'
      - 'Subnets#beginCreateOrUpdate~requestModel'
      - 'Subnets#beginCreateOrUpdate~requestContent'
      - 'Subnets#beginCreateOrUpdate~serializationError'
  - uid: 'Subnets#list'
    id: list
    parent: Subnets
    name: >-
      list(resourceGroupName, virtualNetworkName, options,
      options.customHeaders, callback)
    summary: The List subnets opertion retrieves all the subnets in a virtual network.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: virtualNetworkName
          type: string
          description: The name of the virtual network.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SubnetListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function list(resourceGroupName, virtualNetworkName, options,
        options.customHeaders, callback);
    fullName: >-
      Subnets.list(resourceGroupName, virtualNetworkName, options,
      options.customHeaders, callback)
    children:
      - 'Subnets#list~client'
      - 'Subnets#list~callback'
      - 'Subnets#list~options'
      - 'Subnets#list~requestUrl'
      - 'Subnets#list~requestUrl'
      - 'Subnets#list~requestUrl'
      - 'Subnets#list~requestUrl'
      - 'Subnets#list~queryParameters'
      - 'Subnets#list~requestUrl'
      - 'Subnets#list~regex'
      - 'Subnets#list~requestUrl'
      - 'Subnets#list~httpRequest'
      - 'Subnets#list~headerName'
  - uid: 'Subnets#listNext'
    id: listNext
    parent: Subnets
    name: 'listNext(nextPageLink, options, options.customHeaders, callback)'
    summary: The List subnets opertion retrieves all the subnets in a virtual network.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SubnetListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function listNext(nextPageLink, options, options.customHeaders,
        callback);
    fullName: 'Subnets.listNext(nextPageLink, options, options.customHeaders, callback)'
    children:
      - 'Subnets#listNext~client'
      - 'Subnets#listNext~callback'
      - 'Subnets#listNext~options'
      - 'Subnets#listNext~requestUrl'
      - 'Subnets#listNext~requestUrl'
      - 'Subnets#listNext~regex'
      - 'Subnets#listNext~requestUrl'
      - 'Subnets#listNext~httpRequest'
      - 'Subnets#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: array
    name: array
    fullName: array
    isExternal: true

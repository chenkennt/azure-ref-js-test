items:
  - uid: Deployments
    id: Deployments
    name: Deployments
    type: Class
    syntax:
      content: Deployments
    fullName: Deployments
    children:
      - 'Deployments#client'
      - 'Deployments#deleteMethod'
      - 'Deployments#beginDeleteMethod'
      - 'Deployments#checkExistence'
      - 'Deployments#createOrUpdate'
      - 'Deployments#beginCreateOrUpdate'
      - 'Deployments#get'
      - 'Deployments#cancel'
      - 'Deployments#validate'
      - 'Deployments#exportTemplate'
      - 'Deployments#list'
      - 'Deployments#listNext'
  - uid: 'Deployments#client'
    id: client
    parent: Deployments
    name: client
    type: Field
    syntax:
      content: client
    fullName: Deployments.client
  - uid: 'Deployments#deleteMethod'
    id: deleteMethod
    parent: Deployments
    name: 'deleteMethod(resourceGroupName, deploymentName, options, callback)'
    summary: Delete deployment.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment to be deleted.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function deleteMethod(resourceGroupName, deploymentName, options,
        callback);
    fullName: >-
      Deployments.deleteMethod(resourceGroupName, deploymentName, options,
      callback)
    children:
      - 'Deployments#deleteMethod~client'
      - 'Deployments#deleteMethod~callback'
      - 'Deployments#deleteMethod~options'
  - uid: 'Deployments#beginDeleteMethod'
    id: beginDeleteMethod
    parent: Deployments
    name: 'beginDeleteMethod(resourceGroupName, deploymentName, options, callback)'
    summary: Delete deployment.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment to be deleted.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginDeleteMethod(resourceGroupName, deploymentName, options,
        callback);
    fullName: >-
      Deployments.beginDeleteMethod(resourceGroupName, deploymentName, options,
      callback)
    children:
      - 'Deployments#beginDeleteMethod~client'
      - 'Deployments#beginDeleteMethod~callback'
      - 'Deployments#beginDeleteMethod~options'
      - 'Deployments#beginDeleteMethod~requestUrl'
      - 'Deployments#beginDeleteMethod~requestUrl'
      - 'Deployments#beginDeleteMethod~requestUrl'
      - 'Deployments#beginDeleteMethod~requestUrl'
      - 'Deployments#beginDeleteMethod~queryParameters'
      - 'Deployments#beginDeleteMethod~requestUrl'
      - 'Deployments#beginDeleteMethod~regex'
      - 'Deployments#beginDeleteMethod~requestUrl'
      - 'Deployments#beginDeleteMethod~httpRequest'
      - 'Deployments#beginDeleteMethod~headerName'
  - uid: 'Deployments#checkExistence'
    id: checkExistence
    parent: Deployments
    name: 'checkExistence(resourceGroupName, deploymentName, options, callback)'
    summary: Checks whether deployment exists.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group to check.\rThe name is case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function checkExistence(resourceGroupName, deploymentName, options,
        callback);
    fullName: >-
      Deployments.checkExistence(resourceGroupName, deploymentName, options,
      callback)
    children:
      - 'Deployments#checkExistence~client'
      - 'Deployments#checkExistence~callback'
      - 'Deployments#checkExistence~options'
      - 'Deployments#checkExistence~requestUrl'
      - 'Deployments#checkExistence~requestUrl'
      - 'Deployments#checkExistence~requestUrl'
      - 'Deployments#checkExistence~requestUrl'
      - 'Deployments#checkExistence~queryParameters'
      - 'Deployments#checkExistence~requestUrl'
      - 'Deployments#checkExistence~regex'
      - 'Deployments#checkExistence~requestUrl'
      - 'Deployments#checkExistence~httpRequest'
      - 'Deployments#checkExistence~headerName'
  - uid: 'Deployments#createOrUpdate'
    id: createOrUpdate
    parent: Deployments
    name: >-
      createOrUpdate(resourceGroupName, deploymentName, parameters, options,
      callback)
    summary: Create a named template deployment using a template.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment.
        - id: parameters
          type: object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type: object
          description: "Gets or sets the deployment\rproperties."
        - id: parameters.properties.template
          type: object
          description: "Gets or sets the template\rcontent. Use only one of Template or TemplateLink."
        - id: parameters.properties.templateLink
          type: object
          description: "Gets or sets the URI\rreferencing the template. Use only one of Template or TemplateLink."
        - id: parameters.properties.templateLink.uri
          type: string
          description: "URI referencing\rthe template."
        - id: parameters.properties.templateLink.contentVersion
          type: string
          description: "If\rincluded it must match the ContentVersion in the template."
        - id: parameters.properties.parameters
          type: object
          description: "Deployment parameters.\rUse only one of Parameters or ParametersLink."
        - id: parameters.properties.parametersLink
          type: object
          description: "Gets or sets the URI\rreferencing the parameters. Use only one of Parameters or ParametersLink."
        - id: parameters.properties.parametersLink.uri
          type: string
          description: "URI referencing\rthe template."
        - id: parameters.properties.parametersLink.contentVersion
          type: string
          description: "If\rincluded it must match the ContentVersion in the template."
        - id: parameters.properties.mode
          type: string
          description: "Gets or sets the deployment\rmode. Possible values include: 'Incremental', 'Complete'"
        - id: parameters.properties.debugSetting
          type: object
          description: "Gets or sets the debug\rsetting of the deployment."
        - id: parameters.properties.debugSetting.detailLevel
          type: string
          description: "Gets or\rsets the debug detail level."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function createOrUpdate(resourceGroupName, deploymentName, parameters,
        options, callback);
    fullName: >-
      Deployments.createOrUpdate(resourceGroupName, deploymentName, parameters,
      options, callback)
    children:
      - 'Deployments#createOrUpdate~client'
      - 'Deployments#createOrUpdate~callback'
      - 'Deployments#createOrUpdate~options'
  - uid: 'Deployments#beginCreateOrUpdate'
    id: beginCreateOrUpdate
    parent: Deployments
    name: >-
      beginCreateOrUpdate(resourceGroupName, deploymentName, parameters,
      options, callback)
    summary: Create a named template deployment using a template.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment.
        - id: parameters
          type: object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type: object
          description: "Gets or sets the deployment\rproperties."
        - id: parameters.properties.template
          type: object
          description: "Gets or sets the template\rcontent. Use only one of Template or TemplateLink."
        - id: parameters.properties.templateLink
          type: object
          description: "Gets or sets the URI\rreferencing the template. Use only one of Template or TemplateLink."
        - id: parameters.properties.templateLink.uri
          type: string
          description: "URI referencing\rthe template."
        - id: parameters.properties.templateLink.contentVersion
          type: string
          description: "If\rincluded it must match the ContentVersion in the template."
        - id: parameters.properties.parameters
          type: object
          description: "Deployment parameters.\rUse only one of Parameters or ParametersLink."
        - id: parameters.properties.parametersLink
          type: object
          description: "Gets or sets the URI\rreferencing the parameters. Use only one of Parameters or ParametersLink."
        - id: parameters.properties.parametersLink.uri
          type: string
          description: "URI referencing\rthe template."
        - id: parameters.properties.parametersLink.contentVersion
          type: string
          description: "If\rincluded it must match the ContentVersion in the template."
        - id: parameters.properties.mode
          type: string
          description: "Gets or sets the deployment\rmode. Possible values include: 'Incremental', 'Complete'"
        - id: parameters.properties.debugSetting
          type: object
          description: "Gets or sets the debug\rsetting of the deployment."
        - id: parameters.properties.debugSetting.detailLevel
          type: string
          description: "Gets or\rsets the debug detail level."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function beginCreateOrUpdate(resourceGroupName, deploymentName,
        parameters, options, callback);
    fullName: >-
      Deployments.beginCreateOrUpdate(resourceGroupName, deploymentName,
      parameters, options, callback)
    children:
      - 'Deployments#beginCreateOrUpdate~client'
      - 'Deployments#beginCreateOrUpdate~callback'
      - 'Deployments#beginCreateOrUpdate~options'
      - 'Deployments#beginCreateOrUpdate~requestUrl'
      - 'Deployments#beginCreateOrUpdate~requestUrl'
      - 'Deployments#beginCreateOrUpdate~requestUrl'
      - 'Deployments#beginCreateOrUpdate~requestUrl'
      - 'Deployments#beginCreateOrUpdate~queryParameters'
      - 'Deployments#beginCreateOrUpdate~requestUrl'
      - 'Deployments#beginCreateOrUpdate~regex'
      - 'Deployments#beginCreateOrUpdate~requestUrl'
      - 'Deployments#beginCreateOrUpdate~httpRequest'
      - 'Deployments#beginCreateOrUpdate~headerName'
      - 'Deployments#beginCreateOrUpdate~requestContent'
      - 'Deployments#beginCreateOrUpdate~requestModel'
      - 'Deployments#beginCreateOrUpdate~requestModelMapper'
      - 'Deployments#beginCreateOrUpdate~requestModel'
      - 'Deployments#beginCreateOrUpdate~requestContent'
      - 'Deployments#beginCreateOrUpdate~serializationError'
  - uid: 'Deployments#get'
    id: get
    parent: Deployments
    name: 'get(resourceGroupName, deploymentName, options, callback)'
    summary: Get a deployment.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group to get.\rThe name is case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function get(resourceGroupName, deploymentName, options, callback);'
    fullName: 'Deployments.get(resourceGroupName, deploymentName, options, callback)'
    children:
      - 'Deployments#get~client'
      - 'Deployments#get~callback'
      - 'Deployments#get~options'
      - 'Deployments#get~requestUrl'
      - 'Deployments#get~requestUrl'
      - 'Deployments#get~requestUrl'
      - 'Deployments#get~requestUrl'
      - 'Deployments#get~queryParameters'
      - 'Deployments#get~requestUrl'
      - 'Deployments#get~regex'
      - 'Deployments#get~requestUrl'
      - 'Deployments#get~httpRequest'
      - 'Deployments#get~headerName'
  - uid: 'Deployments#cancel'
    id: cancel
    parent: Deployments
    name: 'cancel(resourceGroupName, deploymentName, options, callback)'
    summary: Cancel a currently running template deployment.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function cancel(resourceGroupName, deploymentName, options, callback);'
    fullName: 'Deployments.cancel(resourceGroupName, deploymentName, options, callback)'
    children:
      - 'Deployments#cancel~client'
      - 'Deployments#cancel~callback'
      - 'Deployments#cancel~options'
      - 'Deployments#cancel~requestUrl'
      - 'Deployments#cancel~requestUrl'
      - 'Deployments#cancel~requestUrl'
      - 'Deployments#cancel~requestUrl'
      - 'Deployments#cancel~queryParameters'
      - 'Deployments#cancel~requestUrl'
      - 'Deployments#cancel~regex'
      - 'Deployments#cancel~requestUrl'
      - 'Deployments#cancel~httpRequest'
      - 'Deployments#cancel~headerName'
  - uid: 'Deployments#validate'
    id: validate
    parent: Deployments
    name: 'validate(resourceGroupName, deploymentName, parameters, options, callback)'
    summary: Validate a deployment template.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment.
        - id: parameters
          type: object
          description: Deployment to validate.
        - id: parameters.properties
          type: object
          description: "Gets or sets the deployment\rproperties."
        - id: parameters.properties.template
          type: object
          description: "Gets or sets the template\rcontent. Use only one of Template or TemplateLink."
        - id: parameters.properties.templateLink
          type: object
          description: "Gets or sets the URI\rreferencing the template. Use only one of Template or TemplateLink."
        - id: parameters.properties.templateLink.uri
          type: string
          description: "URI referencing\rthe template."
        - id: parameters.properties.templateLink.contentVersion
          type: string
          description: "If\rincluded it must match the ContentVersion in the template."
        - id: parameters.properties.parameters
          type: object
          description: "Deployment parameters.\rUse only one of Parameters or ParametersLink."
        - id: parameters.properties.parametersLink
          type: object
          description: "Gets or sets the URI\rreferencing the parameters. Use only one of Parameters or ParametersLink."
        - id: parameters.properties.parametersLink.uri
          type: string
          description: "URI referencing\rthe template."
        - id: parameters.properties.parametersLink.contentVersion
          type: string
          description: "If\rincluded it must match the ContentVersion in the template."
        - id: parameters.properties.mode
          type: string
          description: "Gets or sets the deployment\rmode. Possible values include: 'Incremental', 'Complete'"
        - id: parameters.properties.debugSetting
          type: object
          description: "Gets or sets the debug\rsetting of the deployment."
        - id: parameters.properties.debugSetting.detailLevel
          type: string
          description: "Gets or\rsets the debug detail level."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentValidateResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function validate(resourceGroupName, deploymentName, parameters,
        options, callback);
    fullName: >-
      Deployments.validate(resourceGroupName, deploymentName, parameters,
      options, callback)
    children:
      - 'Deployments#validate~client'
      - 'Deployments#validate~callback'
      - 'Deployments#validate~options'
      - 'Deployments#validate~requestUrl'
      - 'Deployments#validate~requestUrl'
      - 'Deployments#validate~requestUrl'
      - 'Deployments#validate~requestUrl'
      - 'Deployments#validate~queryParameters'
      - 'Deployments#validate~requestUrl'
      - 'Deployments#validate~regex'
      - 'Deployments#validate~requestUrl'
      - 'Deployments#validate~httpRequest'
      - 'Deployments#validate~headerName'
      - 'Deployments#validate~requestContent'
      - 'Deployments#validate~requestModel'
      - 'Deployments#validate~requestModelMapper'
      - 'Deployments#validate~requestModel'
      - 'Deployments#validate~requestContent'
      - 'Deployments#validate~serializationError'
  - uid: 'Deployments#exportTemplate'
    id: exportTemplate
    parent: Deployments
    name: 'exportTemplate(resourceGroupName, deploymentName, options, callback)'
    summary: Exports a deployment template.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type: string
          description: The name of the deployment.
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentExportResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function exportTemplate(resourceGroupName, deploymentName, options,
        callback);
    fullName: >-
      Deployments.exportTemplate(resourceGroupName, deploymentName, options,
      callback)
    children:
      - 'Deployments#exportTemplate~client'
      - 'Deployments#exportTemplate~callback'
      - 'Deployments#exportTemplate~options'
      - 'Deployments#exportTemplate~requestUrl'
      - 'Deployments#exportTemplate~requestUrl'
      - 'Deployments#exportTemplate~requestUrl'
      - 'Deployments#exportTemplate~requestUrl'
      - 'Deployments#exportTemplate~queryParameters'
      - 'Deployments#exportTemplate~requestUrl'
      - 'Deployments#exportTemplate~regex'
      - 'Deployments#exportTemplate~requestUrl'
      - 'Deployments#exportTemplate~httpRequest'
      - 'Deployments#exportTemplate~headerName'
  - uid: 'Deployments#list'
    id: list
    parent: Deployments
    name: 'list(resourceGroupName, options, callback)'
    summary: Get a list of deployments.
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type: string
          description: "The name of the resource group to filter\rby. The name is case insensitive."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.filter
          type: string
          description: The filter to apply on the operation.
        - id: options.top
          type: number
          description: "Query parameters. If null is passed returns\rall deployments."
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function list(resourceGroupName, options, callback);'
    fullName: 'Deployments.list(resourceGroupName, options, callback)'
    children:
      - 'Deployments#list~client'
      - 'Deployments#list~callback'
      - 'Deployments#list~options'
      - 'Deployments#list~filter'
      - 'Deployments#list~top'
      - 'Deployments#list~requestUrl'
      - 'Deployments#list~requestUrl'
      - 'Deployments#list~requestUrl'
      - 'Deployments#list~queryParameters'
      - 'Deployments#list~requestUrl'
      - 'Deployments#list~regex'
      - 'Deployments#list~requestUrl'
      - 'Deployments#list~httpRequest'
      - 'Deployments#list~headerName'
  - uid: 'Deployments#listNext'
    id: listNext
    parent: Deployments
    name: 'listNext(nextPageLink, options, callback)'
    summary: Get a list of deployments.
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type: string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type: object
          description: Optional Parameters.
        - id: options.customHeaders
          type: object
          description: "Headers that will be added to the\rrequest"
        - id: callback
          type: function
      return:
        type: function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link DeploymentListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function listNext(nextPageLink, options, callback);'
    fullName: 'Deployments.listNext(nextPageLink, options, callback)'
    children:
      - 'Deployments#listNext~client'
      - 'Deployments#listNext~callback'
      - 'Deployments#listNext~options'
      - 'Deployments#listNext~requestUrl'
      - 'Deployments#listNext~requestUrl'
      - 'Deployments#listNext~regex'
      - 'Deployments#listNext~requestUrl'
      - 'Deployments#listNext~httpRequest'
      - 'Deployments#listNext~headerName'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: false
  - uid: function
    name: function
    fullName: function
    isExternal: false
  - uid: number
    name: number
    fullName: number
    isExternal: true
